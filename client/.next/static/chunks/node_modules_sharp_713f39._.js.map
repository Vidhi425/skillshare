{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/is.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\n/**\n * Is this value defined and not null?\n * @private\n */\nconst defined = function (val) {\n  return typeof val !== 'undefined' && val !== null;\n};\n\n/**\n * Is this value an object?\n * @private\n */\nconst object = function (val) {\n  return typeof val === 'object';\n};\n\n/**\n * Is this value a plain object?\n * @private\n */\nconst plainObject = function (val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n};\n\n/**\n * Is this value a function?\n * @private\n */\nconst fn = function (val) {\n  return typeof val === 'function';\n};\n\n/**\n * Is this value a boolean?\n * @private\n */\nconst bool = function (val) {\n  return typeof val === 'boolean';\n};\n\n/**\n * Is this value a Buffer object?\n * @private\n */\nconst buffer = function (val) {\n  return val instanceof Buffer;\n};\n\n/**\n * Is this value a typed array object?. E.g. Uint8Array or Uint8ClampedArray?\n * @private\n */\nconst typedArray = function (val) {\n  if (defined(val)) {\n    switch (val.constructor) {\n      case Uint8Array:\n      case Uint8ClampedArray:\n      case Int8Array:\n      case Uint16Array:\n      case Int16Array:\n      case Uint32Array:\n      case Int32Array:\n      case Float32Array:\n      case Float64Array:\n        return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Is this value an ArrayBuffer object?\n * @private\n */\nconst arrayBuffer = function (val) {\n  return val instanceof ArrayBuffer;\n};\n\n/**\n * Is this value a non-empty string?\n * @private\n */\nconst string = function (val) {\n  return typeof val === 'string' && val.length > 0;\n};\n\n/**\n * Is this value a real number?\n * @private\n */\nconst number = function (val) {\n  return typeof val === 'number' && !Number.isNaN(val);\n};\n\n/**\n * Is this value an integer?\n * @private\n */\nconst integer = function (val) {\n  return Number.isInteger(val);\n};\n\n/**\n * Is this value within an inclusive given range?\n * @private\n */\nconst inRange = function (val, min, max) {\n  return val >= min && val <= max;\n};\n\n/**\n * Is this value within the elements of an array?\n * @private\n */\nconst inArray = function (val, list) {\n  return list.includes(val);\n};\n\n/**\n * Create an Error with a message relating to an invalid parameter.\n *\n * @param {string} name - parameter name.\n * @param {string} expected - description of the type/value/range expected.\n * @param {*} actual - the value received.\n * @returns {Error} Containing the formatted message.\n * @private\n */\nconst invalidParameterError = function (name, expected, actual) {\n  return new Error(\n    `Expected ${expected} for ${name} but received ${actual} of type ${typeof actual}`\n  );\n};\n\n/**\n * Ensures an Error from C++ contains a JS stack.\n *\n * @param {Error} native - Error with message from C++.\n * @param {Error} context - Error with stack from JS.\n * @returns {Error} Error with message and stack.\n * @private\n */\nconst nativeError = function (native, context) {\n  context.message = native.message;\n  return context;\n};\n\nmodule.exports = {\n  defined,\n  object,\n  plainObject,\n  fn,\n  bool,\n  buffer,\n  typedArray,\n  arrayBuffer,\n  string,\n  number,\n  integer,\n  inRange,\n  inArray,\n  invalidParameterError,\n  nativeError\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,sCAAsC;AAiDd;AA/CxB;AAEA;;;CAGC,GACD,MAAM,UAAU,SAAU,GAAG;IAC3B,OAAO,OAAO,QAAQ,eAAe,QAAQ;AAC/C;AAEA;;;CAGC,GACD,MAAM,SAAS,SAAU,GAAG;IAC1B,OAAO,OAAO,QAAQ;AACxB;AAEA;;;CAGC,GACD,MAAM,cAAc,SAAU,GAAG;IAC/B,OAAO,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS;AACjD;AAEA;;;CAGC,GACD,MAAM,KAAK,SAAU,GAAG;IACtB,OAAO,OAAO,QAAQ;AACxB;AAEA;;;CAGC,GACD,MAAM,OAAO,SAAU,GAAG;IACxB,OAAO,OAAO,QAAQ;AACxB;AAEA;;;CAGC,GACD,MAAM,SAAS,SAAU,GAAG;IAC1B,OAAO,eAAe,8JAAA,CAAA,SAAM;AAC9B;AAEA;;;CAGC,GACD,MAAM,aAAa,SAAU,GAAG;IAC9B,IAAI,QAAQ,MAAM;QAChB,OAAQ,IAAI,WAAW;YACrB,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;gBACH,OAAO;QACX;IACF;IAEA,OAAO;AACT;AAEA;;;CAGC,GACD,MAAM,cAAc,SAAU,GAAG;IAC/B,OAAO,eAAe;AACxB;AAEA;;;CAGC,GACD,MAAM,SAAS,SAAU,GAAG;IAC1B,OAAO,OAAO,QAAQ,YAAY,IAAI,MAAM,GAAG;AACjD;AAEA;;;CAGC,GACD,MAAM,SAAS,SAAU,GAAG;IAC1B,OAAO,OAAO,QAAQ,YAAY,CAAC,OAAO,KAAK,CAAC;AAClD;AAEA;;;CAGC,GACD,MAAM,UAAU,SAAU,GAAG;IAC3B,OAAO,OAAO,SAAS,CAAC;AAC1B;AAEA;;;CAGC,GACD,MAAM,UAAU,SAAU,GAAG,EAAE,GAAG,EAAE,GAAG;IACrC,OAAO,OAAO,OAAO,OAAO;AAC9B;AAEA;;;CAGC,GACD,MAAM,UAAU,SAAU,GAAG,EAAE,IAAI;IACjC,OAAO,KAAK,QAAQ,CAAC;AACvB;AAEA;;;;;;;;CAQC,GACD,MAAM,wBAAwB,SAAU,IAAI,EAAE,QAAQ,EAAE,MAAM;IAC5D,OAAO,IAAI,MACT,CAAC,SAAS,EAAE,SAAS,KAAK,EAAE,KAAK,cAAc,EAAE,OAAO,SAAS,EAAE,OAAO,QAAQ;AAEtF;AAEA;;;;;;;CAOC,GACD,MAAM,cAAc,SAAU,MAAM,EAAE,OAAO;IAC3C,QAAQ,OAAO,GAAG,OAAO,OAAO;IAChC,OAAO;AACT;AAEA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF","ignoreList":[0]}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/libvips.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst { spawnSync } = require('node:child_process');\nconst { createHash } = require('node:crypto');\nconst semverCoerce = require('semver/functions/coerce');\nconst semverGreaterThanOrEqualTo = require('semver/functions/gte');\nconst semverSatisfies = require('semver/functions/satisfies');\nconst detectLibc = require('detect-libc');\n\nconst { config, engines, optionalDependencies } = require('../package.json');\n\nconst minimumLibvipsVersionLabelled = process.env.npm_package_config_libvips || /* istanbul ignore next */\n  config.libvips;\nconst minimumLibvipsVersion = semverCoerce(minimumLibvipsVersionLabelled).version;\n\nconst prebuiltPlatforms = [\n  'darwin-arm64', 'darwin-x64',\n  'linux-arm', 'linux-arm64', 'linux-s390x', 'linux-x64',\n  'linuxmusl-arm64', 'linuxmusl-x64',\n  'win32-ia32', 'win32-x64'\n];\n\nconst spawnSyncOptions = {\n  encoding: 'utf8',\n  shell: true\n};\n\nconst log = (item) => {\n  if (item instanceof Error) {\n    console.error(`sharp: Installation error: ${item.message}`);\n  } else {\n    console.log(`sharp: ${item}`);\n  }\n};\n\n/* istanbul ignore next */\nconst runtimeLibc = () => detectLibc.isNonGlibcLinuxSync() ? detectLibc.familySync() : '';\n\nconst runtimePlatformArch = () => `${process.platform}${runtimeLibc()}-${process.arch}`;\n\n/* istanbul ignore next */\nconst buildPlatformArch = () => {\n  if (isEmscripten()) {\n    return 'wasm32';\n  }\n  /* eslint camelcase: [\"error\", { allow: [\"^npm_config_\"] }] */\n  const { npm_config_arch, npm_config_platform, npm_config_libc } = process.env;\n  const libc = typeof npm_config_libc === 'string' ? npm_config_libc : runtimeLibc();\n  return `${npm_config_platform || process.platform}${libc}-${npm_config_arch || process.arch}`;\n};\n\nconst buildSharpLibvipsIncludeDir = () => {\n  try {\n    return require(`@img/sharp-libvips-dev-${buildPlatformArch()}/include`);\n  } catch {\n    try {\n      return require('@img/sharp-libvips-dev/include');\n    } catch {}\n  }\n  /* istanbul ignore next */\n  return '';\n};\n\nconst buildSharpLibvipsCPlusPlusDir = () => {\n  try {\n    return require('@img/sharp-libvips-dev/cplusplus');\n  } catch {}\n  /* istanbul ignore next */\n  return '';\n};\n\nconst buildSharpLibvipsLibDir = () => {\n  try {\n    return require(`@img/sharp-libvips-dev-${buildPlatformArch()}/lib`);\n  } catch {\n    try {\n      return require(`@img/sharp-libvips-${buildPlatformArch()}/lib`);\n    } catch {}\n  }\n  /* istanbul ignore next */\n  return '';\n};\n\nconst isUnsupportedNodeRuntime = () => {\n  /* istanbul ignore next */\n  if (process.release?.name === 'node' && process.versions) {\n    if (!semverSatisfies(process.versions.node, engines.node)) {\n      return { found: process.versions.node, expected: engines.node };\n    }\n  }\n};\n\n/* istanbul ignore next */\nconst isEmscripten = () => {\n  const { CC } = process.env;\n  return Boolean(CC && CC.endsWith('/emcc'));\n};\n\nconst isRosetta = () => {\n  /* istanbul ignore next */\n  if (process.platform === 'darwin' && process.arch === 'x64') {\n    const translated = spawnSync('sysctl sysctl.proc_translated', spawnSyncOptions).stdout;\n    return (translated || '').trim() === 'sysctl.proc_translated: 1';\n  }\n  return false;\n};\n\nconst sha512 = (s) => createHash('sha512').update(s).digest('hex');\n\nconst yarnLocator = () => {\n  try {\n    const identHash = sha512(`imgsharp-libvips-${buildPlatformArch()}`);\n    const npmVersion = semverCoerce(optionalDependencies[`@img/sharp-libvips-${buildPlatformArch()}`]).version;\n    return sha512(`${identHash}npm:${npmVersion}`).slice(0, 10);\n  } catch {}\n  return '';\n};\n\n/* istanbul ignore next */\nconst spawnRebuild = () =>\n  spawnSync(`node-gyp rebuild --directory=src ${isEmscripten() ? '--nodedir=emscripten' : ''}`, {\n    ...spawnSyncOptions,\n    stdio: 'inherit'\n  }).status;\n\nconst globalLibvipsVersion = () => {\n  if (process.platform !== 'win32') {\n    const globalLibvipsVersion = spawnSync('pkg-config --modversion vips-cpp', {\n      ...spawnSyncOptions,\n      env: {\n        ...process.env,\n        PKG_CONFIG_PATH: pkgConfigPath()\n      }\n    }).stdout;\n    /* istanbul ignore next */\n    return (globalLibvipsVersion || '').trim();\n  } else {\n    return '';\n  }\n};\n\n/* istanbul ignore next */\nconst pkgConfigPath = () => {\n  if (process.platform !== 'win32') {\n    const brewPkgConfigPath = spawnSync(\n      'which brew >/dev/null 2>&1 && brew environment --plain | grep PKG_CONFIG_LIBDIR | cut -d\" \" -f2',\n      spawnSyncOptions\n    ).stdout || '';\n    return [\n      brewPkgConfigPath.trim(),\n      process.env.PKG_CONFIG_PATH,\n      '/usr/local/lib/pkgconfig',\n      '/usr/lib/pkgconfig',\n      '/usr/local/libdata/pkgconfig',\n      '/usr/libdata/pkgconfig'\n    ].filter(Boolean).join(':');\n  } else {\n    return '';\n  }\n};\n\nconst skipSearch = (status, reason, logger) => {\n  if (logger) {\n    logger(`Detected ${reason}, skipping search for globally-installed libvips`);\n  }\n  return status;\n};\n\nconst useGlobalLibvips = (logger) => {\n  if (Boolean(process.env.SHARP_IGNORE_GLOBAL_LIBVIPS) === true) {\n    return skipSearch(false, 'SHARP_IGNORE_GLOBAL_LIBVIPS', logger);\n  }\n  if (Boolean(process.env.SHARP_FORCE_GLOBAL_LIBVIPS) === true) {\n    return skipSearch(true, 'SHARP_FORCE_GLOBAL_LIBVIPS', logger);\n  }\n  /* istanbul ignore next */\n  if (isRosetta()) {\n    return skipSearch(false, 'Rosetta', logger);\n  }\n  const globalVipsVersion = globalLibvipsVersion();\n  return !!globalVipsVersion && /* istanbul ignore next */\n    semverGreaterThanOrEqualTo(globalVipsVersion, minimumLibvipsVersion);\n};\n\nmodule.exports = {\n  minimumLibvipsVersion,\n  prebuiltPlatforms,\n  buildPlatformArch,\n  buildSharpLibvipsIncludeDir,\n  buildSharpLibvipsCPlusPlusDir,\n  buildSharpLibvipsLibDir,\n  isUnsupportedNodeRuntime,\n  runtimePlatformArch,\n  log,\n  yarnLocator,\n  spawnRebuild,\n  globalLibvipsVersion,\n  pkgConfigPath,\n  useGlobalLibvips\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/sharp.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\n// Inspects the runtime environment and exports the relevant sharp.node binary\n\nconst { familySync, versionSync } = require('detect-libc');\n\nconst { runtimePlatformArch, isUnsupportedNodeRuntime, prebuiltPlatforms, minimumLibvipsVersion } = require('./libvips');\nconst runtimePlatform = runtimePlatformArch();\n\nconst paths = [\n  `../src/build/Release/sharp-${runtimePlatform}.node`,\n  '../src/build/Release/sharp-wasm32.node',\n  `@img/sharp-${runtimePlatform}/sharp.node`,\n  '@img/sharp-wasm32/sharp.node'\n];\n\nlet sharp;\nconst errors = [];\nfor (const path of paths) {\n  try {\n    sharp = require(path);\n    break;\n  } catch (err) {\n    /* istanbul ignore next */\n    errors.push(err);\n  }\n}\n\n/* istanbul ignore next */\nif (sharp) {\n  module.exports = sharp;\n} else {\n  const [isLinux, isMacOs, isWindows] = ['linux', 'darwin', 'win32'].map(os => runtimePlatform.startsWith(os));\n\n  const help = [`Could not load the \"sharp\" module using the ${runtimePlatform} runtime`];\n  errors.forEach(err => {\n    if (err.code !== 'MODULE_NOT_FOUND') {\n      help.push(`${err.code}: ${err.message}`);\n    }\n  });\n  const messages = errors.map(err => err.message).join(' ');\n  help.push('Possible solutions:');\n  // Common error messages\n  if (isUnsupportedNodeRuntime()) {\n    const { found, expected } = isUnsupportedNodeRuntime();\n    help.push(\n      '- Please upgrade Node.js:',\n      `    Found ${found}`,\n      `    Requires ${expected}`\n    );\n  } else if (prebuiltPlatforms.includes(runtimePlatform)) {\n    const [os, cpu] = runtimePlatform.split('-');\n    const libc = os.endsWith('musl') ? ' --libc=musl' : '';\n    help.push(\n      '- Ensure optional dependencies can be installed:',\n      '    npm install --include=optional sharp',\n      '- Ensure your package manager supports multi-platform installation:',\n      '    See https://sharp.pixelplumbing.com/install#cross-platform',\n      '- Add platform-specific dependencies:',\n      `    npm install --os=${os.replace('musl', '')}${libc} --cpu=${cpu} sharp`\n    );\n  } else {\n    help.push(\n      `- Manually install libvips >= ${minimumLibvipsVersion}`,\n      '- Add experimental WebAssembly-based dependencies:',\n      '    npm install --cpu=wasm32 sharp',\n      '    npm install @img/sharp-wasm32'\n    );\n  }\n  if (isLinux && /(symbol not found|CXXABI_)/i.test(messages)) {\n    try {\n      const { config } = require(`@img/sharp-libvips-${runtimePlatform}/package`);\n      const libcFound = `${familySync()} ${versionSync()}`;\n      const libcRequires = `${config.musl ? 'musl' : 'glibc'} ${config.musl || config.glibc}`;\n      help.push(\n        '- Update your OS:',\n        `    Found ${libcFound}`,\n        `    Requires ${libcRequires}`\n      );\n    } catch (errEngines) {}\n  }\n  if (isLinux && /\\/snap\\/core[0-9]{2}/.test(messages)) {\n    help.push(\n      '- Remove the Node.js Snap, which does not support native modules',\n      '    snap remove node'\n    );\n  }\n  if (isMacOs && /Incompatible library version/.test(messages)) {\n    help.push(\n      '- Update Homebrew:',\n      '    brew update && brew upgrade vips'\n    );\n  }\n  if (errors.some(err => err.code === 'ERR_DLOPEN_DISABLED')) {\n    help.push('- Run Node.js without using the --no-addons flag');\n  }\n  // Link to installation docs\n  if (isWindows && /The specified procedure could not be found/.test(messages)) {\n    help.push(\n      '- Using the canvas package on Windows?',\n      '    See https://sharp.pixelplumbing.com/install#canvas-and-windows',\n      '- Check for outdated versions of sharp in the dependency tree:',\n      '    npm ls sharp'\n    );\n  }\n  help.push(\n    '- Consult the installation documentation:',\n    '    See https://sharp.pixelplumbing.com/install'\n  );\n  throw new Error(help.join('\\n'));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/constructor.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst util = require('node:util');\nconst stream = require('node:stream');\nconst is = require('./is');\n\nrequire('./sharp');\n\n// Use NODE_DEBUG=sharp to enable libvips warnings\nconst debuglog = util.debuglog('sharp');\n\n/**\n * Constructor factory to create an instance of `sharp`, to which further methods are chained.\n *\n * JPEG, PNG, WebP, GIF, AVIF or TIFF format image data can be streamed out from this object.\n * When using Stream based output, derived attributes are available from the `info` event.\n *\n * Non-critical problems encountered during processing are emitted as `warning` events.\n *\n * Implements the [stream.Duplex](http://nodejs.org/api/stream.html#stream_class_stream_duplex) class.\n *\n * When loading more than one page/frame of an animated image,\n * these are combined as a vertically-stacked \"toilet roll\" image\n * where the overall height is the `pageHeight` multiplied by the number of `pages`.\n *\n * @constructs Sharp\n *\n * @emits Sharp#info\n * @emits Sharp#warning\n *\n * @example\n * sharp('input.jpg')\n *   .resize(300, 200)\n *   .toFile('output.jpg', function(err) {\n *     // output.jpg is a 300 pixels wide and 200 pixels high image\n *     // containing a scaled and cropped version of input.jpg\n *   });\n *\n * @example\n * // Read image data from remote URL,\n * // resize to 300 pixels wide,\n * // emit an 'info' event with calculated dimensions\n * // and finally write image data to writableStream\n * const { body } = fetch('https://...');\n * const readableStream = Readable.fromWeb(body);\n * const transformer = sharp()\n *   .resize(300)\n *   .on('info', ({ height }) => {\n *     console.log(`Image height is ${height}`);\n *   });\n * readableStream.pipe(transformer).pipe(writableStream);\n *\n * @example\n * // Create a blank 300x200 PNG image of semi-translucent red pixels\n * sharp({\n *   create: {\n *     width: 300,\n *     height: 200,\n *     channels: 4,\n *     background: { r: 255, g: 0, b: 0, alpha: 0.5 }\n *   }\n * })\n * .png()\n * .toBuffer()\n * .then( ... );\n *\n * @example\n * // Convert an animated GIF to an animated WebP\n * await sharp('in.gif', { animated: true }).toFile('out.webp');\n *\n * @example\n * // Read a raw array of pixels and save it to a png\n * const input = Uint8Array.from([255, 255, 255, 0, 0, 0]); // or Uint8ClampedArray\n * const image = sharp(input, {\n *   // because the input does not contain its dimensions or how many channels it has\n *   // we need to specify it in the constructor options\n *   raw: {\n *     width: 2,\n *     height: 1,\n *     channels: 3\n *   }\n * });\n * await image.toFile('my-two-pixels.png');\n *\n * @example\n * // Generate RGB Gaussian noise\n * await sharp({\n *   create: {\n *     width: 300,\n *     height: 200,\n *     channels: 3,\n *     noise: {\n *       type: 'gaussian',\n *       mean: 128,\n *       sigma: 30\n *     }\n *  }\n * }).toFile('noise.png');\n *\n * @example\n * // Generate an image from text\n * await sharp({\n *   text: {\n *     text: 'Hello, world!',\n *     width: 400, // max width\n *     height: 300 // max height\n *   }\n * }).toFile('text_bw.png');\n *\n * @example\n * // Generate an rgba image from text using pango markup and font\n * await sharp({\n *   text: {\n *     text: '<span foreground=\"red\">Red!</span><span background=\"cyan\">blue</span>',\n *     font: 'sans',\n *     rgba: true,\n *     dpi: 300\n *   }\n * }).toFile('text_rgba.png');\n *\n * @param {(Buffer|ArrayBuffer|Uint8Array|Uint8ClampedArray|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array|Float32Array|Float64Array|string)} [input] - if present, can be\n *  a Buffer / ArrayBuffer / Uint8Array / Uint8ClampedArray containing JPEG, PNG, WebP, AVIF, GIF, SVG or TIFF image data, or\n *  a TypedArray containing raw pixel image data, or\n *  a String containing the filesystem path to an JPEG, PNG, WebP, AVIF, GIF, SVG or TIFF image file.\n *  JPEG, PNG, WebP, AVIF, GIF, SVG, TIFF or raw pixel image data can be streamed into the object when not present.\n * @param {Object} [options] - if present, is an Object with optional attributes.\n * @param {string} [options.failOn='warning'] - When to abort processing of invalid pixel data, one of (in order of sensitivity, least to most): 'none', 'truncated', 'error', 'warning'. Higher levels imply lower levels. Invalid metadata will always abort.\n * @param {number|boolean} [options.limitInputPixels=268402689] - Do not process input images where the number of pixels\n *  (width x height) exceeds this limit. Assumes image dimensions contained in the input metadata can be trusted.\n *  An integral Number of pixels, zero or false to remove limit, true to use default limit of 268402689 (0x3FFF x 0x3FFF).\n * @param {boolean} [options.unlimited=false] - Set this to `true` to remove safety features that help prevent memory exhaustion (JPEG, PNG, SVG, HEIF).\n * @param {boolean} [options.sequentialRead=true] - Set this to `false` to use random access rather than sequential read. Some operations will do this automatically.\n * @param {number} [options.density=72] - number representing the DPI for vector images in the range 1 to 100000.\n * @param {number} [options.ignoreIcc=false] - should the embedded ICC profile, if any, be ignored.\n * @param {number} [options.pages=1] - Number of pages to extract for multi-page input (GIF, WebP, TIFF), use -1 for all pages.\n * @param {number} [options.page=0] - Page number to start extracting from for multi-page input (GIF, WebP, TIFF), zero based.\n * @param {number} [options.subifd=-1] - subIFD (Sub Image File Directory) to extract for OME-TIFF, defaults to main image.\n * @param {number} [options.level=0] - level to extract from a multi-level input (OpenSlide), zero based.\n * @param {boolean} [options.animated=false] - Set to `true` to read all frames/pages of an animated image (GIF, WebP, TIFF), equivalent of setting `pages` to `-1`.\n * @param {Object} [options.raw] - describes raw pixel input image data. See `raw()` for pixel ordering.\n * @param {number} [options.raw.width] - integral number of pixels wide.\n * @param {number} [options.raw.height] - integral number of pixels high.\n * @param {number} [options.raw.channels] - integral number of channels, between 1 and 4.\n * @param {boolean} [options.raw.premultiplied] - specifies that the raw input has already been premultiplied, set to `true`\n *  to avoid sharp premultiplying the image. (optional, default `false`)\n * @param {Object} [options.create] - describes a new image to be created.\n * @param {number} [options.create.width] - integral number of pixels wide.\n * @param {number} [options.create.height] - integral number of pixels high.\n * @param {number} [options.create.channels] - integral number of channels, either 3 (RGB) or 4 (RGBA).\n * @param {string|Object} [options.create.background] - parsed by the [color](https://www.npmjs.org/package/color) module to extract values for red, green, blue and alpha.\n * @param {Object} [options.create.noise] - describes a noise to be created.\n * @param {string} [options.create.noise.type] - type of generated noise, currently only `gaussian` is supported.\n * @param {number} [options.create.noise.mean] - mean of pixels in generated noise.\n * @param {number} [options.create.noise.sigma] - standard deviation of pixels in generated noise.\n * @param {Object} [options.text] - describes a new text image to be created.\n * @param {string} [options.text.text] - text to render as a UTF-8 string. It can contain Pango markup, for example `<i>Le</i>Monde`.\n * @param {string} [options.text.font] - font name to render with.\n * @param {string} [options.text.fontfile] - absolute filesystem path to a font file that can be used by `font`.\n * @param {number} [options.text.width=0] - Integral number of pixels to word-wrap at. Lines of text wider than this will be broken at word boundaries.\n * @param {number} [options.text.height=0] - Maximum integral number of pixels high. When defined, `dpi` will be ignored and the text will automatically fit the pixel resolution defined by `width` and `height`. Will be ignored if `width` is not specified or set to 0.\n * @param {string} [options.text.align='left'] - Alignment style for multi-line text (`'left'`, `'centre'`, `'center'`, `'right'`).\n * @param {boolean} [options.text.justify=false] - set this to true to apply justification to the text.\n * @param {number} [options.text.dpi=72] - the resolution (size) at which to render the text. Does not take effect if `height` is specified.\n * @param {boolean} [options.text.rgba=false] - set this to true to enable RGBA output. This is useful for colour emoji rendering, or support for pango markup features like `<span foreground=\"red\">Red!</span>`.\n * @param {number} [options.text.spacing=0] - text line height in points. Will use the font line height if none is specified.\n * @param {string} [options.text.wrap='word'] - word wrapping style when width is provided, one of: 'word', 'char', 'word-char' (prefer word, fallback to char) or 'none'.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nconst Sharp = function (input, options) {\n  if (arguments.length === 1 && !is.defined(input)) {\n    throw new Error('Invalid input');\n  }\n  if (!(this instanceof Sharp)) {\n    return new Sharp(input, options);\n  }\n  stream.Duplex.call(this);\n  this.options = {\n    // resize options\n    topOffsetPre: -1,\n    leftOffsetPre: -1,\n    widthPre: -1,\n    heightPre: -1,\n    topOffsetPost: -1,\n    leftOffsetPost: -1,\n    widthPost: -1,\n    heightPost: -1,\n    width: -1,\n    height: -1,\n    canvas: 'crop',\n    position: 0,\n    resizeBackground: [0, 0, 0, 255],\n    useExifOrientation: false,\n    angle: 0,\n    rotationAngle: 0,\n    rotationBackground: [0, 0, 0, 255],\n    rotateBeforePreExtract: false,\n    flip: false,\n    flop: false,\n    extendTop: 0,\n    extendBottom: 0,\n    extendLeft: 0,\n    extendRight: 0,\n    extendBackground: [0, 0, 0, 255],\n    extendWith: 'background',\n    withoutEnlargement: false,\n    withoutReduction: false,\n    affineMatrix: [],\n    affineBackground: [0, 0, 0, 255],\n    affineIdx: 0,\n    affineIdy: 0,\n    affineOdx: 0,\n    affineOdy: 0,\n    affineInterpolator: this.constructor.interpolators.bilinear,\n    kernel: 'lanczos3',\n    fastShrinkOnLoad: true,\n    // operations\n    tint: [-1, 0, 0, 0],\n    flatten: false,\n    flattenBackground: [0, 0, 0],\n    unflatten: false,\n    negate: false,\n    negateAlpha: true,\n    medianSize: 0,\n    blurSigma: 0,\n    precision: 'integer',\n    minAmpl: 0.2,\n    sharpenSigma: 0,\n    sharpenM1: 1,\n    sharpenM2: 2,\n    sharpenX1: 2,\n    sharpenY2: 10,\n    sharpenY3: 20,\n    threshold: 0,\n    thresholdGrayscale: true,\n    trimBackground: [],\n    trimThreshold: -1,\n    trimLineArt: false,\n    gamma: 0,\n    gammaOut: 0,\n    greyscale: false,\n    normalise: false,\n    normaliseLower: 1,\n    normaliseUpper: 99,\n    claheWidth: 0,\n    claheHeight: 0,\n    claheMaxSlope: 3,\n    brightness: 1,\n    saturation: 1,\n    hue: 0,\n    lightness: 0,\n    booleanBufferIn: null,\n    booleanFileIn: '',\n    joinChannelIn: [],\n    extractChannel: -1,\n    removeAlpha: false,\n    ensureAlpha: -1,\n    colourspace: 'srgb',\n    colourspacePipeline: 'last',\n    composite: [],\n    // output\n    fileOut: '',\n    formatOut: 'input',\n    streamOut: false,\n    keepMetadata: 0,\n    withMetadataOrientation: -1,\n    withMetadataDensity: 0,\n    withIccProfile: '',\n    withExif: {},\n    withExifMerge: true,\n    resolveWithObject: false,\n    // output format\n    jpegQuality: 80,\n    jpegProgressive: false,\n    jpegChromaSubsampling: '4:2:0',\n    jpegTrellisQuantisation: false,\n    jpegOvershootDeringing: false,\n    jpegOptimiseScans: false,\n    jpegOptimiseCoding: true,\n    jpegQuantisationTable: 0,\n    pngProgressive: false,\n    pngCompressionLevel: 6,\n    pngAdaptiveFiltering: false,\n    pngPalette: false,\n    pngQuality: 100,\n    pngEffort: 7,\n    pngBitdepth: 8,\n    pngDither: 1,\n    jp2Quality: 80,\n    jp2TileHeight: 512,\n    jp2TileWidth: 512,\n    jp2Lossless: false,\n    jp2ChromaSubsampling: '4:4:4',\n    webpQuality: 80,\n    webpAlphaQuality: 100,\n    webpLossless: false,\n    webpNearLossless: false,\n    webpSmartSubsample: false,\n    webpPreset: 'default',\n    webpEffort: 4,\n    webpMinSize: false,\n    webpMixed: false,\n    gifBitdepth: 8,\n    gifEffort: 7,\n    gifDither: 1,\n    gifInterFrameMaxError: 0,\n    gifInterPaletteMaxError: 3,\n    gifReuse: true,\n    gifProgressive: false,\n    tiffQuality: 80,\n    tiffCompression: 'jpeg',\n    tiffPredictor: 'horizontal',\n    tiffPyramid: false,\n    tiffMiniswhite: false,\n    tiffBitdepth: 8,\n    tiffTile: false,\n    tiffTileHeight: 256,\n    tiffTileWidth: 256,\n    tiffXres: 1.0,\n    tiffYres: 1.0,\n    tiffResolutionUnit: 'inch',\n    heifQuality: 50,\n    heifLossless: false,\n    heifCompression: 'av1',\n    heifEffort: 4,\n    heifChromaSubsampling: '4:4:4',\n    heifBitdepth: 8,\n    jxlDistance: 1,\n    jxlDecodingTier: 0,\n    jxlEffort: 7,\n    jxlLossless: false,\n    rawDepth: 'uchar',\n    tileSize: 256,\n    tileOverlap: 0,\n    tileContainer: 'fs',\n    tileLayout: 'dz',\n    tileFormat: 'last',\n    tileDepth: 'last',\n    tileAngle: 0,\n    tileSkipBlanks: -1,\n    tileBackground: [255, 255, 255, 255],\n    tileCentre: false,\n    tileId: 'https://example.com/iiif',\n    tileBasename: '',\n    timeoutSeconds: 0,\n    linearA: [],\n    linearB: [],\n    // Function to notify of libvips warnings\n    debuglog: warning => {\n      this.emit('warning', warning);\n      debuglog(warning);\n    },\n    // Function to notify of queue length changes\n    queueListener: function (queueLength) {\n      Sharp.queue.emit('change', queueLength);\n    }\n  };\n  this.options.input = this._createInputDescriptor(input, options, { allowStream: true });\n  return this;\n};\nObject.setPrototypeOf(Sharp.prototype, stream.Duplex.prototype);\nObject.setPrototypeOf(Sharp, stream.Duplex);\n\n/**\n * Take a \"snapshot\" of the Sharp instance, returning a new instance.\n * Cloned instances inherit the input of their parent instance.\n * This allows multiple output Streams and therefore multiple processing pipelines to share a single input Stream.\n *\n * @example\n * const pipeline = sharp().rotate();\n * pipeline.clone().resize(800, 600).pipe(firstWritableStream);\n * pipeline.clone().extract({ left: 20, top: 20, width: 100, height: 100 }).pipe(secondWritableStream);\n * readableStream.pipe(pipeline);\n * // firstWritableStream receives auto-rotated, resized readableStream\n * // secondWritableStream receives auto-rotated, extracted region of readableStream\n *\n * @example\n * // Create a pipeline that will download an image, resize it and format it to different files\n * // Using Promises to know when the pipeline is complete\n * const fs = require(\"fs\");\n * const got = require(\"got\");\n * const sharpStream = sharp({ failOn: 'none' });\n *\n * const promises = [];\n *\n * promises.push(\n *   sharpStream\n *     .clone()\n *     .jpeg({ quality: 100 })\n *     .toFile(\"originalFile.jpg\")\n * );\n *\n * promises.push(\n *   sharpStream\n *     .clone()\n *     .resize({ width: 500 })\n *     .jpeg({ quality: 80 })\n *     .toFile(\"optimized-500.jpg\")\n * );\n *\n * promises.push(\n *   sharpStream\n *     .clone()\n *     .resize({ width: 500 })\n *     .webp({ quality: 80 })\n *     .toFile(\"optimized-500.webp\")\n * );\n *\n * // https://github.com/sindresorhus/got/blob/main/documentation/3-streams.md\n * got.stream(\"https://www.example.com/some-file.jpg\").pipe(sharpStream);\n *\n * Promise.all(promises)\n *   .then(res => { console.log(\"Done!\", res); })\n *   .catch(err => {\n *     console.error(\"Error processing files, let's clean it up\", err);\n *     try {\n *       fs.unlinkSync(\"originalFile.jpg\");\n *       fs.unlinkSync(\"optimized-500.jpg\");\n *       fs.unlinkSync(\"optimized-500.webp\");\n *     } catch (e) {}\n *   });\n *\n * @returns {Sharp}\n */\nfunction clone () {\n  // Clone existing options\n  const clone = this.constructor.call();\n  const { debuglog, queueListener, ...options } = this.options;\n  clone.options = structuredClone(options);\n  clone.options.debuglog = debuglog;\n  clone.options.queueListener = queueListener;\n  // Pass 'finish' event to clone for Stream-based input\n  if (this._isStreamInput()) {\n    this.on('finish', () => {\n      // Clone inherits input data\n      this._flattenBufferIn();\n      clone.options.input.buffer = this.options.input.buffer;\n      clone.emit('finish');\n    });\n  }\n  return clone;\n}\nObject.assign(Sharp.prototype, { clone });\n\n/**\n * Export constructor.\n * @private\n */\nmodule.exports = Sharp;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 918, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/input.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst color = require('color');\nconst is = require('./is');\nconst sharp = require('./sharp');\n\n/**\n * Justication alignment\n * @member\n * @private\n */\nconst align = {\n  left: 'low',\n  center: 'centre',\n  centre: 'centre',\n  right: 'high'\n};\n\n/**\n * Extract input options, if any, from an object.\n * @private\n */\nfunction _inputOptionsFromObject (obj) {\n  const { raw, density, limitInputPixels, ignoreIcc, unlimited, sequentialRead, failOn, failOnError, animated, page, pages, subifd } = obj;\n  return [raw, density, limitInputPixels, ignoreIcc, unlimited, sequentialRead, failOn, failOnError, animated, page, pages, subifd].some(is.defined)\n    ? { raw, density, limitInputPixels, ignoreIcc, unlimited, sequentialRead, failOn, failOnError, animated, page, pages, subifd }\n    : undefined;\n}\n\n/**\n * Create Object containing input and input-related options.\n * @private\n */\nfunction _createInputDescriptor (input, inputOptions, containerOptions) {\n  const inputDescriptor = {\n    failOn: 'warning',\n    limitInputPixels: Math.pow(0x3FFF, 2),\n    ignoreIcc: false,\n    unlimited: false,\n    sequentialRead: true\n  };\n  if (is.string(input)) {\n    // filesystem\n    inputDescriptor.file = input;\n  } else if (is.buffer(input)) {\n    // Buffer\n    if (input.length === 0) {\n      throw Error('Input Buffer is empty');\n    }\n    inputDescriptor.buffer = input;\n  } else if (is.arrayBuffer(input)) {\n    if (input.byteLength === 0) {\n      throw Error('Input bit Array is empty');\n    }\n    inputDescriptor.buffer = Buffer.from(input, 0, input.byteLength);\n  } else if (is.typedArray(input)) {\n    if (input.length === 0) {\n      throw Error('Input Bit Array is empty');\n    }\n    inputDescriptor.buffer = Buffer.from(input.buffer, input.byteOffset, input.byteLength);\n  } else if (is.plainObject(input) && !is.defined(inputOptions)) {\n    // Plain Object descriptor, e.g. create\n    inputOptions = input;\n    if (_inputOptionsFromObject(inputOptions)) {\n      // Stream with options\n      inputDescriptor.buffer = [];\n    }\n  } else if (!is.defined(input) && !is.defined(inputOptions) && is.object(containerOptions) && containerOptions.allowStream) {\n    // Stream without options\n    inputDescriptor.buffer = [];\n  } else {\n    throw new Error(`Unsupported input '${input}' of type ${typeof input}${\n      is.defined(inputOptions) ? ` when also providing options of type ${typeof inputOptions}` : ''\n    }`);\n  }\n  if (is.object(inputOptions)) {\n    // Deprecated: failOnError\n    if (is.defined(inputOptions.failOnError)) {\n      if (is.bool(inputOptions.failOnError)) {\n        inputDescriptor.failOn = inputOptions.failOnError ? 'warning' : 'none';\n      } else {\n        throw is.invalidParameterError('failOnError', 'boolean', inputOptions.failOnError);\n      }\n    }\n    // failOn\n    if (is.defined(inputOptions.failOn)) {\n      if (is.string(inputOptions.failOn) && is.inArray(inputOptions.failOn, ['none', 'truncated', 'error', 'warning'])) {\n        inputDescriptor.failOn = inputOptions.failOn;\n      } else {\n        throw is.invalidParameterError('failOn', 'one of: none, truncated, error, warning', inputOptions.failOn);\n      }\n    }\n    // Density\n    if (is.defined(inputOptions.density)) {\n      if (is.inRange(inputOptions.density, 1, 100000)) {\n        inputDescriptor.density = inputOptions.density;\n      } else {\n        throw is.invalidParameterError('density', 'number between 1 and 100000', inputOptions.density);\n      }\n    }\n    // Ignore embeddded ICC profile\n    if (is.defined(inputOptions.ignoreIcc)) {\n      if (is.bool(inputOptions.ignoreIcc)) {\n        inputDescriptor.ignoreIcc = inputOptions.ignoreIcc;\n      } else {\n        throw is.invalidParameterError('ignoreIcc', 'boolean', inputOptions.ignoreIcc);\n      }\n    }\n    // limitInputPixels\n    if (is.defined(inputOptions.limitInputPixels)) {\n      if (is.bool(inputOptions.limitInputPixels)) {\n        inputDescriptor.limitInputPixels = inputOptions.limitInputPixels\n          ? Math.pow(0x3FFF, 2)\n          : 0;\n      } else if (is.integer(inputOptions.limitInputPixels) && is.inRange(inputOptions.limitInputPixels, 0, Number.MAX_SAFE_INTEGER)) {\n        inputDescriptor.limitInputPixels = inputOptions.limitInputPixels;\n      } else {\n        throw is.invalidParameterError('limitInputPixels', 'positive integer', inputOptions.limitInputPixels);\n      }\n    }\n    // unlimited\n    if (is.defined(inputOptions.unlimited)) {\n      if (is.bool(inputOptions.unlimited)) {\n        inputDescriptor.unlimited = inputOptions.unlimited;\n      } else {\n        throw is.invalidParameterError('unlimited', 'boolean', inputOptions.unlimited);\n      }\n    }\n    // sequentialRead\n    if (is.defined(inputOptions.sequentialRead)) {\n      if (is.bool(inputOptions.sequentialRead)) {\n        inputDescriptor.sequentialRead = inputOptions.sequentialRead;\n      } else {\n        throw is.invalidParameterError('sequentialRead', 'boolean', inputOptions.sequentialRead);\n      }\n    }\n    // Raw pixel input\n    if (is.defined(inputOptions.raw)) {\n      if (\n        is.object(inputOptions.raw) &&\n        is.integer(inputOptions.raw.width) && inputOptions.raw.width > 0 &&\n        is.integer(inputOptions.raw.height) && inputOptions.raw.height > 0 &&\n        is.integer(inputOptions.raw.channels) && is.inRange(inputOptions.raw.channels, 1, 4)\n      ) {\n        inputDescriptor.rawWidth = inputOptions.raw.width;\n        inputDescriptor.rawHeight = inputOptions.raw.height;\n        inputDescriptor.rawChannels = inputOptions.raw.channels;\n        inputDescriptor.rawPremultiplied = !!inputOptions.raw.premultiplied;\n\n        switch (input.constructor) {\n          case Uint8Array:\n          case Uint8ClampedArray:\n            inputDescriptor.rawDepth = 'uchar';\n            break;\n          case Int8Array:\n            inputDescriptor.rawDepth = 'char';\n            break;\n          case Uint16Array:\n            inputDescriptor.rawDepth = 'ushort';\n            break;\n          case Int16Array:\n            inputDescriptor.rawDepth = 'short';\n            break;\n          case Uint32Array:\n            inputDescriptor.rawDepth = 'uint';\n            break;\n          case Int32Array:\n            inputDescriptor.rawDepth = 'int';\n            break;\n          case Float32Array:\n            inputDescriptor.rawDepth = 'float';\n            break;\n          case Float64Array:\n            inputDescriptor.rawDepth = 'double';\n            break;\n          default:\n            inputDescriptor.rawDepth = 'uchar';\n            break;\n        }\n      } else {\n        throw new Error('Expected width, height and channels for raw pixel input');\n      }\n    }\n    // Multi-page input (GIF, TIFF, PDF)\n    if (is.defined(inputOptions.animated)) {\n      if (is.bool(inputOptions.animated)) {\n        inputDescriptor.pages = inputOptions.animated ? -1 : 1;\n      } else {\n        throw is.invalidParameterError('animated', 'boolean', inputOptions.animated);\n      }\n    }\n    if (is.defined(inputOptions.pages)) {\n      if (is.integer(inputOptions.pages) && is.inRange(inputOptions.pages, -1, 100000)) {\n        inputDescriptor.pages = inputOptions.pages;\n      } else {\n        throw is.invalidParameterError('pages', 'integer between -1 and 100000', inputOptions.pages);\n      }\n    }\n    if (is.defined(inputOptions.page)) {\n      if (is.integer(inputOptions.page) && is.inRange(inputOptions.page, 0, 100000)) {\n        inputDescriptor.page = inputOptions.page;\n      } else {\n        throw is.invalidParameterError('page', 'integer between 0 and 100000', inputOptions.page);\n      }\n    }\n    // Multi-level input (OpenSlide)\n    if (is.defined(inputOptions.level)) {\n      if (is.integer(inputOptions.level) && is.inRange(inputOptions.level, 0, 256)) {\n        inputDescriptor.level = inputOptions.level;\n      } else {\n        throw is.invalidParameterError('level', 'integer between 0 and 256', inputOptions.level);\n      }\n    }\n    // Sub Image File Directory (TIFF)\n    if (is.defined(inputOptions.subifd)) {\n      if (is.integer(inputOptions.subifd) && is.inRange(inputOptions.subifd, -1, 100000)) {\n        inputDescriptor.subifd = inputOptions.subifd;\n      } else {\n        throw is.invalidParameterError('subifd', 'integer between -1 and 100000', inputOptions.subifd);\n      }\n    }\n    // Create new image\n    if (is.defined(inputOptions.create)) {\n      if (\n        is.object(inputOptions.create) &&\n        is.integer(inputOptions.create.width) && inputOptions.create.width > 0 &&\n        is.integer(inputOptions.create.height) && inputOptions.create.height > 0 &&\n        is.integer(inputOptions.create.channels)\n      ) {\n        inputDescriptor.createWidth = inputOptions.create.width;\n        inputDescriptor.createHeight = inputOptions.create.height;\n        inputDescriptor.createChannels = inputOptions.create.channels;\n        // Noise\n        if (is.defined(inputOptions.create.noise)) {\n          if (!is.object(inputOptions.create.noise)) {\n            throw new Error('Expected noise to be an object');\n          }\n          if (!is.inArray(inputOptions.create.noise.type, ['gaussian'])) {\n            throw new Error('Only gaussian noise is supported at the moment');\n          }\n          if (!is.inRange(inputOptions.create.channels, 1, 4)) {\n            throw is.invalidParameterError('create.channels', 'number between 1 and 4', inputOptions.create.channels);\n          }\n          inputDescriptor.createNoiseType = inputOptions.create.noise.type;\n          if (is.number(inputOptions.create.noise.mean) && is.inRange(inputOptions.create.noise.mean, 0, 10000)) {\n            inputDescriptor.createNoiseMean = inputOptions.create.noise.mean;\n          } else {\n            throw is.invalidParameterError('create.noise.mean', 'number between 0 and 10000', inputOptions.create.noise.mean);\n          }\n          if (is.number(inputOptions.create.noise.sigma) && is.inRange(inputOptions.create.noise.sigma, 0, 10000)) {\n            inputDescriptor.createNoiseSigma = inputOptions.create.noise.sigma;\n          } else {\n            throw is.invalidParameterError('create.noise.sigma', 'number between 0 and 10000', inputOptions.create.noise.sigma);\n          }\n        } else if (is.defined(inputOptions.create.background)) {\n          if (!is.inRange(inputOptions.create.channels, 3, 4)) {\n            throw is.invalidParameterError('create.channels', 'number between 3 and 4', inputOptions.create.channels);\n          }\n          const background = color(inputOptions.create.background);\n          inputDescriptor.createBackground = [\n            background.red(),\n            background.green(),\n            background.blue(),\n            Math.round(background.alpha() * 255)\n          ];\n        } else {\n          throw new Error('Expected valid noise or background to create a new input image');\n        }\n        delete inputDescriptor.buffer;\n      } else {\n        throw new Error('Expected valid width, height and channels to create a new input image');\n      }\n    }\n    // Create a new image with text\n    if (is.defined(inputOptions.text)) {\n      if (is.object(inputOptions.text) && is.string(inputOptions.text.text)) {\n        inputDescriptor.textValue = inputOptions.text.text;\n        if (is.defined(inputOptions.text.height) && is.defined(inputOptions.text.dpi)) {\n          throw new Error('Expected only one of dpi or height');\n        }\n        if (is.defined(inputOptions.text.font)) {\n          if (is.string(inputOptions.text.font)) {\n            inputDescriptor.textFont = inputOptions.text.font;\n          } else {\n            throw is.invalidParameterError('text.font', 'string', inputOptions.text.font);\n          }\n        }\n        if (is.defined(inputOptions.text.fontfile)) {\n          if (is.string(inputOptions.text.fontfile)) {\n            inputDescriptor.textFontfile = inputOptions.text.fontfile;\n          } else {\n            throw is.invalidParameterError('text.fontfile', 'string', inputOptions.text.fontfile);\n          }\n        }\n        if (is.defined(inputOptions.text.width)) {\n          if (is.integer(inputOptions.text.width) && inputOptions.text.width > 0) {\n            inputDescriptor.textWidth = inputOptions.text.width;\n          } else {\n            throw is.invalidParameterError('text.width', 'positive integer', inputOptions.text.width);\n          }\n        }\n        if (is.defined(inputOptions.text.height)) {\n          if (is.integer(inputOptions.text.height) && inputOptions.text.height > 0) {\n            inputDescriptor.textHeight = inputOptions.text.height;\n          } else {\n            throw is.invalidParameterError('text.height', 'positive integer', inputOptions.text.height);\n          }\n        }\n        if (is.defined(inputOptions.text.align)) {\n          if (is.string(inputOptions.text.align) && is.string(this.constructor.align[inputOptions.text.align])) {\n            inputDescriptor.textAlign = this.constructor.align[inputOptions.text.align];\n          } else {\n            throw is.invalidParameterError('text.align', 'valid alignment', inputOptions.text.align);\n          }\n        }\n        if (is.defined(inputOptions.text.justify)) {\n          if (is.bool(inputOptions.text.justify)) {\n            inputDescriptor.textJustify = inputOptions.text.justify;\n          } else {\n            throw is.invalidParameterError('text.justify', 'boolean', inputOptions.text.justify);\n          }\n        }\n        if (is.defined(inputOptions.text.dpi)) {\n          if (is.integer(inputOptions.text.dpi) && is.inRange(inputOptions.text.dpi, 1, 1000000)) {\n            inputDescriptor.textDpi = inputOptions.text.dpi;\n          } else {\n            throw is.invalidParameterError('text.dpi', 'integer between 1 and 1000000', inputOptions.text.dpi);\n          }\n        }\n        if (is.defined(inputOptions.text.rgba)) {\n          if (is.bool(inputOptions.text.rgba)) {\n            inputDescriptor.textRgba = inputOptions.text.rgba;\n          } else {\n            throw is.invalidParameterError('text.rgba', 'bool', inputOptions.text.rgba);\n          }\n        }\n        if (is.defined(inputOptions.text.spacing)) {\n          if (is.integer(inputOptions.text.spacing) && is.inRange(inputOptions.text.spacing, -1000000, 1000000)) {\n            inputDescriptor.textSpacing = inputOptions.text.spacing;\n          } else {\n            throw is.invalidParameterError('text.spacing', 'integer between -1000000 and 1000000', inputOptions.text.spacing);\n          }\n        }\n        if (is.defined(inputOptions.text.wrap)) {\n          if (is.string(inputOptions.text.wrap) && is.inArray(inputOptions.text.wrap, ['word', 'char', 'word-char', 'none'])) {\n            inputDescriptor.textWrap = inputOptions.text.wrap;\n          } else {\n            throw is.invalidParameterError('text.wrap', 'one of: word, char, word-char, none', inputOptions.text.wrap);\n          }\n        }\n        delete inputDescriptor.buffer;\n      } else {\n        throw new Error('Expected a valid string to create an image with text.');\n      }\n    }\n  } else if (is.defined(inputOptions)) {\n    throw new Error('Invalid input options ' + inputOptions);\n  }\n  return inputDescriptor;\n}\n\n/**\n * Handle incoming Buffer chunk on Writable Stream.\n * @private\n * @param {Buffer} chunk\n * @param {string} encoding - unused\n * @param {Function} callback\n */\nfunction _write (chunk, encoding, callback) {\n  /* istanbul ignore else */\n  if (Array.isArray(this.options.input.buffer)) {\n    /* istanbul ignore else */\n    if (is.buffer(chunk)) {\n      if (this.options.input.buffer.length === 0) {\n        this.on('finish', () => {\n          this.streamInFinished = true;\n        });\n      }\n      this.options.input.buffer.push(chunk);\n      callback();\n    } else {\n      callback(new Error('Non-Buffer data on Writable Stream'));\n    }\n  } else {\n    callback(new Error('Unexpected data on Writable Stream'));\n  }\n}\n\n/**\n * Flattens the array of chunks accumulated in input.buffer.\n * @private\n */\nfunction _flattenBufferIn () {\n  if (this._isStreamInput()) {\n    this.options.input.buffer = Buffer.concat(this.options.input.buffer);\n  }\n}\n\n/**\n * Are we expecting Stream-based input?\n * @private\n * @returns {boolean}\n */\nfunction _isStreamInput () {\n  return Array.isArray(this.options.input.buffer);\n}\n\n/**\n * Fast access to (uncached) image metadata without decoding any compressed pixel data.\n *\n * This is read from the header of the input image.\n * It does not take into consideration any operations to be applied to the output image,\n * such as resize or rotate.\n *\n * Dimensions in the response will respect the `page` and `pages` properties of the\n * {@link /api-constructor#parameters|constructor parameters}.\n *\n * A `Promise` is returned when `callback` is not provided.\n *\n * - `format`: Name of decoder used to decompress image data e.g. `jpeg`, `png`, `webp`, `gif`, `svg`\n * - `size`: Total size of image in bytes, for Stream and Buffer input only\n * - `width`: Number of pixels wide (EXIF orientation is not taken into consideration, see example below)\n * - `height`: Number of pixels high (EXIF orientation is not taken into consideration, see example below)\n * - `space`: Name of colour space interpretation e.g. `srgb`, `rgb`, `cmyk`, `lab`, `b-w` [...](https://www.libvips.org/API/current/VipsImage.html#VipsInterpretation)\n * - `channels`: Number of bands e.g. `3` for sRGB, `4` for CMYK\n * - `depth`: Name of pixel depth format e.g. `uchar`, `char`, `ushort`, `float` [...](https://www.libvips.org/API/current/VipsImage.html#VipsBandFormat)\n * - `density`: Number of pixels per inch (DPI), if present\n * - `chromaSubsampling`: String containing JPEG chroma subsampling, `4:2:0` or `4:4:4` for RGB, `4:2:0:4` or `4:4:4:4` for CMYK\n * - `isProgressive`: Boolean indicating whether the image is interlaced using a progressive scan\n * - `pages`: Number of pages/frames contained within the image, with support for TIFF, HEIF, PDF, animated GIF and animated WebP\n * - `pageHeight`: Number of pixels high each page in a multi-page image will be.\n * - `paletteBitDepth`: Bit depth of palette-based image (GIF, PNG).\n * - `loop`: Number of times to loop an animated image, zero refers to a continuous loop.\n * - `delay`: Delay in ms between each page in an animated image, provided as an array of integers.\n * - `pagePrimary`: Number of the primary page in a HEIF image\n * - `levels`: Details of each level in a multi-level image provided as an array of objects, requires libvips compiled with support for OpenSlide\n * - `subifds`: Number of Sub Image File Directories in an OME-TIFF image\n * - `background`: Default background colour, if present, for PNG (bKGD) and GIF images, either an RGB Object or a single greyscale value\n * - `compression`: The encoder used to compress an HEIF file, `av1` (AVIF) or `hevc` (HEIC)\n * - `resolutionUnit`: The unit of resolution (density), either `inch` or `cm`, if present\n * - `hasProfile`: Boolean indicating the presence of an embedded ICC profile\n * - `hasAlpha`: Boolean indicating the presence of an alpha transparency channel\n * - `orientation`: Number value of the EXIF Orientation header, if present\n * - `exif`: Buffer containing raw EXIF data, if present\n * - `icc`: Buffer containing raw [ICC](https://www.npmjs.com/package/icc) profile data, if present\n * - `iptc`: Buffer containing raw IPTC data, if present\n * - `xmp`: Buffer containing raw XMP data, if present\n * - `tifftagPhotoshop`: Buffer containing raw TIFFTAG_PHOTOSHOP data, if present\n * - `formatMagick`: String containing format for images loaded via *magick\n * - `comments`: Array of keyword/text pairs representing PNG text blocks, if present.\n *\n * @example\n * const metadata = await sharp(input).metadata();\n *\n * @example\n * const image = sharp(inputJpg);\n * image\n *   .metadata()\n *   .then(function(metadata) {\n *     return image\n *       .resize(Math.round(metadata.width / 2))\n *       .webp()\n *       .toBuffer();\n *   })\n *   .then(function(data) {\n *     // data contains a WebP image half the width and height of the original JPEG\n *   });\n *\n * @example\n * // Based on EXIF rotation metadata, get the right-side-up width and height:\n *\n * const size = getNormalSize(await sharp(input).metadata());\n *\n * function getNormalSize({ width, height, orientation }) {\n *   return (orientation || 0) >= 5\n *     ? { width: height, height: width }\n *     : { width, height };\n * }\n *\n * @param {Function} [callback] - called with the arguments `(err, metadata)`\n * @returns {Promise<Object>|Sharp}\n */\nfunction metadata (callback) {\n  const stack = Error();\n  if (is.fn(callback)) {\n    if (this._isStreamInput()) {\n      this.on('finish', () => {\n        this._flattenBufferIn();\n        sharp.metadata(this.options, (err, metadata) => {\n          if (err) {\n            callback(is.nativeError(err, stack));\n          } else {\n            callback(null, metadata);\n          }\n        });\n      });\n    } else {\n      sharp.metadata(this.options, (err, metadata) => {\n        if (err) {\n          callback(is.nativeError(err, stack));\n        } else {\n          callback(null, metadata);\n        }\n      });\n    }\n    return this;\n  } else {\n    if (this._isStreamInput()) {\n      return new Promise((resolve, reject) => {\n        const finished = () => {\n          this._flattenBufferIn();\n          sharp.metadata(this.options, (err, metadata) => {\n            if (err) {\n              reject(is.nativeError(err, stack));\n            } else {\n              resolve(metadata);\n            }\n          });\n        };\n        if (this.writableFinished) {\n          finished();\n        } else {\n          this.once('finish', finished);\n        }\n      });\n    } else {\n      return new Promise((resolve, reject) => {\n        sharp.metadata(this.options, (err, metadata) => {\n          if (err) {\n            reject(is.nativeError(err, stack));\n          } else {\n            resolve(metadata);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * Access to pixel-derived image statistics for every channel in the image.\n * A `Promise` is returned when `callback` is not provided.\n *\n * - `channels`: Array of channel statistics for each channel in the image. Each channel statistic contains\n *     - `min` (minimum value in the channel)\n *     - `max` (maximum value in the channel)\n *     - `sum` (sum of all values in a channel)\n *     - `squaresSum` (sum of squared values in a channel)\n *     - `mean` (mean of the values in a channel)\n *     - `stdev` (standard deviation for the values in a channel)\n *     - `minX` (x-coordinate of one of the pixel where the minimum lies)\n *     - `minY` (y-coordinate of one of the pixel where the minimum lies)\n *     - `maxX` (x-coordinate of one of the pixel where the maximum lies)\n *     - `maxY` (y-coordinate of one of the pixel where the maximum lies)\n * - `isOpaque`: Is the image fully opaque? Will be `true` if the image has no alpha channel or if every pixel is fully opaque.\n * - `entropy`: Histogram-based estimation of greyscale entropy, discarding alpha channel if any.\n * - `sharpness`: Estimation of greyscale sharpness based on the standard deviation of a Laplacian convolution, discarding alpha channel if any.\n * - `dominant`: Object containing most dominant sRGB colour based on a 4096-bin 3D histogram.\n *\n * **Note**: Statistics are derived from the original input image. Any operations performed on the image must first be\n * written to a buffer in order to run `stats` on the result (see third example).\n *\n * @example\n * const image = sharp(inputJpg);\n * image\n *   .stats()\n *   .then(function(stats) {\n *      // stats contains the channel-wise statistics array and the isOpaque value\n *   });\n *\n * @example\n * const { entropy, sharpness, dominant } = await sharp(input).stats();\n * const { r, g, b } = dominant;\n *\n * @example\n * const image = sharp(input);\n * // store intermediate result\n * const part = await image.extract(region).toBuffer();\n * // create new instance to obtain statistics of extracted region\n * const stats = await sharp(part).stats();\n *\n * @param {Function} [callback] - called with the arguments `(err, stats)`\n * @returns {Promise<Object>}\n */\nfunction stats (callback) {\n  const stack = Error();\n  if (is.fn(callback)) {\n    if (this._isStreamInput()) {\n      this.on('finish', () => {\n        this._flattenBufferIn();\n        sharp.stats(this.options, (err, stats) => {\n          if (err) {\n            callback(is.nativeError(err, stack));\n          } else {\n            callback(null, stats);\n          }\n        });\n      });\n    } else {\n      sharp.stats(this.options, (err, stats) => {\n        if (err) {\n          callback(is.nativeError(err, stack));\n        } else {\n          callback(null, stats);\n        }\n      });\n    }\n    return this;\n  } else {\n    if (this._isStreamInput()) {\n      return new Promise((resolve, reject) => {\n        this.on('finish', function () {\n          this._flattenBufferIn();\n          sharp.stats(this.options, (err, stats) => {\n            if (err) {\n              reject(is.nativeError(err, stack));\n            } else {\n              resolve(stats);\n            }\n          });\n        });\n      });\n    } else {\n      return new Promise((resolve, reject) => {\n        sharp.stats(this.options, (err, stats) => {\n          if (err) {\n            reject(is.nativeError(err, stack));\n          } else {\n            resolve(stats);\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * Decorate the Sharp prototype with input-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Object.assign(Sharp.prototype, {\n    // Private\n    _inputOptionsFromObject,\n    _createInputDescriptor,\n    _write,\n    _flattenBufferIn,\n    _isStreamInput,\n    // Public\n    metadata,\n    stats\n  });\n  // Class attributes\n  Sharp.align = align;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1586, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/resize.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst is = require('./is');\n\n/**\n * Weighting to apply when using contain/cover fit.\n * @member\n * @private\n */\nconst gravity = {\n  center: 0,\n  centre: 0,\n  north: 1,\n  east: 2,\n  south: 3,\n  west: 4,\n  northeast: 5,\n  southeast: 6,\n  southwest: 7,\n  northwest: 8\n};\n\n/**\n * Position to apply when using contain/cover fit.\n * @member\n * @private\n */\nconst position = {\n  top: 1,\n  right: 2,\n  bottom: 3,\n  left: 4,\n  'right top': 5,\n  'right bottom': 6,\n  'left bottom': 7,\n  'left top': 8\n};\n\n/**\n * How to extend the image.\n * @member\n * @private\n */\nconst extendWith = {\n  background: 'background',\n  copy: 'copy',\n  repeat: 'repeat',\n  mirror: 'mirror'\n};\n\n/**\n * Strategies for automagic cover behaviour.\n * @member\n * @private\n */\nconst strategy = {\n  entropy: 16,\n  attention: 17\n};\n\n/**\n * Reduction kernels.\n * @member\n * @private\n */\nconst kernel = {\n  nearest: 'nearest',\n  linear: 'linear',\n  cubic: 'cubic',\n  mitchell: 'mitchell',\n  lanczos2: 'lanczos2',\n  lanczos3: 'lanczos3'\n};\n\n/**\n * Methods by which an image can be resized to fit the provided dimensions.\n * @member\n * @private\n */\nconst fit = {\n  contain: 'contain',\n  cover: 'cover',\n  fill: 'fill',\n  inside: 'inside',\n  outside: 'outside'\n};\n\n/**\n * Map external fit property to internal canvas property.\n * @member\n * @private\n */\nconst mapFitToCanvas = {\n  contain: 'embed',\n  cover: 'crop',\n  fill: 'ignore_aspect',\n  inside: 'max',\n  outside: 'min'\n};\n\n/**\n * @private\n */\nfunction isRotationExpected (options) {\n  return (options.angle % 360) !== 0 || options.useExifOrientation === true || options.rotationAngle !== 0;\n}\n\n/**\n * @private\n */\nfunction isResizeExpected (options) {\n  return options.width !== -1 || options.height !== -1;\n}\n\n/**\n * Resize image to `width`, `height` or `width x height`.\n *\n * When both a `width` and `height` are provided, the possible methods by which the image should **fit** these are:\n * - `cover`: (default) Preserving aspect ratio, attempt to ensure the image covers both provided dimensions by cropping/clipping to fit.\n * - `contain`: Preserving aspect ratio, contain within both provided dimensions using \"letterboxing\" where necessary.\n * - `fill`: Ignore the aspect ratio of the input and stretch to both provided dimensions.\n * - `inside`: Preserving aspect ratio, resize the image to be as large as possible while ensuring its dimensions are less than or equal to both those specified.\n * - `outside`: Preserving aspect ratio, resize the image to be as small as possible while ensuring its dimensions are greater than or equal to both those specified.\n *\n * Some of these values are based on the [object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property.\n *\n * <img alt=\"Examples of various values for the fit property when resizing\" width=\"100%\" style=\"aspect-ratio: 998/243\" src=\"https://cdn.jsdelivr.net/gh/lovell/sharp@main/docs/image/api-resize-fit.svg\">\n *\n * When using a **fit** of `cover` or `contain`, the default **position** is `centre`. Other options are:\n * - `sharp.position`: `top`, `right top`, `right`, `right bottom`, `bottom`, `left bottom`, `left`, `left top`.\n * - `sharp.gravity`: `north`, `northeast`, `east`, `southeast`, `south`, `southwest`, `west`, `northwest`, `center` or `centre`.\n * - `sharp.strategy`: `cover` only, dynamically crop using either the `entropy` or `attention` strategy.\n *\n * Some of these values are based on the [object-position](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) CSS property.\n *\n * The strategy-based approach initially resizes so one dimension is at its target length\n * then repeatedly ranks edge regions, discarding the edge with the lowest score based on the selected strategy.\n * - `entropy`: focus on the region with the highest [Shannon entropy](https://en.wikipedia.org/wiki/Entropy_%28information_theory%29).\n * - `attention`: focus on the region with the highest luminance frequency, colour saturation and presence of skin tones.\n *\n * Possible downsizing kernels are:\n * - `nearest`: Use [nearest neighbour interpolation](http://en.wikipedia.org/wiki/Nearest-neighbor_interpolation).\n * - `linear`: Use a [triangle filter](https://en.wikipedia.org/wiki/Triangular_function).\n * - `cubic`: Use a [Catmull-Rom spline](https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline).\n * - `mitchell`: Use a [Mitchell-Netravali spline](https://www.cs.utexas.edu/~fussell/courses/cs384g-fall2013/lectures/mitchell/Mitchell.pdf).\n * - `lanczos2`: Use a [Lanczos kernel](https://en.wikipedia.org/wiki/Lanczos_resampling#Lanczos_kernel) with `a=2`.\n * - `lanczos3`: Use a Lanczos kernel with `a=3` (the default).\n *\n * When upsampling, these kernels map to `nearest`, `linear` and `cubic` interpolators.\n * Downsampling kernels without a matching upsampling interpolator map to `cubic`.\n *\n * Only one resize can occur per pipeline.\n * Previous calls to `resize` in the same pipeline will be ignored.\n *\n * @example\n * sharp(input)\n *   .resize({ width: 100 })\n *   .toBuffer()\n *   .then(data => {\n *     // 100 pixels wide, auto-scaled height\n *   });\n *\n * @example\n * sharp(input)\n *   .resize({ height: 100 })\n *   .toBuffer()\n *   .then(data => {\n *     // 100 pixels high, auto-scaled width\n *   });\n *\n * @example\n * sharp(input)\n *   .resize(200, 300, {\n *     kernel: sharp.kernel.nearest,\n *     fit: 'contain',\n *     position: 'right top',\n *     background: { r: 255, g: 255, b: 255, alpha: 0.5 }\n *   })\n *   .toFile('output.png')\n *   .then(() => {\n *     // output.png is a 200 pixels wide and 300 pixels high image\n *     // containing a nearest-neighbour scaled version\n *     // contained within the north-east corner of a semi-transparent white canvas\n *   });\n *\n * @example\n * const transformer = sharp()\n *   .resize({\n *     width: 200,\n *     height: 200,\n *     fit: sharp.fit.cover,\n *     position: sharp.strategy.entropy\n *   });\n * // Read image data from readableStream\n * // Write 200px square auto-cropped image data to writableStream\n * readableStream\n *   .pipe(transformer)\n *   .pipe(writableStream);\n *\n * @example\n * sharp(input)\n *   .resize(200, 200, {\n *     fit: sharp.fit.inside,\n *     withoutEnlargement: true\n *   })\n *   .toFormat('jpeg')\n *   .toBuffer()\n *   .then(function(outputBuffer) {\n *     // outputBuffer contains JPEG image data\n *     // no wider and no higher than 200 pixels\n *     // and no larger than the input image\n *   });\n *\n * @example\n * sharp(input)\n *   .resize(200, 200, {\n *     fit: sharp.fit.outside,\n *     withoutReduction: true\n *   })\n *   .toFormat('jpeg')\n *   .toBuffer()\n *   .then(function(outputBuffer) {\n *     // outputBuffer contains JPEG image data\n *     // of at least 200 pixels wide and 200 pixels high while maintaining aspect ratio\n *     // and no smaller than the input image\n *   });\n *\n * @example\n * const scaleByHalf = await sharp(input)\n *   .metadata()\n *   .then(({ width }) => sharp(input)\n *     .resize(Math.round(width * 0.5))\n *     .toBuffer()\n *   );\n *\n * @param {number} [width] - How many pixels wide the resultant image should be. Use `null` or `undefined` to auto-scale the width to match the height.\n * @param {number} [height] - How many pixels high the resultant image should be. Use `null` or `undefined` to auto-scale the height to match the width.\n * @param {Object} [options]\n * @param {number} [options.width] - An alternative means of specifying `width`. If both are present this takes priority.\n * @param {number} [options.height] - An alternative means of specifying `height`. If both are present this takes priority.\n * @param {String} [options.fit='cover'] - How the image should be resized/cropped to fit the target dimension(s), one of `cover`, `contain`, `fill`, `inside` or `outside`.\n * @param {String} [options.position='centre'] - A position, gravity or strategy to use when `fit` is `cover` or `contain`.\n * @param {String|Object} [options.background={r: 0, g: 0, b: 0, alpha: 1}] - background colour when `fit` is `contain`, parsed by the [color](https://www.npmjs.org/package/color) module, defaults to black without transparency.\n * @param {String} [options.kernel='lanczos3'] - The kernel to use for image reduction and the inferred interpolator to use for upsampling. Use the `fastShrinkOnLoad` option to control kernel vs shrink-on-load.\n * @param {Boolean} [options.withoutEnlargement=false] - Do not scale up if the width *or* height are already less than the target dimensions, equivalent to GraphicsMagick's `>` geometry option. This may result in output dimensions smaller than the target dimensions.\n * @param {Boolean} [options.withoutReduction=false] - Do not scale down if the width *or* height are already greater than the target dimensions, equivalent to GraphicsMagick's `<` geometry option. This may still result in a crop to reach the target dimensions.\n * @param {Boolean} [options.fastShrinkOnLoad=true] - Take greater advantage of the JPEG and WebP shrink-on-load feature, which can lead to a slight moiré pattern or round-down of an auto-scaled dimension.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction resize (widthOrOptions, height, options) {\n  if (isResizeExpected(this.options)) {\n    this.options.debuglog('ignoring previous resize options');\n  }\n  if (this.options.widthPost !== -1) {\n    this.options.debuglog('operation order will be: extract, resize, extract');\n  }\n  if (is.defined(widthOrOptions)) {\n    if (is.object(widthOrOptions) && !is.defined(options)) {\n      options = widthOrOptions;\n    } else if (is.integer(widthOrOptions) && widthOrOptions > 0) {\n      this.options.width = widthOrOptions;\n    } else {\n      throw is.invalidParameterError('width', 'positive integer', widthOrOptions);\n    }\n  } else {\n    this.options.width = -1;\n  }\n  if (is.defined(height)) {\n    if (is.integer(height) && height > 0) {\n      this.options.height = height;\n    } else {\n      throw is.invalidParameterError('height', 'positive integer', height);\n    }\n  } else {\n    this.options.height = -1;\n  }\n  if (is.object(options)) {\n    // Width\n    if (is.defined(options.width)) {\n      if (is.integer(options.width) && options.width > 0) {\n        this.options.width = options.width;\n      } else {\n        throw is.invalidParameterError('width', 'positive integer', options.width);\n      }\n    }\n    // Height\n    if (is.defined(options.height)) {\n      if (is.integer(options.height) && options.height > 0) {\n        this.options.height = options.height;\n      } else {\n        throw is.invalidParameterError('height', 'positive integer', options.height);\n      }\n    }\n    // Fit\n    if (is.defined(options.fit)) {\n      const canvas = mapFitToCanvas[options.fit];\n      if (is.string(canvas)) {\n        this.options.canvas = canvas;\n      } else {\n        throw is.invalidParameterError('fit', 'valid fit', options.fit);\n      }\n    }\n    // Position\n    if (is.defined(options.position)) {\n      const pos = is.integer(options.position)\n        ? options.position\n        : strategy[options.position] || position[options.position] || gravity[options.position];\n      if (is.integer(pos) && (is.inRange(pos, 0, 8) || is.inRange(pos, 16, 17))) {\n        this.options.position = pos;\n      } else {\n        throw is.invalidParameterError('position', 'valid position/gravity/strategy', options.position);\n      }\n    }\n    // Background\n    this._setBackgroundColourOption('resizeBackground', options.background);\n    // Kernel\n    if (is.defined(options.kernel)) {\n      if (is.string(kernel[options.kernel])) {\n        this.options.kernel = kernel[options.kernel];\n      } else {\n        throw is.invalidParameterError('kernel', 'valid kernel name', options.kernel);\n      }\n    }\n    // Without enlargement\n    if (is.defined(options.withoutEnlargement)) {\n      this._setBooleanOption('withoutEnlargement', options.withoutEnlargement);\n    }\n    // Without reduction\n    if (is.defined(options.withoutReduction)) {\n      this._setBooleanOption('withoutReduction', options.withoutReduction);\n    }\n    // Shrink on load\n    if (is.defined(options.fastShrinkOnLoad)) {\n      this._setBooleanOption('fastShrinkOnLoad', options.fastShrinkOnLoad);\n    }\n  }\n  if (isRotationExpected(this.options) && isResizeExpected(this.options)) {\n    this.options.rotateBeforePreExtract = true;\n  }\n  return this;\n}\n\n/**\n * Extend / pad / extrude one or more edges of the image with either\n * the provided background colour or pixels derived from the image.\n * This operation will always occur after resizing and extraction, if any.\n *\n * @example\n * // Resize to 140 pixels wide, then add 10 transparent pixels\n * // to the top, left and right edges and 20 to the bottom edge\n * sharp(input)\n *   .resize(140)\n *   .extend({\n *     top: 10,\n *     bottom: 20,\n *     left: 10,\n *     right: 10,\n *     background: { r: 0, g: 0, b: 0, alpha: 0 }\n *   })\n *   ...\n *\n* @example\n * // Add a row of 10 red pixels to the bottom\n * sharp(input)\n *   .extend({\n *     bottom: 10,\n *     background: 'red'\n *   })\n *   ...\n *\n * @example\n * // Extrude image by 8 pixels to the right, mirroring existing right hand edge\n * sharp(input)\n *   .extend({\n *     right: 8,\n *     background: 'mirror'\n *   })\n *   ...\n *\n * @param {(number|Object)} extend - single pixel count to add to all edges or an Object with per-edge counts\n * @param {number} [extend.top=0]\n * @param {number} [extend.left=0]\n * @param {number} [extend.bottom=0]\n * @param {number} [extend.right=0]\n * @param {String} [extend.extendWith='background'] - populate new pixels using this method, one of: background, copy, repeat, mirror.\n * @param {String|Object} [extend.background={r: 0, g: 0, b: 0, alpha: 1}] - background colour, parsed by the [color](https://www.npmjs.org/package/color) module, defaults to black without transparency.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n*/\nfunction extend (extend) {\n  if (is.integer(extend) && extend > 0) {\n    this.options.extendTop = extend;\n    this.options.extendBottom = extend;\n    this.options.extendLeft = extend;\n    this.options.extendRight = extend;\n  } else if (is.object(extend)) {\n    if (is.defined(extend.top)) {\n      if (is.integer(extend.top) && extend.top >= 0) {\n        this.options.extendTop = extend.top;\n      } else {\n        throw is.invalidParameterError('top', 'positive integer', extend.top);\n      }\n    }\n    if (is.defined(extend.bottom)) {\n      if (is.integer(extend.bottom) && extend.bottom >= 0) {\n        this.options.extendBottom = extend.bottom;\n      } else {\n        throw is.invalidParameterError('bottom', 'positive integer', extend.bottom);\n      }\n    }\n    if (is.defined(extend.left)) {\n      if (is.integer(extend.left) && extend.left >= 0) {\n        this.options.extendLeft = extend.left;\n      } else {\n        throw is.invalidParameterError('left', 'positive integer', extend.left);\n      }\n    }\n    if (is.defined(extend.right)) {\n      if (is.integer(extend.right) && extend.right >= 0) {\n        this.options.extendRight = extend.right;\n      } else {\n        throw is.invalidParameterError('right', 'positive integer', extend.right);\n      }\n    }\n    this._setBackgroundColourOption('extendBackground', extend.background);\n    if (is.defined(extend.extendWith)) {\n      if (is.string(extendWith[extend.extendWith])) {\n        this.options.extendWith = extendWith[extend.extendWith];\n      } else {\n        throw is.invalidParameterError('extendWith', 'one of: background, copy, repeat, mirror', extend.extendWith);\n      }\n    }\n  } else {\n    throw is.invalidParameterError('extend', 'integer or object', extend);\n  }\n  return this;\n}\n\n/**\n * Extract/crop a region of the image.\n *\n * - Use `extract` before `resize` for pre-resize extraction.\n * - Use `extract` after `resize` for post-resize extraction.\n * - Use `extract` twice and `resize` once for extract-then-resize-then-extract in a fixed operation order.\n *\n * @example\n * sharp(input)\n *   .extract({ left: left, top: top, width: width, height: height })\n *   .toFile(output, function(err) {\n *     // Extract a region of the input image, saving in the same format.\n *   });\n * @example\n * sharp(input)\n *   .extract({ left: leftOffsetPre, top: topOffsetPre, width: widthPre, height: heightPre })\n *   .resize(width, height)\n *   .extract({ left: leftOffsetPost, top: topOffsetPost, width: widthPost, height: heightPost })\n *   .toFile(output, function(err) {\n *     // Extract a region, resize, then extract from the resized image\n *   });\n *\n * @param {Object} options - describes the region to extract using integral pixel values\n * @param {number} options.left - zero-indexed offset from left edge\n * @param {number} options.top - zero-indexed offset from top edge\n * @param {number} options.width - width of region to extract\n * @param {number} options.height - height of region to extract\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction extract (options) {\n  const suffix = isResizeExpected(this.options) || this.options.widthPre !== -1 ? 'Post' : 'Pre';\n  if (this.options[`width${suffix}`] !== -1) {\n    this.options.debuglog('ignoring previous extract options');\n  }\n  ['left', 'top', 'width', 'height'].forEach(function (name) {\n    const value = options[name];\n    if (is.integer(value) && value >= 0) {\n      this.options[name + (name === 'left' || name === 'top' ? 'Offset' : '') + suffix] = value;\n    } else {\n      throw is.invalidParameterError(name, 'integer', value);\n    }\n  }, this);\n  // Ensure existing rotation occurs before pre-resize extraction\n  if (isRotationExpected(this.options) && !isResizeExpected(this.options)) {\n    if (this.options.widthPre === -1 || this.options.widthPost === -1) {\n      this.options.rotateBeforePreExtract = true;\n    }\n  }\n  return this;\n}\n\n/**\n * Trim pixels from all edges that contain values similar to the given background colour, which defaults to that of the top-left pixel.\n *\n * Images with an alpha channel will use the combined bounding box of alpha and non-alpha channels.\n *\n * If the result of this operation would trim an image to nothing then no change is made.\n *\n * The `info` response Object will contain `trimOffsetLeft` and `trimOffsetTop` properties.\n *\n * @example\n * // Trim pixels with a colour similar to that of the top-left pixel.\n * await sharp(input)\n *   .trim()\n *   .toFile(output);\n *\n * @example\n * // Trim pixels with the exact same colour as that of the top-left pixel.\n * await sharp(input)\n *   .trim({\n *     threshold: 0\n *   })\n *   .toFile(output);\n *\n * @example\n * // Assume input is line art and trim only pixels with a similar colour to red.\n * const output = await sharp(input)\n *   .trim({\n *     background: \"#FF0000\",\n *     lineArt: true\n *   })\n *   .toBuffer();\n *\n * @example\n * // Trim all \"yellow-ish\" pixels, being more lenient with the higher threshold.\n * const output = await sharp(input)\n *   .trim({\n *     background: \"yellow\",\n *     threshold: 42,\n *   })\n *   .toBuffer();\n *\n * @param {Object} [options]\n * @param {string|Object} [options.background='top-left pixel'] - Background colour, parsed by the [color](https://www.npmjs.org/package/color) module, defaults to that of the top-left pixel.\n * @param {number} [options.threshold=10] - Allowed difference from the above colour, a positive number.\n * @param {boolean} [options.lineArt=false] - Does the input more closely resemble line art (e.g. vector) rather than being photographic?\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction trim (options) {\n  this.options.trimThreshold = 10;\n  if (is.defined(options)) {\n    if (is.object(options)) {\n      if (is.defined(options.background)) {\n        this._setBackgroundColourOption('trimBackground', options.background);\n      }\n      if (is.defined(options.threshold)) {\n        if (is.number(options.threshold) && options.threshold >= 0) {\n          this.options.trimThreshold = options.threshold;\n        } else {\n          throw is.invalidParameterError('threshold', 'positive number', options.threshold);\n        }\n      }\n      if (is.defined(options.lineArt)) {\n        this._setBooleanOption('trimLineArt', options.lineArt);\n      }\n    } else {\n      throw is.invalidParameterError('trim', 'object', options);\n    }\n  }\n  if (isRotationExpected(this.options)) {\n    this.options.rotateBeforePreExtract = true;\n  }\n  return this;\n}\n\n/**\n * Decorate the Sharp prototype with resize-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Object.assign(Sharp.prototype, {\n    resize,\n    extend,\n    extract,\n    trim\n  });\n  // Class attributes\n  Sharp.gravity = gravity;\n  Sharp.strategy = strategy;\n  Sharp.kernel = kernel;\n  Sharp.fit = fit;\n  Sharp.position = position;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/composite.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst is = require('./is');\n\n/**\n * Blend modes.\n * @member\n * @private\n */\nconst blend = {\n  clear: 'clear',\n  source: 'source',\n  over: 'over',\n  in: 'in',\n  out: 'out',\n  atop: 'atop',\n  dest: 'dest',\n  'dest-over': 'dest-over',\n  'dest-in': 'dest-in',\n  'dest-out': 'dest-out',\n  'dest-atop': 'dest-atop',\n  xor: 'xor',\n  add: 'add',\n  saturate: 'saturate',\n  multiply: 'multiply',\n  screen: 'screen',\n  overlay: 'overlay',\n  darken: 'darken',\n  lighten: 'lighten',\n  'colour-dodge': 'colour-dodge',\n  'color-dodge': 'colour-dodge',\n  'colour-burn': 'colour-burn',\n  'color-burn': 'colour-burn',\n  'hard-light': 'hard-light',\n  'soft-light': 'soft-light',\n  difference: 'difference',\n  exclusion: 'exclusion'\n};\n\n/**\n * Composite image(s) over the processed (resized, extracted etc.) image.\n *\n * The images to composite must be the same size or smaller than the processed image.\n * If both `top` and `left` options are provided, they take precedence over `gravity`.\n *\n * Any resize, rotate or extract operations in the same processing pipeline\n * will always be applied to the input image before composition.\n *\n * The `blend` option can be one of `clear`, `source`, `over`, `in`, `out`, `atop`,\n * `dest`, `dest-over`, `dest-in`, `dest-out`, `dest-atop`,\n * `xor`, `add`, `saturate`, `multiply`, `screen`, `overlay`, `darken`, `lighten`,\n * `colour-dodge`, `color-dodge`, `colour-burn`,`color-burn`,\n * `hard-light`, `soft-light`, `difference`, `exclusion`.\n *\n * More information about blend modes can be found at\n * https://www.libvips.org/API/current/libvips-conversion.html#VipsBlendMode\n * and https://www.cairographics.org/operators/\n *\n * @since 0.22.0\n *\n * @example\n * await sharp(background)\n *   .composite([\n *     { input: layer1, gravity: 'northwest' },\n *     { input: layer2, gravity: 'southeast' },\n *   ])\n *   .toFile('combined.png');\n *\n * @example\n * const output = await sharp('input.gif', { animated: true })\n *   .composite([\n *     { input: 'overlay.png', tile: true, blend: 'saturate' }\n *   ])\n *   .toBuffer();\n *\n * @example\n * sharp('input.png')\n *   .rotate(180)\n *   .resize(300)\n *   .flatten( { background: '#ff6600' } )\n *   .composite([{ input: 'overlay.png', gravity: 'southeast' }])\n *   .sharpen()\n *   .withMetadata()\n *   .webp( { quality: 90 } )\n *   .toBuffer()\n *   .then(function(outputBuffer) {\n *     // outputBuffer contains upside down, 300px wide, alpha channel flattened\n *     // onto orange background, composited with overlay.png with SE gravity,\n *     // sharpened, with metadata, 90% quality WebP image data. Phew!\n *   });\n *\n * @param {Object[]} images - Ordered list of images to composite\n * @param {Buffer|String} [images[].input] - Buffer containing image data, String containing the path to an image file, or Create object (see below)\n * @param {Object} [images[].input.create] - describes a blank overlay to be created.\n * @param {Number} [images[].input.create.width]\n * @param {Number} [images[].input.create.height]\n * @param {Number} [images[].input.create.channels] - 3-4\n * @param {String|Object} [images[].input.create.background] - parsed by the [color](https://www.npmjs.org/package/color) module to extract values for red, green, blue and alpha.\n * @param {Object} [images[].input.text] - describes a new text image to be created.\n * @param {string} [images[].input.text.text] - text to render as a UTF-8 string. It can contain Pango markup, for example `<i>Le</i>Monde`.\n * @param {string} [images[].input.text.font] - font name to render with.\n * @param {string} [images[].input.text.fontfile] - absolute filesystem path to a font file that can be used by `font`.\n * @param {number} [images[].input.text.width=0] - integral number of pixels to word-wrap at. Lines of text wider than this will be broken at word boundaries.\n * @param {number} [images[].input.text.height=0] - integral number of pixels high. When defined, `dpi` will be ignored and the text will automatically fit the pixel resolution defined by `width` and `height`. Will be ignored if `width` is not specified or set to 0.\n * @param {string} [images[].input.text.align='left'] - text alignment (`'left'`, `'centre'`, `'center'`, `'right'`).\n * @param {boolean} [images[].input.text.justify=false] - set this to true to apply justification to the text.\n * @param {number} [images[].input.text.dpi=72] - the resolution (size) at which to render the text. Does not take effect if `height` is specified.\n * @param {boolean} [images[].input.text.rgba=false] - set this to true to enable RGBA output. This is useful for colour emoji rendering, or support for Pango markup features like `<span foreground=\"red\">Red!</span>`.\n * @param {number} [images[].input.text.spacing=0] - text line height in points. Will use the font line height if none is specified.\n * @param {String} [images[].blend='over'] - how to blend this image with the image below.\n * @param {String} [images[].gravity='centre'] - gravity at which to place the overlay.\n * @param {Number} [images[].top] - the pixel offset from the top edge.\n * @param {Number} [images[].left] - the pixel offset from the left edge.\n * @param {Boolean} [images[].tile=false] - set to true to repeat the overlay image across the entire image with the given `gravity`.\n * @param {Boolean} [images[].premultiplied=false] - set to true to avoid premultiplying the image below. Equivalent to the `--premultiplied` vips option.\n * @param {Number} [images[].density=72] - number representing the DPI for vector overlay image.\n * @param {Object} [images[].raw] - describes overlay when using raw pixel data.\n * @param {Number} [images[].raw.width]\n * @param {Number} [images[].raw.height]\n * @param {Number} [images[].raw.channels]\n * @param {boolean} [images[].animated=false] - Set to `true` to read all frames/pages of an animated image.\n * @param {string} [images[].failOn='warning'] - @see {@link /api-constructor#parameters|constructor parameters}\n * @param {number|boolean} [images[].limitInputPixels=268402689] - @see {@link /api-constructor#parameters|constructor parameters}\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction composite (images) {\n  if (!Array.isArray(images)) {\n    throw is.invalidParameterError('images to composite', 'array', images);\n  }\n  this.options.composite = images.map(image => {\n    if (!is.object(image)) {\n      throw is.invalidParameterError('image to composite', 'object', image);\n    }\n    const inputOptions = this._inputOptionsFromObject(image);\n    const composite = {\n      input: this._createInputDescriptor(image.input, inputOptions, { allowStream: false }),\n      blend: 'over',\n      tile: false,\n      left: 0,\n      top: 0,\n      hasOffset: false,\n      gravity: 0,\n      premultiplied: false\n    };\n    if (is.defined(image.blend)) {\n      if (is.string(blend[image.blend])) {\n        composite.blend = blend[image.blend];\n      } else {\n        throw is.invalidParameterError('blend', 'valid blend name', image.blend);\n      }\n    }\n    if (is.defined(image.tile)) {\n      if (is.bool(image.tile)) {\n        composite.tile = image.tile;\n      } else {\n        throw is.invalidParameterError('tile', 'boolean', image.tile);\n      }\n    }\n    if (is.defined(image.left)) {\n      if (is.integer(image.left)) {\n        composite.left = image.left;\n      } else {\n        throw is.invalidParameterError('left', 'integer', image.left);\n      }\n    }\n    if (is.defined(image.top)) {\n      if (is.integer(image.top)) {\n        composite.top = image.top;\n      } else {\n        throw is.invalidParameterError('top', 'integer', image.top);\n      }\n    }\n    if (is.defined(image.top) !== is.defined(image.left)) {\n      throw new Error('Expected both left and top to be set');\n    } else {\n      composite.hasOffset = is.integer(image.top) && is.integer(image.left);\n    }\n    if (is.defined(image.gravity)) {\n      if (is.integer(image.gravity) && is.inRange(image.gravity, 0, 8)) {\n        composite.gravity = image.gravity;\n      } else if (is.string(image.gravity) && is.integer(this.constructor.gravity[image.gravity])) {\n        composite.gravity = this.constructor.gravity[image.gravity];\n      } else {\n        throw is.invalidParameterError('gravity', 'valid gravity', image.gravity);\n      }\n    }\n    if (is.defined(image.premultiplied)) {\n      if (is.bool(image.premultiplied)) {\n        composite.premultiplied = image.premultiplied;\n      } else {\n        throw is.invalidParameterError('premultiplied', 'boolean', image.premultiplied);\n      }\n    }\n    return composite;\n  });\n  return this;\n}\n\n/**\n * Decorate the Sharp prototype with composite-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Sharp.prototype.composite = composite;\n  Sharp.blend = blend;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2360, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/operation.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst color = require('color');\nconst is = require('./is');\n\n/**\n * How accurate an operation should be.\n * @member\n * @private\n */\nconst vipsPrecision = {\n  integer: 'integer',\n  float: 'float',\n  approximate: 'approximate'\n};\n\n/**\n * Rotate the output image by either an explicit angle\n * or auto-orient based on the EXIF `Orientation` tag.\n *\n * If an angle is provided, it is converted to a valid positive degree rotation.\n * For example, `-450` will produce a 270 degree rotation.\n *\n * When rotating by an angle other than a multiple of 90,\n * the background colour can be provided with the `background` option.\n *\n * If no angle is provided, it is determined from the EXIF data.\n * Mirroring is supported and may infer the use of a flip operation.\n *\n * The use of `rotate` without an angle will remove the EXIF `Orientation` tag, if any.\n *\n * Only one rotation can occur per pipeline.\n * Previous calls to `rotate` in the same pipeline will be ignored.\n *\n * Multi-page images can only be rotated by 180 degrees.\n *\n * Method order is important when rotating, resizing and/or extracting regions,\n * for example `.rotate(x).extract(y)` will produce a different result to `.extract(y).rotate(x)`.\n *\n * @example\n * const pipeline = sharp()\n *   .rotate()\n *   .resize(null, 200)\n *   .toBuffer(function (err, outputBuffer, info) {\n *     // outputBuffer contains 200px high JPEG image data,\n *     // auto-rotated using EXIF Orientation tag\n *     // info.width and info.height contain the dimensions of the resized image\n *   });\n * readableStream.pipe(pipeline);\n *\n * @example\n * const rotateThenResize = await sharp(input)\n *   .rotate(90)\n *   .resize({ width: 16, height: 8, fit: 'fill' })\n *   .toBuffer();\n * const resizeThenRotate = await sharp(input)\n *   .resize({ width: 16, height: 8, fit: 'fill' })\n *   .rotate(90)\n *   .toBuffer();\n *\n * @param {number} [angle=auto] angle of rotation.\n * @param {Object} [options] - if present, is an Object with optional attributes.\n * @param {string|Object} [options.background=\"#000000\"] parsed by the [color](https://www.npmjs.org/package/color) module to extract values for red, green, blue and alpha.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction rotate (angle, options) {\n  if (this.options.useExifOrientation || this.options.angle || this.options.rotationAngle) {\n    this.options.debuglog('ignoring previous rotate options');\n  }\n  if (!is.defined(angle)) {\n    this.options.useExifOrientation = true;\n  } else if (is.integer(angle) && !(angle % 90)) {\n    this.options.angle = angle;\n  } else if (is.number(angle)) {\n    this.options.rotationAngle = angle;\n    if (is.object(options) && options.background) {\n      const backgroundColour = color(options.background);\n      this.options.rotationBackground = [\n        backgroundColour.red(),\n        backgroundColour.green(),\n        backgroundColour.blue(),\n        Math.round(backgroundColour.alpha() * 255)\n      ];\n    }\n  } else {\n    throw is.invalidParameterError('angle', 'numeric', angle);\n  }\n  return this;\n}\n\n/**\n * Mirror the image vertically (up-down) about the x-axis.\n * This always occurs before rotation, if any.\n *\n * This operation does not work correctly with multi-page images.\n *\n * @example\n * const output = await sharp(input).flip().toBuffer();\n *\n * @param {Boolean} [flip=true]\n * @returns {Sharp}\n */\nfunction flip (flip) {\n  this.options.flip = is.bool(flip) ? flip : true;\n  return this;\n}\n\n/**\n * Mirror the image horizontally (left-right) about the y-axis.\n * This always occurs before rotation, if any.\n *\n * @example\n * const output = await sharp(input).flop().toBuffer();\n *\n * @param {Boolean} [flop=true]\n * @returns {Sharp}\n */\nfunction flop (flop) {\n  this.options.flop = is.bool(flop) ? flop : true;\n  return this;\n}\n\n/**\n * Perform an affine transform on an image. This operation will always occur after resizing, extraction and rotation, if any.\n *\n * You must provide an array of length 4 or a 2x2 affine transformation matrix.\n * By default, new pixels are filled with a black background. You can provide a background color with the `background` option.\n * A particular interpolator may also be specified. Set the `interpolator` option to an attribute of the `sharp.interpolators` Object e.g. `sharp.interpolators.nohalo`.\n *\n * In the case of a 2x2 matrix, the transform is:\n * - X = `matrix[0, 0]` \\* (x + `idx`) + `matrix[0, 1]` \\* (y + `idy`) + `odx`\n * - Y = `matrix[1, 0]` \\* (x + `idx`) + `matrix[1, 1]` \\* (y + `idy`) + `ody`\n *\n * where:\n * - x and y are the coordinates in input image.\n * - X and Y are the coordinates in output image.\n * - (0,0) is the upper left corner.\n *\n * @since 0.27.0\n *\n * @example\n * const pipeline = sharp()\n *   .affine([[1, 0.3], [0.1, 0.7]], {\n *      background: 'white',\n *      interpolator: sharp.interpolators.nohalo\n *   })\n *   .toBuffer((err, outputBuffer, info) => {\n *      // outputBuffer contains the transformed image\n *      // info.width and info.height contain the new dimensions\n *   });\n *\n * inputStream\n *   .pipe(pipeline);\n *\n * @param {Array<Array<number>>|Array<number>} matrix - affine transformation matrix\n * @param {Object} [options] - if present, is an Object with optional attributes.\n * @param {String|Object} [options.background=\"#000000\"] - parsed by the [color](https://www.npmjs.org/package/color) module to extract values for red, green, blue and alpha.\n * @param {Number} [options.idx=0] - input horizontal offset\n * @param {Number} [options.idy=0] - input vertical offset\n * @param {Number} [options.odx=0] - output horizontal offset\n * @param {Number} [options.ody=0] - output vertical offset\n * @param {String} [options.interpolator=sharp.interpolators.bicubic] - interpolator\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction affine (matrix, options) {\n  const flatMatrix = [].concat(...matrix);\n  if (flatMatrix.length === 4 && flatMatrix.every(is.number)) {\n    this.options.affineMatrix = flatMatrix;\n  } else {\n    throw is.invalidParameterError('matrix', '1x4 or 2x2 array', matrix);\n  }\n\n  if (is.defined(options)) {\n    if (is.object(options)) {\n      this._setBackgroundColourOption('affineBackground', options.background);\n      if (is.defined(options.idx)) {\n        if (is.number(options.idx)) {\n          this.options.affineIdx = options.idx;\n        } else {\n          throw is.invalidParameterError('options.idx', 'number', options.idx);\n        }\n      }\n      if (is.defined(options.idy)) {\n        if (is.number(options.idy)) {\n          this.options.affineIdy = options.idy;\n        } else {\n          throw is.invalidParameterError('options.idy', 'number', options.idy);\n        }\n      }\n      if (is.defined(options.odx)) {\n        if (is.number(options.odx)) {\n          this.options.affineOdx = options.odx;\n        } else {\n          throw is.invalidParameterError('options.odx', 'number', options.odx);\n        }\n      }\n      if (is.defined(options.ody)) {\n        if (is.number(options.ody)) {\n          this.options.affineOdy = options.ody;\n        } else {\n          throw is.invalidParameterError('options.ody', 'number', options.ody);\n        }\n      }\n      if (is.defined(options.interpolator)) {\n        if (is.inArray(options.interpolator, Object.values(this.constructor.interpolators))) {\n          this.options.affineInterpolator = options.interpolator;\n        } else {\n          throw is.invalidParameterError('options.interpolator', 'valid interpolator name', options.interpolator);\n        }\n      }\n    } else {\n      throw is.invalidParameterError('options', 'object', options);\n    }\n  }\n\n  return this;\n}\n\n/**\n * Sharpen the image.\n *\n * When used without parameters, performs a fast, mild sharpen of the output image.\n *\n * When a `sigma` is provided, performs a slower, more accurate sharpen of the L channel in the LAB colour space.\n * Fine-grained control over the level of sharpening in \"flat\" (m1) and \"jagged\" (m2) areas is available.\n *\n * See {@link https://www.libvips.org/API/current/libvips-convolution.html#vips-sharpen|libvips sharpen} operation.\n *\n * @example\n * const data = await sharp(input).sharpen().toBuffer();\n *\n * @example\n * const data = await sharp(input).sharpen({ sigma: 2 }).toBuffer();\n *\n * @example\n * const data = await sharp(input)\n *   .sharpen({\n *     sigma: 2,\n *     m1: 0,\n *     m2: 3,\n *     x1: 3,\n *     y2: 15,\n *     y3: 15,\n *   })\n *   .toBuffer();\n *\n * @param {Object|number} [options] - if present, is an Object with attributes\n * @param {number} [options.sigma] - the sigma of the Gaussian mask, where `sigma = 1 + radius / 2`, between 0.000001 and 10\n * @param {number} [options.m1=1.0] - the level of sharpening to apply to \"flat\" areas, between 0 and 1000000\n * @param {number} [options.m2=2.0] - the level of sharpening to apply to \"jagged\" areas, between 0 and 1000000\n * @param {number} [options.x1=2.0] - threshold between \"flat\" and \"jagged\", between 0 and 1000000\n * @param {number} [options.y2=10.0] - maximum amount of brightening, between 0 and 1000000\n * @param {number} [options.y3=20.0] - maximum amount of darkening, between 0 and 1000000\n * @param {number} [flat] - (deprecated) see `options.m1`.\n * @param {number} [jagged] - (deprecated) see `options.m2`.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction sharpen (options, flat, jagged) {\n  if (!is.defined(options)) {\n    // No arguments: default to mild sharpen\n    this.options.sharpenSigma = -1;\n  } else if (is.bool(options)) {\n    // Deprecated boolean argument: apply mild sharpen?\n    this.options.sharpenSigma = options ? -1 : 0;\n  } else if (is.number(options) && is.inRange(options, 0.01, 10000)) {\n    // Deprecated numeric argument: specific sigma\n    this.options.sharpenSigma = options;\n    // Deprecated control over flat areas\n    if (is.defined(flat)) {\n      if (is.number(flat) && is.inRange(flat, 0, 10000)) {\n        this.options.sharpenM1 = flat;\n      } else {\n        throw is.invalidParameterError('flat', 'number between 0 and 10000', flat);\n      }\n    }\n    // Deprecated control over jagged areas\n    if (is.defined(jagged)) {\n      if (is.number(jagged) && is.inRange(jagged, 0, 10000)) {\n        this.options.sharpenM2 = jagged;\n      } else {\n        throw is.invalidParameterError('jagged', 'number between 0 and 10000', jagged);\n      }\n    }\n  } else if (is.plainObject(options)) {\n    if (is.number(options.sigma) && is.inRange(options.sigma, 0.000001, 10)) {\n      this.options.sharpenSigma = options.sigma;\n    } else {\n      throw is.invalidParameterError('options.sigma', 'number between 0.000001 and 10', options.sigma);\n    }\n    if (is.defined(options.m1)) {\n      if (is.number(options.m1) && is.inRange(options.m1, 0, 1000000)) {\n        this.options.sharpenM1 = options.m1;\n      } else {\n        throw is.invalidParameterError('options.m1', 'number between 0 and 1000000', options.m1);\n      }\n    }\n    if (is.defined(options.m2)) {\n      if (is.number(options.m2) && is.inRange(options.m2, 0, 1000000)) {\n        this.options.sharpenM2 = options.m2;\n      } else {\n        throw is.invalidParameterError('options.m2', 'number between 0 and 1000000', options.m2);\n      }\n    }\n    if (is.defined(options.x1)) {\n      if (is.number(options.x1) && is.inRange(options.x1, 0, 1000000)) {\n        this.options.sharpenX1 = options.x1;\n      } else {\n        throw is.invalidParameterError('options.x1', 'number between 0 and 1000000', options.x1);\n      }\n    }\n    if (is.defined(options.y2)) {\n      if (is.number(options.y2) && is.inRange(options.y2, 0, 1000000)) {\n        this.options.sharpenY2 = options.y2;\n      } else {\n        throw is.invalidParameterError('options.y2', 'number between 0 and 1000000', options.y2);\n      }\n    }\n    if (is.defined(options.y3)) {\n      if (is.number(options.y3) && is.inRange(options.y3, 0, 1000000)) {\n        this.options.sharpenY3 = options.y3;\n      } else {\n        throw is.invalidParameterError('options.y3', 'number between 0 and 1000000', options.y3);\n      }\n    }\n  } else {\n    throw is.invalidParameterError('sigma', 'number between 0.01 and 10000', options);\n  }\n  return this;\n}\n\n/**\n * Apply median filter.\n * When used without parameters the default window is 3x3.\n *\n * @example\n * const output = await sharp(input).median().toBuffer();\n *\n * @example\n * const output = await sharp(input).median(5).toBuffer();\n *\n * @param {number} [size=3] square mask size: size x size\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction median (size) {\n  if (!is.defined(size)) {\n    // No arguments: default to 3x3\n    this.options.medianSize = 3;\n  } else if (is.integer(size) && is.inRange(size, 1, 1000)) {\n    // Numeric argument: specific sigma\n    this.options.medianSize = size;\n  } else {\n    throw is.invalidParameterError('size', 'integer between 1 and 1000', size);\n  }\n  return this;\n}\n\n/**\n * Blur the image.\n *\n * When used without parameters, performs a fast 3x3 box blur (equivalent to a box linear filter).\n *\n * When a `sigma` is provided, performs a slower, more accurate Gaussian blur.\n *\n * @example\n * const boxBlurred = await sharp(input)\n *   .blur()\n *   .toBuffer();\n *\n * @example\n * const gaussianBlurred = await sharp(input)\n *   .blur(5)\n *   .toBuffer();\n *\n * @param {Object|number|Boolean} [options]\n * @param {number} [options.sigma] a value between 0.3 and 1000 representing the sigma of the Gaussian mask, where `sigma = 1 + radius / 2`.\n * @param {string} [options.precision='integer'] How accurate the operation should be, one of: integer, float, approximate.\n * @param {number} [options.minAmplitude=0.2] A value between 0.001 and 1. A smaller value will generate a larger, more accurate mask.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction blur (options) {\n  let sigma;\n  if (is.number(options)) {\n    sigma = options;\n  } else if (is.plainObject(options)) {\n    if (!is.number(options.sigma)) {\n      throw is.invalidParameterError('options.sigma', 'number between 0.3 and 1000', sigma);\n    }\n    sigma = options.sigma;\n    if ('precision' in options) {\n      if (is.string(vipsPrecision[options.precision])) {\n        this.options.precision = vipsPrecision[options.precision];\n      } else {\n        throw is.invalidParameterError('precision', 'one of: integer, float, approximate', options.precision);\n      }\n    }\n    if ('minAmplitude' in options) {\n      if (is.number(options.minAmplitude) && is.inRange(options.minAmplitude, 0.001, 1)) {\n        this.options.minAmpl = options.minAmplitude;\n      } else {\n        throw is.invalidParameterError('minAmplitude', 'number between 0.001 and 1', options.minAmplitude);\n      }\n    }\n  }\n\n  if (!is.defined(options)) {\n    // No arguments: default to mild blur\n    this.options.blurSigma = -1;\n  } else if (is.bool(options)) {\n    // Boolean argument: apply mild blur?\n    this.options.blurSigma = options ? -1 : 0;\n  } else if (is.number(sigma) && is.inRange(sigma, 0.3, 1000)) {\n    // Numeric argument: specific sigma\n    this.options.blurSigma = sigma;\n  } else {\n    throw is.invalidParameterError('sigma', 'number between 0.3 and 1000', sigma);\n  }\n\n  return this;\n}\n\n/**\n * Merge alpha transparency channel, if any, with a background, then remove the alpha channel.\n *\n * See also {@link /api-channel#removealpha|removeAlpha}.\n *\n * @example\n * await sharp(rgbaInput)\n *   .flatten({ background: '#F0A703' })\n *   .toBuffer();\n *\n * @param {Object} [options]\n * @param {string|Object} [options.background={r: 0, g: 0, b: 0}] - background colour, parsed by the [color](https://www.npmjs.org/package/color) module, defaults to black.\n * @returns {Sharp}\n */\nfunction flatten (options) {\n  this.options.flatten = is.bool(options) ? options : true;\n  if (is.object(options)) {\n    this._setBackgroundColourOption('flattenBackground', options.background);\n  }\n  return this;\n}\n\n/**\n * Ensure the image has an alpha channel\n * with all white pixel values made fully transparent.\n *\n * Existing alpha channel values for non-white pixels remain unchanged.\n *\n * This feature is experimental and the API may change.\n *\n * @since 0.32.1\n *\n * @example\n * await sharp(rgbInput)\n *   .unflatten()\n *   .toBuffer();\n *\n * @example\n * await sharp(rgbInput)\n *   .threshold(128, { grayscale: false }) // converter bright pixels to white\n *   .unflatten()\n *   .toBuffer();\n */\nfunction unflatten () {\n  this.options.unflatten = true;\n  return this;\n}\n\n/**\n * Apply a gamma correction by reducing the encoding (darken) pre-resize at a factor of `1/gamma`\n * then increasing the encoding (brighten) post-resize at a factor of `gamma`.\n * This can improve the perceived brightness of a resized image in non-linear colour spaces.\n * JPEG and WebP input images will not take advantage of the shrink-on-load performance optimisation\n * when applying a gamma correction.\n *\n * Supply a second argument to use a different output gamma value, otherwise the first value is used in both cases.\n *\n * @param {number} [gamma=2.2] value between 1.0 and 3.0.\n * @param {number} [gammaOut] value between 1.0 and 3.0. (optional, defaults to same as `gamma`)\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction gamma (gamma, gammaOut) {\n  if (!is.defined(gamma)) {\n    // Default gamma correction of 2.2 (sRGB)\n    this.options.gamma = 2.2;\n  } else if (is.number(gamma) && is.inRange(gamma, 1, 3)) {\n    this.options.gamma = gamma;\n  } else {\n    throw is.invalidParameterError('gamma', 'number between 1.0 and 3.0', gamma);\n  }\n  if (!is.defined(gammaOut)) {\n    // Default gamma correction for output is same as input\n    this.options.gammaOut = this.options.gamma;\n  } else if (is.number(gammaOut) && is.inRange(gammaOut, 1, 3)) {\n    this.options.gammaOut = gammaOut;\n  } else {\n    throw is.invalidParameterError('gammaOut', 'number between 1.0 and 3.0', gammaOut);\n  }\n  return this;\n}\n\n/**\n * Produce the \"negative\" of the image.\n *\n * @example\n * const output = await sharp(input)\n *   .negate()\n *   .toBuffer();\n *\n * @example\n * const output = await sharp(input)\n *   .negate({ alpha: false })\n *   .toBuffer();\n *\n * @param {Object} [options]\n * @param {Boolean} [options.alpha=true] Whether or not to negate any alpha channel\n * @returns {Sharp}\n */\nfunction negate (options) {\n  this.options.negate = is.bool(options) ? options : true;\n  if (is.plainObject(options) && 'alpha' in options) {\n    if (!is.bool(options.alpha)) {\n      throw is.invalidParameterError('alpha', 'should be boolean value', options.alpha);\n    } else {\n      this.options.negateAlpha = options.alpha;\n    }\n  }\n  return this;\n}\n\n/**\n * Enhance output image contrast by stretching its luminance to cover a full dynamic range.\n *\n * Uses a histogram-based approach, taking a default range of 1% to 99% to reduce sensitivity to noise at the extremes.\n *\n * Luminance values below the `lower` percentile will be underexposed by clipping to zero.\n * Luminance values above the `upper` percentile will be overexposed by clipping to the max pixel value.\n *\n * @example\n * const output = await sharp(input)\n *   .normalise()\n *   .toBuffer();\n *\n * @example\n * const output = await sharp(input)\n *   .normalise({ lower: 0, upper: 100 })\n *   .toBuffer();\n *\n * @param {Object} [options]\n * @param {number} [options.lower=1] - Percentile below which luminance values will be underexposed.\n * @param {number} [options.upper=99] - Percentile above which luminance values will be overexposed.\n * @returns {Sharp}\n */\nfunction normalise (options) {\n  if (is.plainObject(options)) {\n    if (is.defined(options.lower)) {\n      if (is.number(options.lower) && is.inRange(options.lower, 0, 99)) {\n        this.options.normaliseLower = options.lower;\n      } else {\n        throw is.invalidParameterError('lower', 'number between 0 and 99', options.lower);\n      }\n    }\n    if (is.defined(options.upper)) {\n      if (is.number(options.upper) && is.inRange(options.upper, 1, 100)) {\n        this.options.normaliseUpper = options.upper;\n      } else {\n        throw is.invalidParameterError('upper', 'number between 1 and 100', options.upper);\n      }\n    }\n  }\n  if (this.options.normaliseLower >= this.options.normaliseUpper) {\n    throw is.invalidParameterError('range', 'lower to be less than upper',\n      `${this.options.normaliseLower} >= ${this.options.normaliseUpper}`);\n  }\n  this.options.normalise = true;\n  return this;\n}\n\n/**\n * Alternative spelling of normalise.\n *\n * @example\n * const output = await sharp(input)\n *   .normalize()\n *   .toBuffer();\n *\n * @param {Object} [options]\n * @param {number} [options.lower=1] - Percentile below which luminance values will be underexposed.\n * @param {number} [options.upper=99] - Percentile above which luminance values will be overexposed.\n * @returns {Sharp}\n */\nfunction normalize (options) {\n  return this.normalise(options);\n}\n\n/**\n * Perform contrast limiting adaptive histogram equalization\n * {@link https://en.wikipedia.org/wiki/Adaptive_histogram_equalization#Contrast_Limited_AHE|CLAHE}.\n *\n * This will, in general, enhance the clarity of the image by bringing out darker details.\n *\n * @since 0.28.3\n *\n * @example\n * const output = await sharp(input)\n *   .clahe({\n *     width: 3,\n *     height: 3,\n *   })\n *   .toBuffer();\n *\n * @param {Object} options\n * @param {number} options.width - Integral width of the search window, in pixels.\n * @param {number} options.height - Integral height of the search window, in pixels.\n * @param {number} [options.maxSlope=3] - Integral level of brightening, between 0 and 100, where 0 disables contrast limiting.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction clahe (options) {\n  if (is.plainObject(options)) {\n    if (is.integer(options.width) && options.width > 0) {\n      this.options.claheWidth = options.width;\n    } else {\n      throw is.invalidParameterError('width', 'integer greater than zero', options.width);\n    }\n    if (is.integer(options.height) && options.height > 0) {\n      this.options.claheHeight = options.height;\n    } else {\n      throw is.invalidParameterError('height', 'integer greater than zero', options.height);\n    }\n    if (is.defined(options.maxSlope)) {\n      if (is.integer(options.maxSlope) && is.inRange(options.maxSlope, 0, 100)) {\n        this.options.claheMaxSlope = options.maxSlope;\n      } else {\n        throw is.invalidParameterError('maxSlope', 'integer between 0 and 100', options.maxSlope);\n      }\n    }\n  } else {\n    throw is.invalidParameterError('options', 'plain object', options);\n  }\n  return this;\n}\n\n/**\n * Convolve the image with the specified kernel.\n *\n * @example\n * sharp(input)\n *   .convolve({\n *     width: 3,\n *     height: 3,\n *     kernel: [-1, 0, 1, -2, 0, 2, -1, 0, 1]\n *   })\n *   .raw()\n *   .toBuffer(function(err, data, info) {\n *     // data contains the raw pixel data representing the convolution\n *     // of the input image with the horizontal Sobel operator\n *   });\n *\n * @param {Object} kernel\n * @param {number} kernel.width - width of the kernel in pixels.\n * @param {number} kernel.height - height of the kernel in pixels.\n * @param {Array<number>} kernel.kernel - Array of length `width*height` containing the kernel values.\n * @param {number} [kernel.scale=sum] - the scale of the kernel in pixels.\n * @param {number} [kernel.offset=0] - the offset of the kernel in pixels.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction convolve (kernel) {\n  if (!is.object(kernel) || !Array.isArray(kernel.kernel) ||\n      !is.integer(kernel.width) || !is.integer(kernel.height) ||\n      !is.inRange(kernel.width, 3, 1001) || !is.inRange(kernel.height, 3, 1001) ||\n      kernel.height * kernel.width !== kernel.kernel.length\n  ) {\n    // must pass in a kernel\n    throw new Error('Invalid convolution kernel');\n  }\n  // Default scale is sum of kernel values\n  if (!is.integer(kernel.scale)) {\n    kernel.scale = kernel.kernel.reduce(function (a, b) {\n      return a + b;\n    }, 0);\n  }\n  // Clip scale to a minimum value of 1\n  if (kernel.scale < 1) {\n    kernel.scale = 1;\n  }\n  if (!is.integer(kernel.offset)) {\n    kernel.offset = 0;\n  }\n  this.options.convKernel = kernel;\n  return this;\n}\n\n/**\n * Any pixel value greater than or equal to the threshold value will be set to 255, otherwise it will be set to 0.\n * @param {number} [threshold=128] - a value in the range 0-255 representing the level at which the threshold will be applied.\n * @param {Object} [options]\n * @param {Boolean} [options.greyscale=true] - convert to single channel greyscale.\n * @param {Boolean} [options.grayscale=true] - alternative spelling for greyscale.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction threshold (threshold, options) {\n  if (!is.defined(threshold)) {\n    this.options.threshold = 128;\n  } else if (is.bool(threshold)) {\n    this.options.threshold = threshold ? 128 : 0;\n  } else if (is.integer(threshold) && is.inRange(threshold, 0, 255)) {\n    this.options.threshold = threshold;\n  } else {\n    throw is.invalidParameterError('threshold', 'integer between 0 and 255', threshold);\n  }\n  if (!is.object(options) || options.greyscale === true || options.grayscale === true) {\n    this.options.thresholdGrayscale = true;\n  } else {\n    this.options.thresholdGrayscale = false;\n  }\n  return this;\n}\n\n/**\n * Perform a bitwise boolean operation with operand image.\n *\n * This operation creates an output image where each pixel is the result of\n * the selected bitwise boolean `operation` between the corresponding pixels of the input images.\n *\n * @param {Buffer|string} operand - Buffer containing image data or string containing the path to an image file.\n * @param {string} operator - one of `and`, `or` or `eor` to perform that bitwise operation, like the C logic operators `&`, `|` and `^` respectively.\n * @param {Object} [options]\n * @param {Object} [options.raw] - describes operand when using raw pixel data.\n * @param {number} [options.raw.width]\n * @param {number} [options.raw.height]\n * @param {number} [options.raw.channels]\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction boolean (operand, operator, options) {\n  this.options.boolean = this._createInputDescriptor(operand, options);\n  if (is.string(operator) && is.inArray(operator, ['and', 'or', 'eor'])) {\n    this.options.booleanOp = operator;\n  } else {\n    throw is.invalidParameterError('operator', 'one of: and, or, eor', operator);\n  }\n  return this;\n}\n\n/**\n * Apply the linear formula `a` * input + `b` to the image to adjust image levels.\n *\n * When a single number is provided, it will be used for all image channels.\n * When an array of numbers is provided, the array length must match the number of channels.\n *\n * @example\n * await sharp(input)\n *   .linear(0.5, 2)\n *   .toBuffer();\n *\n * @example\n * await sharp(rgbInput)\n *   .linear(\n *     [0.25, 0.5, 0.75],\n *     [150, 100, 50]\n *   )\n *   .toBuffer();\n *\n * @param {(number|number[])} [a=[]] multiplier\n * @param {(number|number[])} [b=[]] offset\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction linear (a, b) {\n  if (!is.defined(a) && is.number(b)) {\n    a = 1.0;\n  } else if (is.number(a) && !is.defined(b)) {\n    b = 0.0;\n  }\n  if (!is.defined(a)) {\n    this.options.linearA = [];\n  } else if (is.number(a)) {\n    this.options.linearA = [a];\n  } else if (Array.isArray(a) && a.length && a.every(is.number)) {\n    this.options.linearA = a;\n  } else {\n    throw is.invalidParameterError('a', 'number or array of numbers', a);\n  }\n  if (!is.defined(b)) {\n    this.options.linearB = [];\n  } else if (is.number(b)) {\n    this.options.linearB = [b];\n  } else if (Array.isArray(b) && b.length && b.every(is.number)) {\n    this.options.linearB = b;\n  } else {\n    throw is.invalidParameterError('b', 'number or array of numbers', b);\n  }\n  if (this.options.linearA.length !== this.options.linearB.length) {\n    throw new Error('Expected a and b to be arrays of the same length');\n  }\n  return this;\n}\n\n/**\n * Recombine the image with the specified matrix.\n *\n * @since 0.21.1\n *\n * @example\n * sharp(input)\n *   .recomb([\n *    [0.3588, 0.7044, 0.1368],\n *    [0.2990, 0.5870, 0.1140],\n *    [0.2392, 0.4696, 0.0912],\n *   ])\n *   .raw()\n *   .toBuffer(function(err, data, info) {\n *     // data contains the raw pixel data after applying the matrix\n *     // With this example input, a sepia filter has been applied\n *   });\n *\n * @param {Array<Array<number>>} inputMatrix - 3x3 or 4x4 Recombination matrix\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction recomb (inputMatrix) {\n  if (!Array.isArray(inputMatrix)) {\n    throw is.invalidParameterError('inputMatrix', 'array', inputMatrix);\n  }\n  if (inputMatrix.length !== 3 && inputMatrix.length !== 4) {\n    throw is.invalidParameterError('inputMatrix', '3x3 or 4x4 array', inputMatrix.length);\n  }\n  const recombMatrix = inputMatrix.flat().map(Number);\n  if (recombMatrix.length !== 9 && recombMatrix.length !== 16) {\n    throw is.invalidParameterError('inputMatrix', 'cardinality of 9 or 16', recombMatrix.length);\n  }\n  this.options.recombMatrix = recombMatrix;\n  return this;\n}\n\n/**\n * Transforms the image using brightness, saturation, hue rotation, and lightness.\n * Brightness and lightness both operate on luminance, with the difference being that\n * brightness is multiplicative whereas lightness is additive.\n *\n * @since 0.22.1\n *\n * @example\n * // increase brightness by a factor of 2\n * const output = await sharp(input)\n *   .modulate({\n *     brightness: 2\n *   })\n *   .toBuffer();\n *\n * @example\n * // hue-rotate by 180 degrees\n * const output = await sharp(input)\n *   .modulate({\n *     hue: 180\n *   })\n *   .toBuffer();\n *\n * @example\n * // increase lightness by +50\n * const output = await sharp(input)\n *   .modulate({\n *     lightness: 50\n *   })\n *   .toBuffer();\n *\n * @example\n * // decrease brightness and saturation while also hue-rotating by 90 degrees\n * const output = await sharp(input)\n *   .modulate({\n *     brightness: 0.5,\n *     saturation: 0.5,\n *     hue: 90,\n *   })\n *   .toBuffer();\n *\n * @param {Object} [options]\n * @param {number} [options.brightness] Brightness multiplier\n * @param {number} [options.saturation] Saturation multiplier\n * @param {number} [options.hue] Degrees for hue rotation\n * @param {number} [options.lightness] Lightness addend\n * @returns {Sharp}\n */\nfunction modulate (options) {\n  if (!is.plainObject(options)) {\n    throw is.invalidParameterError('options', 'plain object', options);\n  }\n  if ('brightness' in options) {\n    if (is.number(options.brightness) && options.brightness >= 0) {\n      this.options.brightness = options.brightness;\n    } else {\n      throw is.invalidParameterError('brightness', 'number above zero', options.brightness);\n    }\n  }\n  if ('saturation' in options) {\n    if (is.number(options.saturation) && options.saturation >= 0) {\n      this.options.saturation = options.saturation;\n    } else {\n      throw is.invalidParameterError('saturation', 'number above zero', options.saturation);\n    }\n  }\n  if ('hue' in options) {\n    if (is.integer(options.hue)) {\n      this.options.hue = options.hue % 360;\n    } else {\n      throw is.invalidParameterError('hue', 'number', options.hue);\n    }\n  }\n  if ('lightness' in options) {\n    if (is.number(options.lightness)) {\n      this.options.lightness = options.lightness;\n    } else {\n      throw is.invalidParameterError('lightness', 'number', options.lightness);\n    }\n  }\n  return this;\n}\n\n/**\n * Decorate the Sharp prototype with operation-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Object.assign(Sharp.prototype, {\n    rotate,\n    flip,\n    flop,\n    affine,\n    sharpen,\n    median,\n    blur,\n    flatten,\n    unflatten,\n    gamma,\n    negate,\n    normalise,\n    normalize,\n    clahe,\n    convolve,\n    threshold,\n    boolean,\n    linear,\n    recomb,\n    modulate\n  });\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3276, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/colour.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst color = require('color');\nconst is = require('./is');\n\n/**\n * Colourspaces.\n * @private\n */\nconst colourspace = {\n  multiband: 'multiband',\n  'b-w': 'b-w',\n  bw: 'b-w',\n  cmyk: 'cmyk',\n  srgb: 'srgb'\n};\n\n/**\n * Tint the image using the provided colour.\n * An alpha channel may be present and will be unchanged by the operation.\n *\n * @example\n * const output = await sharp(input)\n *   .tint({ r: 255, g: 240, b: 16 })\n *   .toBuffer();\n *\n * @param {string|Object} tint - Parsed by the [color](https://www.npmjs.org/package/color) module.\n * @returns {Sharp}\n * @throws {Error} Invalid parameter\n */\nfunction tint (tint) {\n  this._setBackgroundColourOption('tint', tint);\n  return this;\n}\n\n/**\n * Convert to 8-bit greyscale; 256 shades of grey.\n * This is a linear operation. If the input image is in a non-linear colour space such as sRGB, use `gamma()` with `greyscale()` for the best results.\n * By default the output image will be web-friendly sRGB and contain three (identical) color channels.\n * This may be overridden by other sharp operations such as `toColourspace('b-w')`,\n * which will produce an output image containing one color channel.\n * An alpha channel may be present, and will be unchanged by the operation.\n *\n * @example\n * const output = await sharp(input).greyscale().toBuffer();\n *\n * @param {Boolean} [greyscale=true]\n * @returns {Sharp}\n */\nfunction greyscale (greyscale) {\n  this.options.greyscale = is.bool(greyscale) ? greyscale : true;\n  return this;\n}\n\n/**\n * Alternative spelling of `greyscale`.\n * @param {Boolean} [grayscale=true]\n * @returns {Sharp}\n */\nfunction grayscale (grayscale) {\n  return this.greyscale(grayscale);\n}\n\n/**\n * Set the pipeline colourspace.\n *\n * The input image will be converted to the provided colourspace at the start of the pipeline.\n * All operations will use this colourspace before converting to the output colourspace,\n * as defined by {@link #tocolourspace|toColourspace}.\n *\n * @since 0.29.0\n *\n * @example\n * // Run pipeline in 16 bits per channel RGB while converting final result to 8 bits per channel sRGB.\n * await sharp(input)\n *  .pipelineColourspace('rgb16')\n *  .toColourspace('srgb')\n *  .toFile('16bpc-pipeline-to-8bpc-output.png')\n *\n * @param {string} [colourspace] - pipeline colourspace e.g. `rgb16`, `scrgb`, `lab`, `grey16` [...](https://github.com/libvips/libvips/blob/41cff4e9d0838498487a00623462204eb10ee5b8/libvips/iofuncs/enumtypes.c#L774)\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction pipelineColourspace (colourspace) {\n  if (!is.string(colourspace)) {\n    throw is.invalidParameterError('colourspace', 'string', colourspace);\n  }\n  this.options.colourspacePipeline = colourspace;\n  return this;\n}\n\n/**\n * Alternative spelling of `pipelineColourspace`.\n * @param {string} [colorspace] - pipeline colorspace.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction pipelineColorspace (colorspace) {\n  return this.pipelineColourspace(colorspace);\n}\n\n/**\n * Set the output colourspace.\n * By default output image will be web-friendly sRGB, with additional channels interpreted as alpha channels.\n *\n * @example\n * // Output 16 bits per pixel RGB\n * await sharp(input)\n *  .toColourspace('rgb16')\n *  .toFile('16-bpp.png')\n *\n * @param {string} [colourspace] - output colourspace e.g. `srgb`, `rgb`, `cmyk`, `lab`, `b-w` [...](https://github.com/libvips/libvips/blob/3c0bfdf74ce1dc37a6429bed47fa76f16e2cd70a/libvips/iofuncs/enumtypes.c#L777-L794)\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction toColourspace (colourspace) {\n  if (!is.string(colourspace)) {\n    throw is.invalidParameterError('colourspace', 'string', colourspace);\n  }\n  this.options.colourspace = colourspace;\n  return this;\n}\n\n/**\n * Alternative spelling of `toColourspace`.\n * @param {string} [colorspace] - output colorspace.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction toColorspace (colorspace) {\n  return this.toColourspace(colorspace);\n}\n\n/**\n * Update a colour attribute of the this.options Object.\n * @private\n * @param {string} key\n * @param {string|Object} value\n * @throws {Error} Invalid value\n */\nfunction _setBackgroundColourOption (key, value) {\n  if (is.defined(value)) {\n    if (is.object(value) || is.string(value)) {\n      const colour = color(value);\n      this.options[key] = [\n        colour.red(),\n        colour.green(),\n        colour.blue(),\n        Math.round(colour.alpha() * 255)\n      ];\n    } else {\n      throw is.invalidParameterError('background', 'object or string', value);\n    }\n  }\n}\n\n/**\n * Decorate the Sharp prototype with colour-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Object.assign(Sharp.prototype, {\n    // Public\n    tint,\n    greyscale,\n    grayscale,\n    pipelineColourspace,\n    pipelineColorspace,\n    toColourspace,\n    toColorspace,\n    // Private\n    _setBackgroundColourOption\n  });\n  // Class attributes\n  Sharp.colourspace = colourspace;\n  Sharp.colorspace = colourspace;\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,sCAAsC;AAEtC;AAEA,MAAM;AACN,MAAM;AAEN;;;CAGC,GACD,MAAM,cAAc;IAClB,WAAW;IACX,OAAO;IACP,IAAI;IACJ,MAAM;IACN,MAAM;AACR;AAEA;;;;;;;;;;;;CAYC,GACD,SAAS,KAAM,IAAI;IACjB,IAAI,CAAC,0BAA0B,CAAC,QAAQ;IACxC,OAAO,IAAI;AACb;AAEA;;;;;;;;;;;;;CAaC,GACD,SAAS,UAAW,SAAS;IAC3B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,IAAI,CAAC,aAAa,YAAY;IAC1D,OAAO,IAAI;AACb;AAEA;;;;CAIC,GACD,SAAS,UAAW,SAAS;IAC3B,OAAO,IAAI,CAAC,SAAS,CAAC;AACxB;AAEA;;;;;;;;;;;;;;;;;;;CAmBC,GACD,SAAS,oBAAqB,WAAW;IACvC,IAAI,CAAC,GAAG,MAAM,CAAC,cAAc;QAC3B,MAAM,GAAG,qBAAqB,CAAC,eAAe,UAAU;IAC1D;IACA,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG;IACnC,OAAO,IAAI;AACb;AAEA;;;;;CAKC,GACD,SAAS,mBAAoB,UAAU;IACrC,OAAO,IAAI,CAAC,mBAAmB,CAAC;AAClC;AAEA;;;;;;;;;;;;;CAaC,GACD,SAAS,cAAe,WAAW;IACjC,IAAI,CAAC,GAAG,MAAM,CAAC,cAAc;QAC3B,MAAM,GAAG,qBAAqB,CAAC,eAAe,UAAU;IAC1D;IACA,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC3B,OAAO,IAAI;AACb;AAEA;;;;;CAKC,GACD,SAAS,aAAc,UAAU;IAC/B,OAAO,IAAI,CAAC,aAAa,CAAC;AAC5B;AAEA;;;;;;CAMC,GACD,SAAS,2BAA4B,GAAG,EAAE,KAAK;IAC7C,IAAI,GAAG,OAAO,CAAC,QAAQ;QACrB,IAAI,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ;YACxC,MAAM,SAAS,MAAM;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG;gBAClB,OAAO,GAAG;gBACV,OAAO,KAAK;gBACZ,OAAO,IAAI;gBACX,KAAK,KAAK,CAAC,OAAO,KAAK,KAAK;aAC7B;QACH,OAAO;YACL,MAAM,GAAG,qBAAqB,CAAC,cAAc,oBAAoB;QACnE;IACF;AACF;AAEA;;;CAGC,GACD,OAAO,OAAO,GAAG,SAAU,KAAK;IAC9B,OAAO,MAAM,CAAC,MAAM,SAAS,EAAE;QAC7B,SAAS;QACT;QACA;QACA;QACA;QACA;QACA;QACA;QACA,UAAU;QACV;IACF;IACA,mBAAmB;IACnB,MAAM,WAAW,GAAG;IACpB,MAAM,UAAU,GAAG;AACrB","ignoreList":[0]}},
    {"offset": {"line": 3434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3439, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/channel.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst is = require('./is');\n\n/**\n * Boolean operations for bandbool.\n * @private\n */\nconst bool = {\n  and: 'and',\n  or: 'or',\n  eor: 'eor'\n};\n\n/**\n * Remove alpha channel, if any. This is a no-op if the image does not have an alpha channel.\n *\n * See also {@link /api-operation#flatten|flatten}.\n *\n * @example\n * sharp('rgba.png')\n *   .removeAlpha()\n *   .toFile('rgb.png', function(err, info) {\n *     // rgb.png is a 3 channel image without an alpha channel\n *   });\n *\n * @returns {Sharp}\n */\nfunction removeAlpha () {\n  this.options.removeAlpha = true;\n  return this;\n}\n\n/**\n * Ensure the output image has an alpha transparency channel.\n * If missing, the added alpha channel will have the specified\n * transparency level, defaulting to fully-opaque (1).\n * This is a no-op if the image already has an alpha channel.\n *\n * @since 0.21.2\n *\n * @example\n * // rgba.png will be a 4 channel image with a fully-opaque alpha channel\n * await sharp('rgb.jpg')\n *   .ensureAlpha()\n *   .toFile('rgba.png')\n *\n * @example\n * // rgba is a 4 channel image with a fully-transparent alpha channel\n * const rgba = await sharp(rgb)\n *   .ensureAlpha(0)\n *   .toBuffer();\n *\n * @param {number} [alpha=1] - alpha transparency level (0=fully-transparent, 1=fully-opaque)\n * @returns {Sharp}\n * @throws {Error} Invalid alpha transparency level\n */\nfunction ensureAlpha (alpha) {\n  if (is.defined(alpha)) {\n    if (is.number(alpha) && is.inRange(alpha, 0, 1)) {\n      this.options.ensureAlpha = alpha;\n    } else {\n      throw is.invalidParameterError('alpha', 'number between 0 and 1', alpha);\n    }\n  } else {\n    this.options.ensureAlpha = 1;\n  }\n  return this;\n}\n\n/**\n * Extract a single channel from a multi-channel image.\n *\n * @example\n * // green.jpg is a greyscale image containing the green channel of the input\n * await sharp(input)\n *   .extractChannel('green')\n *   .toFile('green.jpg');\n *\n * @example\n * // red1 is the red value of the first pixel, red2 the second pixel etc.\n * const [red1, red2, ...] = await sharp(input)\n *   .extractChannel(0)\n *   .raw()\n *   .toBuffer();\n *\n * @param {number|string} channel - zero-indexed channel/band number to extract, or `red`, `green`, `blue` or `alpha`.\n * @returns {Sharp}\n * @throws {Error} Invalid channel\n */\nfunction extractChannel (channel) {\n  const channelMap = { red: 0, green: 1, blue: 2, alpha: 3 };\n  if (Object.keys(channelMap).includes(channel)) {\n    channel = channelMap[channel];\n  }\n  if (is.integer(channel) && is.inRange(channel, 0, 4)) {\n    this.options.extractChannel = channel;\n  } else {\n    throw is.invalidParameterError('channel', 'integer or one of: red, green, blue, alpha', channel);\n  }\n  return this;\n}\n\n/**\n * Join one or more channels to the image.\n * The meaning of the added channels depends on the output colourspace, set with `toColourspace()`.\n * By default the output image will be web-friendly sRGB, with additional channels interpreted as alpha channels.\n * Channel ordering follows vips convention:\n * - sRGB: 0: Red, 1: Green, 2: Blue, 3: Alpha.\n * - CMYK: 0: Magenta, 1: Cyan, 2: Yellow, 3: Black, 4: Alpha.\n *\n * Buffers may be any of the image formats supported by sharp.\n * For raw pixel input, the `options` object should contain a `raw` attribute, which follows the format of the attribute of the same name in the `sharp()` constructor.\n *\n * @param {Array<string|Buffer>|string|Buffer} images - one or more images (file paths, Buffers).\n * @param {Object} options - image options, see `sharp()` constructor.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction joinChannel (images, options) {\n  if (Array.isArray(images)) {\n    images.forEach(function (image) {\n      this.options.joinChannelIn.push(this._createInputDescriptor(image, options));\n    }, this);\n  } else {\n    this.options.joinChannelIn.push(this._createInputDescriptor(images, options));\n  }\n  return this;\n}\n\n/**\n * Perform a bitwise boolean operation on all input image channels (bands) to produce a single channel output image.\n *\n * @example\n * sharp('3-channel-rgb-input.png')\n *   .bandbool(sharp.bool.and)\n *   .toFile('1-channel-output.png', function (err, info) {\n *     // The output will be a single channel image where each pixel `P = R & G & B`.\n *     // If `I(1,1) = [247, 170, 14] = [0b11110111, 0b10101010, 0b00001111]`\n *     // then `O(1,1) = 0b11110111 & 0b10101010 & 0b00001111 = 0b00000010 = 2`.\n *   });\n *\n * @param {string} boolOp - one of `and`, `or` or `eor` to perform that bitwise operation, like the C logic operators `&`, `|` and `^` respectively.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction bandbool (boolOp) {\n  if (is.string(boolOp) && is.inArray(boolOp, ['and', 'or', 'eor'])) {\n    this.options.bandBoolOp = boolOp;\n  } else {\n    throw is.invalidParameterError('boolOp', 'one of: and, or, eor', boolOp);\n  }\n  return this;\n}\n\n/**\n * Decorate the Sharp prototype with channel-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Object.assign(Sharp.prototype, {\n    // Public instance functions\n    removeAlpha,\n    ensureAlpha,\n    extractChannel,\n    joinChannel,\n    bandbool\n  });\n  // Class attributes\n  Sharp.bool = bool;\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,sCAAsC;AAEtC;AAEA,MAAM;AAEN;;;CAGC,GACD,MAAM,OAAO;IACX,KAAK;IACL,IAAI;IACJ,KAAK;AACP;AAEA;;;;;;;;;;;;;CAaC,GACD,SAAS;IACP,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC3B,OAAO,IAAI;AACb;AAEA;;;;;;;;;;;;;;;;;;;;;;;CAuBC,GACD,SAAS,YAAa,KAAK;IACzB,IAAI,GAAG,OAAO,CAAC,QAAQ;QACrB,IAAI,GAAG,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,GAAG,IAAI;YAC/C,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;QAC7B,OAAO;YACL,MAAM,GAAG,qBAAqB,CAAC,SAAS,0BAA0B;QACpE;IACF,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG;IAC7B;IACA,OAAO,IAAI;AACb;AAEA;;;;;;;;;;;;;;;;;;;CAmBC,GACD,SAAS,eAAgB,OAAO;IAC9B,MAAM,aAAa;QAAE,KAAK;QAAG,OAAO;QAAG,MAAM;QAAG,OAAO;IAAE;IACzD,IAAI,OAAO,IAAI,CAAC,YAAY,QAAQ,CAAC,UAAU;QAC7C,UAAU,UAAU,CAAC,QAAQ;IAC/B;IACA,IAAI,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI;QACpD,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG;IAChC,OAAO;QACL,MAAM,GAAG,qBAAqB,CAAC,WAAW,8CAA8C;IAC1F;IACA,OAAO,IAAI;AACb;AAEA;;;;;;;;;;;;;;;CAeC,GACD,SAAS,YAAa,MAAM,EAAE,OAAO;IACnC,IAAI,MAAM,OAAO,CAAC,SAAS;QACzB,OAAO,OAAO,CAAC,SAAU,KAAK;YAC5B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,OAAO;QACrE,GAAG,IAAI;IACT,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,QAAQ;IACtE;IACA,OAAO,IAAI;AACb;AAEA;;;;;;;;;;;;;;;CAeC,GACD,SAAS,SAAU,MAAM;IACvB,IAAI,GAAG,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,QAAQ;QAAC;QAAO;QAAM;KAAM,GAAG;QACjE,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG;IAC5B,OAAO;QACL,MAAM,GAAG,qBAAqB,CAAC,UAAU,wBAAwB;IACnE;IACA,OAAO,IAAI;AACb;AAEA;;;CAGC,GACD,OAAO,OAAO,GAAG,SAAU,KAAK;IAC9B,OAAO,MAAM,CAAC,MAAM,SAAS,EAAE;QAC7B,4BAA4B;QAC5B;QACA;QACA;QACA;QACA;IACF;IACA,mBAAmB;IACnB,MAAM,IAAI,GAAG;AACf","ignoreList":[0]}},
    {"offset": {"line": 3606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3611, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/output.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst path = require('node:path');\nconst is = require('./is');\nconst sharp = require('./sharp');\n\nconst formats = new Map([\n  ['heic', 'heif'],\n  ['heif', 'heif'],\n  ['avif', 'avif'],\n  ['jpeg', 'jpeg'],\n  ['jpg', 'jpeg'],\n  ['jpe', 'jpeg'],\n  ['tile', 'tile'],\n  ['dz', 'tile'],\n  ['png', 'png'],\n  ['raw', 'raw'],\n  ['tiff', 'tiff'],\n  ['tif', 'tiff'],\n  ['webp', 'webp'],\n  ['gif', 'gif'],\n  ['jp2', 'jp2'],\n  ['jpx', 'jp2'],\n  ['j2k', 'jp2'],\n  ['j2c', 'jp2'],\n  ['jxl', 'jxl']\n]);\n\nconst jp2Regex = /\\.(jp[2x]|j2[kc])$/i;\n\nconst errJp2Save = () => new Error('JP2 output requires libvips with support for OpenJPEG');\n\nconst bitdepthFromColourCount = (colours) => 1 << 31 - Math.clz32(Math.ceil(Math.log2(colours)));\n\n/**\n * Write output image data to a file.\n *\n * If an explicit output format is not selected, it will be inferred from the extension,\n * with JPEG, PNG, WebP, AVIF, TIFF, GIF, DZI, and libvips' V format supported.\n * Note that raw pixel data is only supported for buffer output.\n *\n * By default all metadata will be removed, which includes EXIF-based orientation.\n * See {@link #withmetadata|withMetadata} for control over this.\n *\n * The caller is responsible for ensuring directory structures and permissions exist.\n *\n * A `Promise` is returned when `callback` is not provided.\n *\n * @example\n * sharp(input)\n *   .toFile('output.png', (err, info) => { ... });\n *\n * @example\n * sharp(input)\n *   .toFile('output.png')\n *   .then(info => { ... })\n *   .catch(err => { ... });\n *\n * @param {string} fileOut - the path to write the image data to.\n * @param {Function} [callback] - called on completion with two arguments `(err, info)`.\n * `info` contains the output image `format`, `size` (bytes), `width`, `height`,\n * `channels` and `premultiplied` (indicating if premultiplication was used).\n * When using a crop strategy also contains `cropOffsetLeft` and `cropOffsetTop`.\n * When using the attention crop strategy also contains `attentionX` and `attentionY`, the focal point of the cropped region.\n * Animated output will also contain `pageHeight` and `pages`.\n * May also contain `textAutofitDpi` (dpi the font was rendered at) if image was created from text.\n * @returns {Promise<Object>} - when no callback is provided\n * @throws {Error} Invalid parameters\n */\nfunction toFile (fileOut, callback) {\n  let err;\n  if (!is.string(fileOut)) {\n    err = new Error('Missing output file path');\n  } else if (is.string(this.options.input.file) && path.resolve(this.options.input.file) === path.resolve(fileOut)) {\n    err = new Error('Cannot use same file for input and output');\n  } else if (jp2Regex.test(path.extname(fileOut)) && !this.constructor.format.jp2k.output.file) {\n    err = errJp2Save();\n  }\n  if (err) {\n    if (is.fn(callback)) {\n      callback(err);\n    } else {\n      return Promise.reject(err);\n    }\n  } else {\n    this.options.fileOut = fileOut;\n    const stack = Error();\n    return this._pipeline(callback, stack);\n  }\n  return this;\n}\n\n/**\n * Write output to a Buffer.\n * JPEG, PNG, WebP, AVIF, TIFF, GIF and raw pixel data output are supported.\n *\n * Use {@link #toformat|toFormat} or one of the format-specific functions such as {@link jpeg}, {@link png} etc. to set the output format.\n *\n * If no explicit format is set, the output format will match the input image, except SVG input which becomes PNG output.\n *\n * By default all metadata will be removed, which includes EXIF-based orientation.\n * See {@link #withmetadata|withMetadata} for control over this.\n *\n * `callback`, if present, gets three arguments `(err, data, info)` where:\n * - `err` is an error, if any.\n * - `data` is the output image data.\n * - `info` contains the output image `format`, `size` (bytes), `width`, `height`,\n * `channels` and `premultiplied` (indicating if premultiplication was used).\n * When using a crop strategy also contains `cropOffsetLeft` and `cropOffsetTop`.\n * Animated output will also contain `pageHeight` and `pages`.\n * May also contain `textAutofitDpi` (dpi the font was rendered at) if image was created from text.\n *\n * A `Promise` is returned when `callback` is not provided.\n *\n * @example\n * sharp(input)\n *   .toBuffer((err, data, info) => { ... });\n *\n * @example\n * sharp(input)\n *   .toBuffer()\n *   .then(data => { ... })\n *   .catch(err => { ... });\n *\n * @example\n * sharp(input)\n *   .png()\n *   .toBuffer({ resolveWithObject: true })\n *   .then(({ data, info }) => { ... })\n *   .catch(err => { ... });\n *\n * @example\n * const { data, info } = await sharp('my-image.jpg')\n *   // output the raw pixels\n *   .raw()\n *   .toBuffer({ resolveWithObject: true });\n *\n * // create a more type safe way to work with the raw pixel data\n * // this will not copy the data, instead it will change `data`s underlying ArrayBuffer\n * // so `data` and `pixelArray` point to the same memory location\n * const pixelArray = new Uint8ClampedArray(data.buffer);\n *\n * // When you are done changing the pixelArray, sharp takes the `pixelArray` as an input\n * const { width, height, channels } = info;\n * await sharp(pixelArray, { raw: { width, height, channels } })\n *   .toFile('my-changed-image.jpg');\n *\n * @param {Object} [options]\n * @param {boolean} [options.resolveWithObject] Resolve the Promise with an Object containing `data` and `info` properties instead of resolving only with `data`.\n * @param {Function} [callback]\n * @returns {Promise<Buffer>} - when no callback is provided\n */\nfunction toBuffer (options, callback) {\n  if (is.object(options)) {\n    this._setBooleanOption('resolveWithObject', options.resolveWithObject);\n  } else if (this.options.resolveWithObject) {\n    this.options.resolveWithObject = false;\n  }\n  this.options.fileOut = '';\n  const stack = Error();\n  return this._pipeline(is.fn(options) ? options : callback, stack);\n}\n\n/**\n * Keep all EXIF metadata from the input image in the output image.\n *\n * EXIF metadata is unsupported for TIFF output.\n *\n * @since 0.33.0\n *\n * @example\n * const outputWithExif = await sharp(inputWithExif)\n *   .keepExif()\n *   .toBuffer();\n *\n * @returns {Sharp}\n */\nfunction keepExif () {\n  this.options.keepMetadata |= 0b00001;\n  return this;\n}\n\n/**\n * Set EXIF metadata in the output image, ignoring any EXIF in the input image.\n *\n * @since 0.33.0\n *\n * @example\n * const dataWithExif = await sharp(input)\n *   .withExif({\n *     IFD0: {\n *       Copyright: 'The National Gallery'\n *     },\n *     IFD3: {\n *       GPSLatitudeRef: 'N',\n *       GPSLatitude: '51/1 30/1 3230/100',\n *       GPSLongitudeRef: 'W',\n *       GPSLongitude: '0/1 7/1 4366/100'\n *     }\n *   })\n *   .toBuffer();\n *\n * @param {Object<string, Object<string, string>>} exif Object keyed by IFD0, IFD1 etc. of key/value string pairs to write as EXIF data.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction withExif (exif) {\n  if (is.object(exif)) {\n    for (const [ifd, entries] of Object.entries(exif)) {\n      if (is.object(entries)) {\n        for (const [k, v] of Object.entries(entries)) {\n          if (is.string(v)) {\n            this.options.withExif[`exif-${ifd.toLowerCase()}-${k}`] = v;\n          } else {\n            throw is.invalidParameterError(`${ifd}.${k}`, 'string', v);\n          }\n        }\n      } else {\n        throw is.invalidParameterError(ifd, 'object', entries);\n      }\n    }\n  } else {\n    throw is.invalidParameterError('exif', 'object', exif);\n  }\n  this.options.withExifMerge = false;\n  return this.keepExif();\n}\n\n/**\n * Update EXIF metadata from the input image in the output image.\n *\n * @since 0.33.0\n *\n * @example\n * const dataWithMergedExif = await sharp(inputWithExif)\n *   .withExifMerge({\n *     IFD0: {\n *       Copyright: 'The National Gallery'\n *     }\n *   })\n *   .toBuffer();\n *\n * @param {Object<string, Object<string, string>>} exif Object keyed by IFD0, IFD1 etc. of key/value string pairs to write as EXIF data.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction withExifMerge (exif) {\n  this.withExif(exif);\n  this.options.withExifMerge = true;\n  return this;\n}\n\n/**\n * Keep ICC profile from the input image in the output image.\n *\n * Where necessary, will attempt to convert the output colour space to match the profile.\n *\n * @since 0.33.0\n *\n * @example\n * const outputWithIccProfile = await sharp(inputWithIccProfile)\n *   .keepIccProfile()\n *   .toBuffer();\n *\n * @returns {Sharp}\n */\nfunction keepIccProfile () {\n  this.options.keepMetadata |= 0b01000;\n  return this;\n}\n\n/**\n * Transform using an ICC profile and attach to the output image.\n *\n * This can either be an absolute filesystem path or\n * built-in profile name (`srgb`, `p3`, `cmyk`).\n *\n * @since 0.33.0\n *\n * @example\n * const outputWithP3 = await sharp(input)\n *   .withIccProfile('p3')\n *   .toBuffer();\n *\n * @param {string} icc - Absolute filesystem path to output ICC profile or built-in profile name (srgb, p3, cmyk).\n * @param {Object} [options]\n * @param {number} [options.attach=true] Should the ICC profile be included in the output image metadata?\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction withIccProfile (icc, options) {\n  if (is.string(icc)) {\n    this.options.withIccProfile = icc;\n  } else {\n    throw is.invalidParameterError('icc', 'string', icc);\n  }\n  this.keepIccProfile();\n  if (is.object(options)) {\n    if (is.defined(options.attach)) {\n      if (is.bool(options.attach)) {\n        if (!options.attach) {\n          this.options.keepMetadata &= ~0b01000;\n        }\n      } else {\n        throw is.invalidParameterError('attach', 'boolean', options.attach);\n      }\n    }\n  }\n  return this;\n}\n\n/**\n * Keep all metadata (EXIF, ICC, XMP, IPTC) from the input image in the output image.\n *\n * The default behaviour, when `keepMetadata` is not used, is to convert to the device-independent\n * sRGB colour space and strip all metadata, including the removal of any ICC profile.\n *\n * @since 0.33.0\n *\n * @example\n * const outputWithMetadata = await sharp(inputWithMetadata)\n *   .keepMetadata()\n *   .toBuffer();\n *\n * @returns {Sharp}\n */\nfunction keepMetadata () {\n  this.options.keepMetadata = 0b11111;\n  return this;\n}\n\n/**\n * Keep most metadata (EXIF, XMP, IPTC) from the input image in the output image.\n *\n * This will also convert to and add a web-friendly sRGB ICC profile if appropriate.\n *\n * Allows orientation and density to be set or updated.\n *\n * @example\n * const outputSrgbWithMetadata = await sharp(inputRgbWithMetadata)\n *   .withMetadata()\n *   .toBuffer();\n *\n * @example\n * // Set output metadata to 96 DPI\n * const data = await sharp(input)\n *   .withMetadata({ density: 96 })\n *   .toBuffer();\n *\n * @param {Object} [options]\n * @param {number} [options.orientation] Used to update the EXIF `Orientation` tag, integer between 1 and 8.\n * @param {number} [options.density] Number of pixels per inch (DPI).\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction withMetadata (options) {\n  this.keepMetadata();\n  this.withIccProfile('srgb');\n  if (is.object(options)) {\n    if (is.defined(options.orientation)) {\n      if (is.integer(options.orientation) && is.inRange(options.orientation, 1, 8)) {\n        this.options.withMetadataOrientation = options.orientation;\n      } else {\n        throw is.invalidParameterError('orientation', 'integer between 1 and 8', options.orientation);\n      }\n    }\n    if (is.defined(options.density)) {\n      if (is.number(options.density) && options.density > 0) {\n        this.options.withMetadataDensity = options.density;\n      } else {\n        throw is.invalidParameterError('density', 'positive number', options.density);\n      }\n    }\n    if (is.defined(options.icc)) {\n      this.withIccProfile(options.icc);\n    }\n    if (is.defined(options.exif)) {\n      this.withExifMerge(options.exif);\n    }\n  }\n  return this;\n}\n\n/**\n * Force output to a given format.\n *\n * @example\n * // Convert any input to PNG output\n * const data = await sharp(input)\n *   .toFormat('png')\n *   .toBuffer();\n *\n * @param {(string|Object)} format - as a string or an Object with an 'id' attribute\n * @param {Object} options - output options\n * @returns {Sharp}\n * @throws {Error} unsupported format or options\n */\nfunction toFormat (format, options) {\n  const actualFormat = formats.get((is.object(format) && is.string(format.id) ? format.id : format).toLowerCase());\n  if (!actualFormat) {\n    throw is.invalidParameterError('format', `one of: ${[...formats.keys()].join(', ')}`, format);\n  }\n  return this[actualFormat](options);\n}\n\n/**\n * Use these JPEG options for output image.\n *\n * @example\n * // Convert any input to very high quality JPEG output\n * const data = await sharp(input)\n *   .jpeg({\n *     quality: 100,\n *     chromaSubsampling: '4:4:4'\n *   })\n *   .toBuffer();\n *\n * @example\n * // Use mozjpeg to reduce output JPEG file size (slower)\n * const data = await sharp(input)\n *   .jpeg({ mozjpeg: true })\n *   .toBuffer();\n *\n * @param {Object} [options] - output options\n * @param {number} [options.quality=80] - quality, integer 1-100\n * @param {boolean} [options.progressive=false] - use progressive (interlace) scan\n * @param {string} [options.chromaSubsampling='4:2:0'] - set to '4:4:4' to prevent chroma subsampling otherwise defaults to '4:2:0' chroma subsampling\n * @param {boolean} [options.optimiseCoding=true] - optimise Huffman coding tables\n * @param {boolean} [options.optimizeCoding=true] - alternative spelling of optimiseCoding\n * @param {boolean} [options.mozjpeg=false] - use mozjpeg defaults, equivalent to `{ trellisQuantisation: true, overshootDeringing: true, optimiseScans: true, quantisationTable: 3 }`\n * @param {boolean} [options.trellisQuantisation=false] - apply trellis quantisation\n * @param {boolean} [options.overshootDeringing=false] - apply overshoot deringing\n * @param {boolean} [options.optimiseScans=false] - optimise progressive scans, forces progressive\n * @param {boolean} [options.optimizeScans=false] - alternative spelling of optimiseScans\n * @param {number} [options.quantisationTable=0] - quantization table to use, integer 0-8\n * @param {number} [options.quantizationTable=0] - alternative spelling of quantisationTable\n * @param {boolean} [options.force=true] - force JPEG output, otherwise attempt to use input format\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction jpeg (options) {\n  if (is.object(options)) {\n    if (is.defined(options.quality)) {\n      if (is.integer(options.quality) && is.inRange(options.quality, 1, 100)) {\n        this.options.jpegQuality = options.quality;\n      } else {\n        throw is.invalidParameterError('quality', 'integer between 1 and 100', options.quality);\n      }\n    }\n    if (is.defined(options.progressive)) {\n      this._setBooleanOption('jpegProgressive', options.progressive);\n    }\n    if (is.defined(options.chromaSubsampling)) {\n      if (is.string(options.chromaSubsampling) && is.inArray(options.chromaSubsampling, ['4:2:0', '4:4:4'])) {\n        this.options.jpegChromaSubsampling = options.chromaSubsampling;\n      } else {\n        throw is.invalidParameterError('chromaSubsampling', 'one of: 4:2:0, 4:4:4', options.chromaSubsampling);\n      }\n    }\n    const optimiseCoding = is.bool(options.optimizeCoding) ? options.optimizeCoding : options.optimiseCoding;\n    if (is.defined(optimiseCoding)) {\n      this._setBooleanOption('jpegOptimiseCoding', optimiseCoding);\n    }\n    if (is.defined(options.mozjpeg)) {\n      if (is.bool(options.mozjpeg)) {\n        if (options.mozjpeg) {\n          this.options.jpegTrellisQuantisation = true;\n          this.options.jpegOvershootDeringing = true;\n          this.options.jpegOptimiseScans = true;\n          this.options.jpegProgressive = true;\n          this.options.jpegQuantisationTable = 3;\n        }\n      } else {\n        throw is.invalidParameterError('mozjpeg', 'boolean', options.mozjpeg);\n      }\n    }\n    const trellisQuantisation = is.bool(options.trellisQuantization) ? options.trellisQuantization : options.trellisQuantisation;\n    if (is.defined(trellisQuantisation)) {\n      this._setBooleanOption('jpegTrellisQuantisation', trellisQuantisation);\n    }\n    if (is.defined(options.overshootDeringing)) {\n      this._setBooleanOption('jpegOvershootDeringing', options.overshootDeringing);\n    }\n    const optimiseScans = is.bool(options.optimizeScans) ? options.optimizeScans : options.optimiseScans;\n    if (is.defined(optimiseScans)) {\n      this._setBooleanOption('jpegOptimiseScans', optimiseScans);\n      if (optimiseScans) {\n        this.options.jpegProgressive = true;\n      }\n    }\n    const quantisationTable = is.number(options.quantizationTable) ? options.quantizationTable : options.quantisationTable;\n    if (is.defined(quantisationTable)) {\n      if (is.integer(quantisationTable) && is.inRange(quantisationTable, 0, 8)) {\n        this.options.jpegQuantisationTable = quantisationTable;\n      } else {\n        throw is.invalidParameterError('quantisationTable', 'integer between 0 and 8', quantisationTable);\n      }\n    }\n  }\n  return this._updateFormatOut('jpeg', options);\n}\n\n/**\n * Use these PNG options for output image.\n *\n * By default, PNG output is full colour at 8 bits per pixel.\n *\n * Indexed PNG input at 1, 2 or 4 bits per pixel is converted to 8 bits per pixel.\n * Set `palette` to `true` for slower, indexed PNG output.\n *\n * For 16 bits per pixel output, convert to `rgb16` via\n * {@link /api-colour#tocolourspace|toColourspace}.\n *\n * @example\n * // Convert any input to full colour PNG output\n * const data = await sharp(input)\n *   .png()\n *   .toBuffer();\n *\n * @example\n * // Convert any input to indexed PNG output (slower)\n * const data = await sharp(input)\n *   .png({ palette: true })\n *   .toBuffer();\n *\n * @example\n * // Output 16 bits per pixel RGB(A)\n * const data = await sharp(input)\n *  .toColourspace('rgb16')\n *  .png()\n *  .toBuffer();\n *\n * @param {Object} [options]\n * @param {boolean} [options.progressive=false] - use progressive (interlace) scan\n * @param {number} [options.compressionLevel=6] - zlib compression level, 0 (fastest, largest) to 9 (slowest, smallest)\n * @param {boolean} [options.adaptiveFiltering=false] - use adaptive row filtering\n * @param {boolean} [options.palette=false] - quantise to a palette-based image with alpha transparency support\n * @param {number} [options.quality=100] - use the lowest number of colours needed to achieve given quality, sets `palette` to `true`\n * @param {number} [options.effort=7] - CPU effort, between 1 (fastest) and 10 (slowest), sets `palette` to `true`\n * @param {number} [options.colours=256] - maximum number of palette entries, sets `palette` to `true`\n * @param {number} [options.colors=256] - alternative spelling of `options.colours`, sets `palette` to `true`\n * @param {number} [options.dither=1.0] - level of Floyd-Steinberg error diffusion, sets `palette` to `true`\n * @param {boolean} [options.force=true] - force PNG output, otherwise attempt to use input format\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction png (options) {\n  if (is.object(options)) {\n    if (is.defined(options.progressive)) {\n      this._setBooleanOption('pngProgressive', options.progressive);\n    }\n    if (is.defined(options.compressionLevel)) {\n      if (is.integer(options.compressionLevel) && is.inRange(options.compressionLevel, 0, 9)) {\n        this.options.pngCompressionLevel = options.compressionLevel;\n      } else {\n        throw is.invalidParameterError('compressionLevel', 'integer between 0 and 9', options.compressionLevel);\n      }\n    }\n    if (is.defined(options.adaptiveFiltering)) {\n      this._setBooleanOption('pngAdaptiveFiltering', options.adaptiveFiltering);\n    }\n    const colours = options.colours || options.colors;\n    if (is.defined(colours)) {\n      if (is.integer(colours) && is.inRange(colours, 2, 256)) {\n        this.options.pngBitdepth = bitdepthFromColourCount(colours);\n      } else {\n        throw is.invalidParameterError('colours', 'integer between 2 and 256', colours);\n      }\n    }\n    if (is.defined(options.palette)) {\n      this._setBooleanOption('pngPalette', options.palette);\n    } else if ([options.quality, options.effort, options.colours, options.colors, options.dither].some(is.defined)) {\n      this._setBooleanOption('pngPalette', true);\n    }\n    if (this.options.pngPalette) {\n      if (is.defined(options.quality)) {\n        if (is.integer(options.quality) && is.inRange(options.quality, 0, 100)) {\n          this.options.pngQuality = options.quality;\n        } else {\n          throw is.invalidParameterError('quality', 'integer between 0 and 100', options.quality);\n        }\n      }\n      if (is.defined(options.effort)) {\n        if (is.integer(options.effort) && is.inRange(options.effort, 1, 10)) {\n          this.options.pngEffort = options.effort;\n        } else {\n          throw is.invalidParameterError('effort', 'integer between 1 and 10', options.effort);\n        }\n      }\n      if (is.defined(options.dither)) {\n        if (is.number(options.dither) && is.inRange(options.dither, 0, 1)) {\n          this.options.pngDither = options.dither;\n        } else {\n          throw is.invalidParameterError('dither', 'number between 0.0 and 1.0', options.dither);\n        }\n      }\n    }\n  }\n  return this._updateFormatOut('png', options);\n}\n\n/**\n * Use these WebP options for output image.\n *\n * @example\n * // Convert any input to lossless WebP output\n * const data = await sharp(input)\n *   .webp({ lossless: true })\n *   .toBuffer();\n *\n * @example\n * // Optimise the file size of an animated WebP\n * const outputWebp = await sharp(inputWebp, { animated: true })\n *   .webp({ effort: 6 })\n *   .toBuffer();\n *\n * @param {Object} [options] - output options\n * @param {number} [options.quality=80] - quality, integer 1-100\n * @param {number} [options.alphaQuality=100] - quality of alpha layer, integer 0-100\n * @param {boolean} [options.lossless=false] - use lossless compression mode\n * @param {boolean} [options.nearLossless=false] - use near_lossless compression mode\n * @param {boolean} [options.smartSubsample=false] - use high quality chroma subsampling\n * @param {string} [options.preset='default'] - named preset for preprocessing/filtering, one of: default, photo, picture, drawing, icon, text\n * @param {number} [options.effort=4] - CPU effort, between 0 (fastest) and 6 (slowest)\n * @param {number} [options.loop=0] - number of animation iterations, use 0 for infinite animation\n * @param {number|number[]} [options.delay] - delay(s) between animation frames (in milliseconds)\n * @param {boolean} [options.minSize=false] - prevent use of animation key frames to minimise file size (slow)\n * @param {boolean} [options.mixed=false] - allow mixture of lossy and lossless animation frames (slow)\n * @param {boolean} [options.force=true] - force WebP output, otherwise attempt to use input format\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction webp (options) {\n  if (is.object(options)) {\n    if (is.defined(options.quality)) {\n      if (is.integer(options.quality) && is.inRange(options.quality, 1, 100)) {\n        this.options.webpQuality = options.quality;\n      } else {\n        throw is.invalidParameterError('quality', 'integer between 1 and 100', options.quality);\n      }\n    }\n    if (is.defined(options.alphaQuality)) {\n      if (is.integer(options.alphaQuality) && is.inRange(options.alphaQuality, 0, 100)) {\n        this.options.webpAlphaQuality = options.alphaQuality;\n      } else {\n        throw is.invalidParameterError('alphaQuality', 'integer between 0 and 100', options.alphaQuality);\n      }\n    }\n    if (is.defined(options.lossless)) {\n      this._setBooleanOption('webpLossless', options.lossless);\n    }\n    if (is.defined(options.nearLossless)) {\n      this._setBooleanOption('webpNearLossless', options.nearLossless);\n    }\n    if (is.defined(options.smartSubsample)) {\n      this._setBooleanOption('webpSmartSubsample', options.smartSubsample);\n    }\n    if (is.defined(options.preset)) {\n      if (is.string(options.preset) && is.inArray(options.preset, ['default', 'photo', 'picture', 'drawing', 'icon', 'text'])) {\n        this.options.webpPreset = options.preset;\n      } else {\n        throw is.invalidParameterError('preset', 'one of: default, photo, picture, drawing, icon, text', options.preset);\n      }\n    }\n    if (is.defined(options.effort)) {\n      if (is.integer(options.effort) && is.inRange(options.effort, 0, 6)) {\n        this.options.webpEffort = options.effort;\n      } else {\n        throw is.invalidParameterError('effort', 'integer between 0 and 6', options.effort);\n      }\n    }\n    if (is.defined(options.minSize)) {\n      this._setBooleanOption('webpMinSize', options.minSize);\n    }\n    if (is.defined(options.mixed)) {\n      this._setBooleanOption('webpMixed', options.mixed);\n    }\n  }\n  trySetAnimationOptions(options, this.options);\n  return this._updateFormatOut('webp', options);\n}\n\n/**\n * Use these GIF options for the output image.\n *\n * The first entry in the palette is reserved for transparency.\n *\n * The palette of the input image will be re-used if possible.\n *\n * @since 0.30.0\n *\n * @example\n * // Convert PNG to GIF\n * await sharp(pngBuffer)\n *   .gif()\n *   .toBuffer();\n *\n * @example\n * // Convert animated WebP to animated GIF\n * await sharp('animated.webp', { animated: true })\n *   .toFile('animated.gif');\n *\n * @example\n * // Create a 128x128, cropped, non-dithered, animated thumbnail of an animated GIF\n * const out = await sharp('in.gif', { animated: true })\n *   .resize({ width: 128, height: 128 })\n *   .gif({ dither: 0 })\n *   .toBuffer();\n *\n * @example\n * // Lossy file size reduction of animated GIF\n * await sharp('in.gif', { animated: true })\n *   .gif({ interFrameMaxError: 8 })\n *   .toFile('optim.gif');\n *\n * @param {Object} [options] - output options\n * @param {boolean} [options.reuse=true] - re-use existing palette, otherwise generate new (slow)\n * @param {boolean} [options.progressive=false] - use progressive (interlace) scan\n * @param {number} [options.colours=256] - maximum number of palette entries, including transparency, between 2 and 256\n * @param {number} [options.colors=256] - alternative spelling of `options.colours`\n * @param {number} [options.effort=7] - CPU effort, between 1 (fastest) and 10 (slowest)\n * @param {number} [options.dither=1.0] - level of Floyd-Steinberg error diffusion, between 0 (least) and 1 (most)\n * @param {number} [options.interFrameMaxError=0] - maximum inter-frame error for transparency, between 0 (lossless) and 32\n * @param {number} [options.interPaletteMaxError=3] - maximum inter-palette error for palette reuse, between 0 and 256\n * @param {number} [options.loop=0] - number of animation iterations, use 0 for infinite animation\n * @param {number|number[]} [options.delay] - delay(s) between animation frames (in milliseconds)\n * @param {boolean} [options.force=true] - force GIF output, otherwise attempt to use input format\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction gif (options) {\n  if (is.object(options)) {\n    if (is.defined(options.reuse)) {\n      this._setBooleanOption('gifReuse', options.reuse);\n    }\n    if (is.defined(options.progressive)) {\n      this._setBooleanOption('gifProgressive', options.progressive);\n    }\n    const colours = options.colours || options.colors;\n    if (is.defined(colours)) {\n      if (is.integer(colours) && is.inRange(colours, 2, 256)) {\n        this.options.gifBitdepth = bitdepthFromColourCount(colours);\n      } else {\n        throw is.invalidParameterError('colours', 'integer between 2 and 256', colours);\n      }\n    }\n    if (is.defined(options.effort)) {\n      if (is.number(options.effort) && is.inRange(options.effort, 1, 10)) {\n        this.options.gifEffort = options.effort;\n      } else {\n        throw is.invalidParameterError('effort', 'integer between 1 and 10', options.effort);\n      }\n    }\n    if (is.defined(options.dither)) {\n      if (is.number(options.dither) && is.inRange(options.dither, 0, 1)) {\n        this.options.gifDither = options.dither;\n      } else {\n        throw is.invalidParameterError('dither', 'number between 0.0 and 1.0', options.dither);\n      }\n    }\n    if (is.defined(options.interFrameMaxError)) {\n      if (is.number(options.interFrameMaxError) && is.inRange(options.interFrameMaxError, 0, 32)) {\n        this.options.gifInterFrameMaxError = options.interFrameMaxError;\n      } else {\n        throw is.invalidParameterError('interFrameMaxError', 'number between 0.0 and 32.0', options.interFrameMaxError);\n      }\n    }\n    if (is.defined(options.interPaletteMaxError)) {\n      if (is.number(options.interPaletteMaxError) && is.inRange(options.interPaletteMaxError, 0, 256)) {\n        this.options.gifInterPaletteMaxError = options.interPaletteMaxError;\n      } else {\n        throw is.invalidParameterError('interPaletteMaxError', 'number between 0.0 and 256.0', options.interPaletteMaxError);\n      }\n    }\n  }\n  trySetAnimationOptions(options, this.options);\n  return this._updateFormatOut('gif', options);\n}\n\n/* istanbul ignore next */\n/**\n * Use these JP2 options for output image.\n *\n * Requires libvips compiled with support for OpenJPEG.\n * The prebuilt binaries do not include this - see\n * {@link https://sharp.pixelplumbing.com/install#custom-libvips installing a custom libvips}.\n *\n * @example\n * // Convert any input to lossless JP2 output\n * const data = await sharp(input)\n *   .jp2({ lossless: true })\n *   .toBuffer();\n *\n * @example\n * // Convert any input to very high quality JP2 output\n * const data = await sharp(input)\n *   .jp2({\n *     quality: 100,\n *     chromaSubsampling: '4:4:4'\n *   })\n *   .toBuffer();\n *\n * @since 0.29.1\n *\n * @param {Object} [options] - output options\n * @param {number} [options.quality=80] - quality, integer 1-100\n * @param {boolean} [options.lossless=false] - use lossless compression mode\n * @param {number} [options.tileWidth=512] - horizontal tile size\n * @param {number} [options.tileHeight=512] - vertical tile size\n * @param {string} [options.chromaSubsampling='4:4:4'] - set to '4:2:0' to use chroma subsampling\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction jp2 (options) {\n  if (!this.constructor.format.jp2k.output.buffer) {\n    throw errJp2Save();\n  }\n  if (is.object(options)) {\n    if (is.defined(options.quality)) {\n      if (is.integer(options.quality) && is.inRange(options.quality, 1, 100)) {\n        this.options.jp2Quality = options.quality;\n      } else {\n        throw is.invalidParameterError('quality', 'integer between 1 and 100', options.quality);\n      }\n    }\n    if (is.defined(options.lossless)) {\n      if (is.bool(options.lossless)) {\n        this.options.jp2Lossless = options.lossless;\n      } else {\n        throw is.invalidParameterError('lossless', 'boolean', options.lossless);\n      }\n    }\n    if (is.defined(options.tileWidth)) {\n      if (is.integer(options.tileWidth) && is.inRange(options.tileWidth, 1, 32768)) {\n        this.options.jp2TileWidth = options.tileWidth;\n      } else {\n        throw is.invalidParameterError('tileWidth', 'integer between 1 and 32768', options.tileWidth);\n      }\n    }\n    if (is.defined(options.tileHeight)) {\n      if (is.integer(options.tileHeight) && is.inRange(options.tileHeight, 1, 32768)) {\n        this.options.jp2TileHeight = options.tileHeight;\n      } else {\n        throw is.invalidParameterError('tileHeight', 'integer between 1 and 32768', options.tileHeight);\n      }\n    }\n    if (is.defined(options.chromaSubsampling)) {\n      if (is.string(options.chromaSubsampling) && is.inArray(options.chromaSubsampling, ['4:2:0', '4:4:4'])) {\n        this.options.jp2ChromaSubsampling = options.chromaSubsampling;\n      } else {\n        throw is.invalidParameterError('chromaSubsampling', 'one of: 4:2:0, 4:4:4', options.chromaSubsampling);\n      }\n    }\n  }\n  return this._updateFormatOut('jp2', options);\n}\n\n/**\n * Set animation options if available.\n * @private\n *\n * @param {Object} [source] - output options\n * @param {number} [source.loop=0] - number of animation iterations, use 0 for infinite animation\n * @param {number[]} [source.delay] - list of delays between animation frames (in milliseconds)\n * @param {Object} [target] - target object for valid options\n * @throws {Error} Invalid options\n */\nfunction trySetAnimationOptions (source, target) {\n  if (is.object(source) && is.defined(source.loop)) {\n    if (is.integer(source.loop) && is.inRange(source.loop, 0, 65535)) {\n      target.loop = source.loop;\n    } else {\n      throw is.invalidParameterError('loop', 'integer between 0 and 65535', source.loop);\n    }\n  }\n  if (is.object(source) && is.defined(source.delay)) {\n    // We allow singular values as well\n    if (is.integer(source.delay) && is.inRange(source.delay, 0, 65535)) {\n      target.delay = [source.delay];\n    } else if (\n      Array.isArray(source.delay) &&\n      source.delay.every(is.integer) &&\n      source.delay.every(v => is.inRange(v, 0, 65535))) {\n      target.delay = source.delay;\n    } else {\n      throw is.invalidParameterError('delay', 'integer or an array of integers between 0 and 65535', source.delay);\n    }\n  }\n}\n\n/**\n * Use these TIFF options for output image.\n *\n * The `density` can be set in pixels/inch via {@link #withmetadata|withMetadata}\n * instead of providing `xres` and `yres` in pixels/mm.\n *\n * @example\n * // Convert SVG input to LZW-compressed, 1 bit per pixel TIFF output\n * sharp('input.svg')\n *   .tiff({\n *     compression: 'lzw',\n *     bitdepth: 1\n *   })\n *   .toFile('1-bpp-output.tiff')\n *   .then(info => { ... });\n *\n * @param {Object} [options] - output options\n * @param {number} [options.quality=80] - quality, integer 1-100\n * @param {boolean} [options.force=true] - force TIFF output, otherwise attempt to use input format\n * @param {string} [options.compression='jpeg'] - compression options: none, jpeg, deflate, packbits, ccittfax4, lzw, webp, zstd, jp2k\n * @param {string} [options.predictor='horizontal'] - compression predictor options: none, horizontal, float\n * @param {boolean} [options.pyramid=false] - write an image pyramid\n * @param {boolean} [options.tile=false] - write a tiled tiff\n * @param {number} [options.tileWidth=256] - horizontal tile size\n * @param {number} [options.tileHeight=256] - vertical tile size\n * @param {number} [options.xres=1.0] - horizontal resolution in pixels/mm\n * @param {number} [options.yres=1.0] - vertical resolution in pixels/mm\n * @param {string} [options.resolutionUnit='inch'] - resolution unit options: inch, cm\n * @param {number} [options.bitdepth=8] - reduce bitdepth to 1, 2 or 4 bit\n * @param {boolean} [options.miniswhite=false] - write 1-bit images as miniswhite\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction tiff (options) {\n  if (is.object(options)) {\n    if (is.defined(options.quality)) {\n      if (is.integer(options.quality) && is.inRange(options.quality, 1, 100)) {\n        this.options.tiffQuality = options.quality;\n      } else {\n        throw is.invalidParameterError('quality', 'integer between 1 and 100', options.quality);\n      }\n    }\n    if (is.defined(options.bitdepth)) {\n      if (is.integer(options.bitdepth) && is.inArray(options.bitdepth, [1, 2, 4, 8])) {\n        this.options.tiffBitdepth = options.bitdepth;\n      } else {\n        throw is.invalidParameterError('bitdepth', '1, 2, 4 or 8', options.bitdepth);\n      }\n    }\n    // tiling\n    if (is.defined(options.tile)) {\n      this._setBooleanOption('tiffTile', options.tile);\n    }\n    if (is.defined(options.tileWidth)) {\n      if (is.integer(options.tileWidth) && options.tileWidth > 0) {\n        this.options.tiffTileWidth = options.tileWidth;\n      } else {\n        throw is.invalidParameterError('tileWidth', 'integer greater than zero', options.tileWidth);\n      }\n    }\n    if (is.defined(options.tileHeight)) {\n      if (is.integer(options.tileHeight) && options.tileHeight > 0) {\n        this.options.tiffTileHeight = options.tileHeight;\n      } else {\n        throw is.invalidParameterError('tileHeight', 'integer greater than zero', options.tileHeight);\n      }\n    }\n    // miniswhite\n    if (is.defined(options.miniswhite)) {\n      this._setBooleanOption('tiffMiniswhite', options.miniswhite);\n    }\n    // pyramid\n    if (is.defined(options.pyramid)) {\n      this._setBooleanOption('tiffPyramid', options.pyramid);\n    }\n    // resolution\n    if (is.defined(options.xres)) {\n      if (is.number(options.xres) && options.xres > 0) {\n        this.options.tiffXres = options.xres;\n      } else {\n        throw is.invalidParameterError('xres', 'number greater than zero', options.xres);\n      }\n    }\n    if (is.defined(options.yres)) {\n      if (is.number(options.yres) && options.yres > 0) {\n        this.options.tiffYres = options.yres;\n      } else {\n        throw is.invalidParameterError('yres', 'number greater than zero', options.yres);\n      }\n    }\n    // compression\n    if (is.defined(options.compression)) {\n      if (is.string(options.compression) && is.inArray(options.compression, ['none', 'jpeg', 'deflate', 'packbits', 'ccittfax4', 'lzw', 'webp', 'zstd', 'jp2k'])) {\n        this.options.tiffCompression = options.compression;\n      } else {\n        throw is.invalidParameterError('compression', 'one of: none, jpeg, deflate, packbits, ccittfax4, lzw, webp, zstd, jp2k', options.compression);\n      }\n    }\n    // predictor\n    if (is.defined(options.predictor)) {\n      if (is.string(options.predictor) && is.inArray(options.predictor, ['none', 'horizontal', 'float'])) {\n        this.options.tiffPredictor = options.predictor;\n      } else {\n        throw is.invalidParameterError('predictor', 'one of: none, horizontal, float', options.predictor);\n      }\n    }\n    // resolutionUnit\n    if (is.defined(options.resolutionUnit)) {\n      if (is.string(options.resolutionUnit) && is.inArray(options.resolutionUnit, ['inch', 'cm'])) {\n        this.options.tiffResolutionUnit = options.resolutionUnit;\n      } else {\n        throw is.invalidParameterError('resolutionUnit', 'one of: inch, cm', options.resolutionUnit);\n      }\n    }\n  }\n  return this._updateFormatOut('tiff', options);\n}\n\n/**\n * Use these AVIF options for output image.\n *\n * AVIF image sequences are not supported.\n * Prebuilt binaries support a bitdepth of 8 only.\n *\n * @example\n * const data = await sharp(input)\n *   .avif({ effort: 2 })\n *   .toBuffer();\n *\n * @example\n * const data = await sharp(input)\n *   .avif({ lossless: true })\n *   .toBuffer();\n *\n * @since 0.27.0\n *\n * @param {Object} [options] - output options\n * @param {number} [options.quality=50] - quality, integer 1-100\n * @param {boolean} [options.lossless=false] - use lossless compression\n * @param {number} [options.effort=4] - CPU effort, between 0 (fastest) and 9 (slowest)\n * @param {string} [options.chromaSubsampling='4:4:4'] - set to '4:2:0' to use chroma subsampling\n * @param {number} [options.bitdepth=8] - set bitdepth to 8, 10 or 12 bit\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction avif (options) {\n  return this.heif({ ...options, compression: 'av1' });\n}\n\n/**\n * Use these HEIF options for output image.\n *\n * Support for patent-encumbered HEIC images using `hevc` compression requires the use of a\n * globally-installed libvips compiled with support for libheif, libde265 and x265.\n *\n * @example\n * const data = await sharp(input)\n *   .heif({ compression: 'hevc' })\n *   .toBuffer();\n *\n * @since 0.23.0\n *\n * @param {Object} options - output options\n * @param {string} options.compression - compression format: av1, hevc\n * @param {number} [options.quality=50] - quality, integer 1-100\n * @param {boolean} [options.lossless=false] - use lossless compression\n * @param {number} [options.effort=4] - CPU effort, between 0 (fastest) and 9 (slowest)\n * @param {string} [options.chromaSubsampling='4:4:4'] - set to '4:2:0' to use chroma subsampling\n * @param {number} [options.bitdepth=8] - set bitdepth to 8, 10 or 12 bit\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction heif (options) {\n  if (is.object(options)) {\n    if (is.string(options.compression) && is.inArray(options.compression, ['av1', 'hevc'])) {\n      this.options.heifCompression = options.compression;\n    } else {\n      throw is.invalidParameterError('compression', 'one of: av1, hevc', options.compression);\n    }\n    if (is.defined(options.quality)) {\n      if (is.integer(options.quality) && is.inRange(options.quality, 1, 100)) {\n        this.options.heifQuality = options.quality;\n      } else {\n        throw is.invalidParameterError('quality', 'integer between 1 and 100', options.quality);\n      }\n    }\n    if (is.defined(options.lossless)) {\n      if (is.bool(options.lossless)) {\n        this.options.heifLossless = options.lossless;\n      } else {\n        throw is.invalidParameterError('lossless', 'boolean', options.lossless);\n      }\n    }\n    if (is.defined(options.effort)) {\n      if (is.integer(options.effort) && is.inRange(options.effort, 0, 9)) {\n        this.options.heifEffort = options.effort;\n      } else {\n        throw is.invalidParameterError('effort', 'integer between 0 and 9', options.effort);\n      }\n    }\n    if (is.defined(options.chromaSubsampling)) {\n      if (is.string(options.chromaSubsampling) && is.inArray(options.chromaSubsampling, ['4:2:0', '4:4:4'])) {\n        this.options.heifChromaSubsampling = options.chromaSubsampling;\n      } else {\n        throw is.invalidParameterError('chromaSubsampling', 'one of: 4:2:0, 4:4:4', options.chromaSubsampling);\n      }\n    }\n    if (is.defined(options.bitdepth)) {\n      if (is.integer(options.bitdepth) && is.inArray(options.bitdepth, [8, 10, 12])) {\n        if (options.bitdepth !== 8 && this.constructor.versions.heif) {\n          throw is.invalidParameterError('bitdepth when using prebuilt binaries', 8, options.bitdepth);\n        }\n        this.options.heifBitdepth = options.bitdepth;\n      } else {\n        throw is.invalidParameterError('bitdepth', '8, 10 or 12', options.bitdepth);\n      }\n    }\n  } else {\n    throw is.invalidParameterError('options', 'Object', options);\n  }\n  return this._updateFormatOut('heif', options);\n}\n\n/**\n * Use these JPEG-XL (JXL) options for output image.\n *\n * This feature is experimental, please do not use in production systems.\n *\n * Requires libvips compiled with support for libjxl.\n * The prebuilt binaries do not include this - see\n * {@link https://sharp.pixelplumbing.com/install#custom-libvips installing a custom libvips}.\n *\n * Image metadata (EXIF, XMP) is unsupported.\n *\n * @since 0.31.3\n *\n * @param {Object} [options] - output options\n * @param {number} [options.distance=1.0] - maximum encoding error, between 0 (highest quality) and 15 (lowest quality)\n * @param {number} [options.quality] - calculate `distance` based on JPEG-like quality, between 1 and 100, overrides distance if specified\n * @param {number} [options.decodingTier=0] - target decode speed tier, between 0 (highest quality) and 4 (lowest quality)\n * @param {boolean} [options.lossless=false] - use lossless compression\n * @param {number} [options.effort=7] - CPU effort, between 3 (fastest) and 9 (slowest)\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction jxl (options) {\n  if (is.object(options)) {\n    if (is.defined(options.quality)) {\n      if (is.integer(options.quality) && is.inRange(options.quality, 1, 100)) {\n        // https://github.com/libjxl/libjxl/blob/0aeea7f180bafd6893c1db8072dcb67d2aa5b03d/tools/cjxl_main.cc#L640-L644\n        this.options.jxlDistance = options.quality >= 30\n          ? 0.1 + (100 - options.quality) * 0.09\n          : 53 / 3000 * options.quality * options.quality - 23 / 20 * options.quality + 25;\n      } else {\n        throw is.invalidParameterError('quality', 'integer between 1 and 100', options.quality);\n      }\n    } else if (is.defined(options.distance)) {\n      if (is.number(options.distance) && is.inRange(options.distance, 0, 15)) {\n        this.options.jxlDistance = options.distance;\n      } else {\n        throw is.invalidParameterError('distance', 'number between 0.0 and 15.0', options.distance);\n      }\n    }\n    if (is.defined(options.decodingTier)) {\n      if (is.integer(options.decodingTier) && is.inRange(options.decodingTier, 0, 4)) {\n        this.options.jxlDecodingTier = options.decodingTier;\n      } else {\n        throw is.invalidParameterError('decodingTier', 'integer between 0 and 4', options.decodingTier);\n      }\n    }\n    if (is.defined(options.lossless)) {\n      if (is.bool(options.lossless)) {\n        this.options.jxlLossless = options.lossless;\n      } else {\n        throw is.invalidParameterError('lossless', 'boolean', options.lossless);\n      }\n    }\n    if (is.defined(options.effort)) {\n      if (is.integer(options.effort) && is.inRange(options.effort, 3, 9)) {\n        this.options.jxlEffort = options.effort;\n      } else {\n        throw is.invalidParameterError('effort', 'integer between 3 and 9', options.effort);\n      }\n    }\n  }\n  return this._updateFormatOut('jxl', options);\n}\n\n/**\n * Force output to be raw, uncompressed pixel data.\n * Pixel ordering is left-to-right, top-to-bottom, without padding.\n * Channel ordering will be RGB or RGBA for non-greyscale colourspaces.\n *\n * @example\n * // Extract raw, unsigned 8-bit RGB pixel data from JPEG input\n * const { data, info } = await sharp('input.jpg')\n *   .raw()\n *   .toBuffer({ resolveWithObject: true });\n *\n * @example\n * // Extract alpha channel as raw, unsigned 16-bit pixel data from PNG input\n * const data = await sharp('input.png')\n *   .ensureAlpha()\n *   .extractChannel(3)\n *   .toColourspace('b-w')\n *   .raw({ depth: 'ushort' })\n *   .toBuffer();\n *\n * @param {Object} [options] - output options\n * @param {string} [options.depth='uchar'] - bit depth, one of: char, uchar (default), short, ushort, int, uint, float, complex, double, dpcomplex\n * @returns {Sharp}\n * @throws {Error} Invalid options\n */\nfunction raw (options) {\n  if (is.object(options)) {\n    if (is.defined(options.depth)) {\n      if (is.string(options.depth) && is.inArray(options.depth,\n        ['char', 'uchar', 'short', 'ushort', 'int', 'uint', 'float', 'complex', 'double', 'dpcomplex']\n      )) {\n        this.options.rawDepth = options.depth;\n      } else {\n        throw is.invalidParameterError('depth', 'one of: char, uchar, short, ushort, int, uint, float, complex, double, dpcomplex', options.depth);\n      }\n    }\n  }\n  return this._updateFormatOut('raw');\n}\n\n/**\n * Use tile-based deep zoom (image pyramid) output.\n *\n * Set the format and options for tile images via the `toFormat`, `jpeg`, `png` or `webp` functions.\n * Use a `.zip` or `.szi` file extension with `toFile` to write to a compressed archive file format.\n *\n * The container will be set to `zip` when the output is a Buffer or Stream, otherwise it will default to `fs`.\n *\n * Requires libvips compiled with support for libgsf.\n * The prebuilt binaries do not include this - see\n * {@link https://sharp.pixelplumbing.com/install#custom-libvips installing a custom libvips}.\n *\n * @example\n *  sharp('input.tiff')\n *   .png()\n *   .tile({\n *     size: 512\n *   })\n *   .toFile('output.dz', function(err, info) {\n *     // output.dzi is the Deep Zoom XML definition\n *     // output_files contains 512x512 tiles grouped by zoom level\n *   });\n *\n * @example\n * const zipFileWithTiles = await sharp(input)\n *   .tile({ basename: \"tiles\" })\n *   .toBuffer();\n *\n * @example\n * const iiififier = sharp().tile({ layout: \"iiif\" });\n * readableStream\n *   .pipe(iiififier)\n *   .pipe(writeableStream);\n *\n * @param {Object} [options]\n * @param {number} [options.size=256] tile size in pixels, a value between 1 and 8192.\n * @param {number} [options.overlap=0] tile overlap in pixels, a value between 0 and 8192.\n * @param {number} [options.angle=0] tile angle of rotation, must be a multiple of 90.\n * @param {string|Object} [options.background={r: 255, g: 255, b: 255, alpha: 1}] - background colour, parsed by the [color](https://www.npmjs.org/package/color) module, defaults to white without transparency.\n * @param {string} [options.depth] how deep to make the pyramid, possible values are `onepixel`, `onetile` or `one`, default based on layout.\n * @param {number} [options.skipBlanks=-1] Threshold to skip tile generation. Range is 0-255 for 8-bit images, 0-65535 for 16-bit images. Default is 5 for `google` layout, -1 (no skip) otherwise.\n * @param {string} [options.container='fs'] tile container, with value `fs` (filesystem) or `zip` (compressed file).\n * @param {string} [options.layout='dz'] filesystem layout, possible values are `dz`, `iiif`, `iiif3`, `zoomify` or `google`.\n * @param {boolean} [options.centre=false] centre image in tile.\n * @param {boolean} [options.center=false] alternative spelling of centre.\n * @param {string} [options.id='https://example.com/iiif'] when `layout` is `iiif`/`iiif3`, sets the `@id`/`id` attribute of `info.json`\n * @param {string} [options.basename] the name of the directory within the zip file when container is `zip`.\n * @returns {Sharp}\n * @throws {Error} Invalid parameters\n */\nfunction tile (options) {\n  if (is.object(options)) {\n    // Size of square tiles, in pixels\n    if (is.defined(options.size)) {\n      if (is.integer(options.size) && is.inRange(options.size, 1, 8192)) {\n        this.options.tileSize = options.size;\n      } else {\n        throw is.invalidParameterError('size', 'integer between 1 and 8192', options.size);\n      }\n    }\n    // Overlap of tiles, in pixels\n    if (is.defined(options.overlap)) {\n      if (is.integer(options.overlap) && is.inRange(options.overlap, 0, 8192)) {\n        if (options.overlap > this.options.tileSize) {\n          throw is.invalidParameterError('overlap', `<= size (${this.options.tileSize})`, options.overlap);\n        }\n        this.options.tileOverlap = options.overlap;\n      } else {\n        throw is.invalidParameterError('overlap', 'integer between 0 and 8192', options.overlap);\n      }\n    }\n    // Container\n    if (is.defined(options.container)) {\n      if (is.string(options.container) && is.inArray(options.container, ['fs', 'zip'])) {\n        this.options.tileContainer = options.container;\n      } else {\n        throw is.invalidParameterError('container', 'one of: fs, zip', options.container);\n      }\n    }\n    // Layout\n    if (is.defined(options.layout)) {\n      if (is.string(options.layout) && is.inArray(options.layout, ['dz', 'google', 'iiif', 'iiif3', 'zoomify'])) {\n        this.options.tileLayout = options.layout;\n      } else {\n        throw is.invalidParameterError('layout', 'one of: dz, google, iiif, iiif3, zoomify', options.layout);\n      }\n    }\n    // Angle of rotation,\n    if (is.defined(options.angle)) {\n      if (is.integer(options.angle) && !(options.angle % 90)) {\n        this.options.tileAngle = options.angle;\n      } else {\n        throw is.invalidParameterError('angle', 'positive/negative multiple of 90', options.angle);\n      }\n    }\n    // Background colour\n    this._setBackgroundColourOption('tileBackground', options.background);\n    // Depth of tiles\n    if (is.defined(options.depth)) {\n      if (is.string(options.depth) && is.inArray(options.depth, ['onepixel', 'onetile', 'one'])) {\n        this.options.tileDepth = options.depth;\n      } else {\n        throw is.invalidParameterError('depth', 'one of: onepixel, onetile, one', options.depth);\n      }\n    }\n    // Threshold to skip blank tiles\n    if (is.defined(options.skipBlanks)) {\n      if (is.integer(options.skipBlanks) && is.inRange(options.skipBlanks, -1, 65535)) {\n        this.options.tileSkipBlanks = options.skipBlanks;\n      } else {\n        throw is.invalidParameterError('skipBlanks', 'integer between -1 and 255/65535', options.skipBlanks);\n      }\n    } else if (is.defined(options.layout) && options.layout === 'google') {\n      this.options.tileSkipBlanks = 5;\n    }\n    // Center image in tile\n    const centre = is.bool(options.center) ? options.center : options.centre;\n    if (is.defined(centre)) {\n      this._setBooleanOption('tileCentre', centre);\n    }\n    // @id attribute for IIIF layout\n    if (is.defined(options.id)) {\n      if (is.string(options.id)) {\n        this.options.tileId = options.id;\n      } else {\n        throw is.invalidParameterError('id', 'string', options.id);\n      }\n    }\n    // Basename for zip container\n    if (is.defined(options.basename)) {\n      if (is.string(options.basename)) {\n        this.options.tileBasename = options.basename;\n      } else {\n        throw is.invalidParameterError('basename', 'string', options.basename);\n      }\n    }\n  }\n  // Format\n  if (is.inArray(this.options.formatOut, ['jpeg', 'png', 'webp'])) {\n    this.options.tileFormat = this.options.formatOut;\n  } else if (this.options.formatOut !== 'input') {\n    throw is.invalidParameterError('format', 'one of: jpeg, png, webp', this.options.formatOut);\n  }\n  return this._updateFormatOut('dz');\n}\n\n/**\n * Set a timeout for processing, in seconds.\n * Use a value of zero to continue processing indefinitely, the default behaviour.\n *\n * The clock starts when libvips opens an input image for processing.\n * Time spent waiting for a libuv thread to become available is not included.\n *\n * @example\n * // Ensure processing takes no longer than 3 seconds\n * try {\n *   const data = await sharp(input)\n *     .blur(1000)\n *     .timeout({ seconds: 3 })\n *     .toBuffer();\n * } catch (err) {\n *   if (err.message.includes('timeout')) { ... }\n * }\n *\n * @since 0.29.2\n *\n * @param {Object} options\n * @param {number} options.seconds - Number of seconds after which processing will be stopped\n * @returns {Sharp}\n */\nfunction timeout (options) {\n  if (!is.plainObject(options)) {\n    throw is.invalidParameterError('options', 'object', options);\n  }\n  if (is.integer(options.seconds) && is.inRange(options.seconds, 0, 3600)) {\n    this.options.timeoutSeconds = options.seconds;\n  } else {\n    throw is.invalidParameterError('seconds', 'integer between 0 and 3600', options.seconds);\n  }\n  return this;\n}\n\n/**\n * Update the output format unless options.force is false,\n * in which case revert to input format.\n * @private\n * @param {string} formatOut\n * @param {Object} [options]\n * @param {boolean} [options.force=true] - force output format, otherwise attempt to use input format\n * @returns {Sharp}\n */\nfunction _updateFormatOut (formatOut, options) {\n  if (!(is.object(options) && options.force === false)) {\n    this.options.formatOut = formatOut;\n  }\n  return this;\n}\n\n/**\n * Update a boolean attribute of the this.options Object.\n * @private\n * @param {string} key\n * @param {boolean} val\n * @throws {Error} Invalid key\n */\nfunction _setBooleanOption (key, val) {\n  if (is.bool(val)) {\n    this.options[key] = val;\n  } else {\n    throw is.invalidParameterError(key, 'boolean', val);\n  }\n}\n\n/**\n * Called by a WriteableStream to notify us it is ready for data.\n * @private\n */\nfunction _read () {\n  /* istanbul ignore else */\n  if (!this.options.streamOut) {\n    this.options.streamOut = true;\n    const stack = Error();\n    this._pipeline(undefined, stack);\n  }\n}\n\n/**\n * Invoke the C++ image processing pipeline\n * Supports callback, stream and promise variants\n * @private\n */\nfunction _pipeline (callback, stack) {\n  if (typeof callback === 'function') {\n    // output=file/buffer\n    if (this._isStreamInput()) {\n      // output=file/buffer, input=stream\n      this.on('finish', () => {\n        this._flattenBufferIn();\n        sharp.pipeline(this.options, (err, data, info) => {\n          if (err) {\n            callback(is.nativeError(err, stack));\n          } else {\n            callback(null, data, info);\n          }\n        });\n      });\n    } else {\n      // output=file/buffer, input=file/buffer\n      sharp.pipeline(this.options, (err, data, info) => {\n        if (err) {\n          callback(is.nativeError(err, stack));\n        } else {\n          callback(null, data, info);\n        }\n      });\n    }\n    return this;\n  } else if (this.options.streamOut) {\n    // output=stream\n    if (this._isStreamInput()) {\n      // output=stream, input=stream\n      this.once('finish', () => {\n        this._flattenBufferIn();\n        sharp.pipeline(this.options, (err, data, info) => {\n          if (err) {\n            this.emit('error', is.nativeError(err, stack));\n          } else {\n            this.emit('info', info);\n            this.push(data);\n          }\n          this.push(null);\n          this.on('end', () => this.emit('close'));\n        });\n      });\n      if (this.streamInFinished) {\n        this.emit('finish');\n      }\n    } else {\n      // output=stream, input=file/buffer\n      sharp.pipeline(this.options, (err, data, info) => {\n        if (err) {\n          this.emit('error', is.nativeError(err, stack));\n        } else {\n          this.emit('info', info);\n          this.push(data);\n        }\n        this.push(null);\n        this.on('end', () => this.emit('close'));\n      });\n    }\n    return this;\n  } else {\n    // output=promise\n    if (this._isStreamInput()) {\n      // output=promise, input=stream\n      return new Promise((resolve, reject) => {\n        this.once('finish', () => {\n          this._flattenBufferIn();\n          sharp.pipeline(this.options, (err, data, info) => {\n            if (err) {\n              reject(is.nativeError(err, stack));\n            } else {\n              if (this.options.resolveWithObject) {\n                resolve({ data, info });\n              } else {\n                resolve(data);\n              }\n            }\n          });\n        });\n      });\n    } else {\n      // output=promise, input=file/buffer\n      return new Promise((resolve, reject) => {\n        sharp.pipeline(this.options, (err, data, info) => {\n          if (err) {\n            reject(is.nativeError(err, stack));\n          } else {\n            if (this.options.resolveWithObject) {\n              resolve({ data, info });\n            } else {\n              resolve(data);\n            }\n          }\n        });\n      });\n    }\n  }\n}\n\n/**\n * Decorate the Sharp prototype with output-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Object.assign(Sharp.prototype, {\n    // Public\n    toFile,\n    toBuffer,\n    keepExif,\n    withExif,\n    withExifMerge,\n    keepIccProfile,\n    withIccProfile,\n    keepMetadata,\n    withMetadata,\n    toFormat,\n    jpeg,\n    jp2,\n    png,\n    webp,\n    tiff,\n    avif,\n    heif,\n    jxl,\n    gif,\n    raw,\n    tile,\n    timeout,\n    // Private\n    _updateFormatOut,\n    _setBooleanOption,\n    _read,\n    _pipeline\n  });\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5281, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/utility.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst events = require('node:events');\nconst detectLibc = require('detect-libc');\n\nconst is = require('./is');\nconst { runtimePlatformArch } = require('./libvips');\nconst sharp = require('./sharp');\n\nconst runtimePlatform = runtimePlatformArch();\nconst libvipsVersion = sharp.libvipsVersion();\n\n/**\n * An Object containing nested boolean values representing the available input and output formats/methods.\n * @member\n * @example\n * console.log(sharp.format);\n * @returns {Object}\n */\nconst format = sharp.format();\nformat.heif.output.alias = ['avif', 'heic'];\nformat.jpeg.output.alias = ['jpe', 'jpg'];\nformat.tiff.output.alias = ['tif'];\nformat.jp2k.output.alias = ['j2c', 'j2k', 'jp2', 'jpx'];\n\n/**\n * An Object containing the available interpolators and their proper values\n * @readonly\n * @enum {string}\n */\nconst interpolators = {\n  /** [Nearest neighbour interpolation](http://en.wikipedia.org/wiki/Nearest-neighbor_interpolation). Suitable for image enlargement only. */\n  nearest: 'nearest',\n  /** [Bilinear interpolation](http://en.wikipedia.org/wiki/Bilinear_interpolation). Faster than bicubic but with less smooth results. */\n  bilinear: 'bilinear',\n  /** [Bicubic interpolation](http://en.wikipedia.org/wiki/Bicubic_interpolation) (the default). */\n  bicubic: 'bicubic',\n  /** [LBB interpolation](https://github.com/libvips/libvips/blob/master/libvips/resample/lbb.cpp#L100). Prevents some \"[acutance](http://en.wikipedia.org/wiki/Acutance)\" but typically reduces performance by a factor of 2. */\n  locallyBoundedBicubic: 'lbb',\n  /** [Nohalo interpolation](http://eprints.soton.ac.uk/268086/). Prevents acutance but typically reduces performance by a factor of 3. */\n  nohalo: 'nohalo',\n  /** [VSQBS interpolation](https://github.com/libvips/libvips/blob/master/libvips/resample/vsqbs.cpp#L48). Prevents \"staircasing\" when enlarging. */\n  vertexSplitQuadraticBasisSpline: 'vsqbs'\n};\n\n/**\n * An Object containing the version numbers of sharp, libvips\n * and (when using prebuilt binaries) its dependencies.\n *\n * @member\n * @example\n * console.log(sharp.versions);\n */\nlet versions = {\n  vips: libvipsVersion.semver\n};\n/* istanbul ignore next */\nif (!libvipsVersion.isGlobal) {\n  if (!libvipsVersion.isWasm) {\n    try {\n      versions = require(`@img/sharp-${runtimePlatform}/versions`);\n    } catch (_) {\n      try {\n        versions = require(`@img/sharp-libvips-${runtimePlatform}/versions`);\n      } catch (_) {}\n    }\n  } else {\n    try {\n      versions = require('@img/sharp-wasm32/versions');\n    } catch (_) {}\n  }\n}\nversions.sharp = require('../package.json').version;\n\n/* istanbul ignore next */\nif (versions.heif && format.heif) {\n  // Prebuilt binaries provide AV1\n  format.heif.input.fileSuffix = ['.avif'];\n  format.heif.output.alias = ['avif'];\n}\n\n/**\n * Gets or, when options are provided, sets the limits of _libvips'_ operation cache.\n * Existing entries in the cache will be trimmed after any change in limits.\n * This method always returns cache statistics,\n * useful for determining how much working memory is required for a particular task.\n *\n * @example\n * const stats = sharp.cache();\n * @example\n * sharp.cache( { items: 200 } );\n * sharp.cache( { files: 0 } );\n * sharp.cache(false);\n *\n * @param {Object|boolean} [options=true] - Object with the following attributes, or boolean where true uses default cache settings and false removes all caching\n * @param {number} [options.memory=50] - is the maximum memory in MB to use for this cache\n * @param {number} [options.files=20] - is the maximum number of files to hold open\n * @param {number} [options.items=100] - is the maximum number of operations to cache\n * @returns {Object}\n */\nfunction cache (options) {\n  if (is.bool(options)) {\n    if (options) {\n      // Default cache settings of 50MB, 20 files, 100 items\n      return sharp.cache(50, 20, 100);\n    } else {\n      return sharp.cache(0, 0, 0);\n    }\n  } else if (is.object(options)) {\n    return sharp.cache(options.memory, options.files, options.items);\n  } else {\n    return sharp.cache();\n  }\n}\ncache(true);\n\n/**\n * Gets or, when a concurrency is provided, sets\n * the maximum number of threads _libvips_ should use to process _each image_.\n * These are from a thread pool managed by glib,\n * which helps avoid the overhead of creating new threads.\n *\n * This method always returns the current concurrency.\n *\n * The default value is the number of CPU cores,\n * except when using glibc-based Linux without jemalloc,\n * where the default is `1` to help reduce memory fragmentation.\n *\n * A value of `0` will reset this to the number of CPU cores.\n *\n * Some image format libraries spawn additional threads,\n * e.g. libaom manages its own 4 threads when encoding AVIF images,\n * and these are independent of the value set here.\n *\n * The maximum number of images that sharp can process in parallel\n * is controlled by libuv's `UV_THREADPOOL_SIZE` environment variable,\n * which defaults to 4.\n *\n * https://nodejs.org/api/cli.html#uv_threadpool_sizesize\n *\n * For example, by default, a machine with 8 CPU cores will process\n * 4 images in parallel and use up to 8 threads per image,\n * so there will be up to 32 concurrent threads.\n *\n * @example\n * const threads = sharp.concurrency(); // 4\n * sharp.concurrency(2); // 2\n * sharp.concurrency(0); // 4\n *\n * @param {number} [concurrency]\n * @returns {number} concurrency\n */\nfunction concurrency (concurrency) {\n  return sharp.concurrency(is.integer(concurrency) ? concurrency : null);\n}\n/* istanbul ignore next */\nif (detectLibc.familySync() === detectLibc.GLIBC && !sharp._isUsingJemalloc()) {\n  // Reduce default concurrency to 1 when using glibc memory allocator\n  sharp.concurrency(1);\n} else if (detectLibc.familySync() === detectLibc.MUSL && sharp.concurrency() === 1024) {\n  // Reduce default concurrency when musl thread over-subscription detected\n  sharp.concurrency(require('node:os').availableParallelism());\n}\n\n/**\n * An EventEmitter that emits a `change` event when a task is either:\n * - queued, waiting for _libuv_ to provide a worker thread\n * - complete\n * @member\n * @example\n * sharp.queue.on('change', function(queueLength) {\n *   console.log('Queue contains ' + queueLength + ' task(s)');\n * });\n */\nconst queue = new events.EventEmitter();\n\n/**\n * Provides access to internal task counters.\n * - queue is the number of tasks this module has queued waiting for _libuv_ to provide a worker thread from its pool.\n * - process is the number of resize tasks currently being processed.\n *\n * @example\n * const counters = sharp.counters(); // { queue: 2, process: 4 }\n *\n * @returns {Object}\n */\nfunction counters () {\n  return sharp.counters();\n}\n\n/**\n * Get and set use of SIMD vector unit instructions.\n * Requires libvips to have been compiled with highway support.\n *\n * Improves the performance of `resize`, `blur` and `sharpen` operations\n * by taking advantage of the SIMD vector unit of the CPU, e.g. Intel SSE and ARM NEON.\n *\n * @example\n * const simd = sharp.simd();\n * // simd is `true` if the runtime use of highway is currently enabled\n * @example\n * const simd = sharp.simd(false);\n * // prevent libvips from using highway at runtime\n *\n * @param {boolean} [simd=true]\n * @returns {boolean}\n */\nfunction simd (simd) {\n  return sharp.simd(is.bool(simd) ? simd : null);\n}\n\n/**\n * Block libvips operations at runtime.\n *\n * This is in addition to the `VIPS_BLOCK_UNTRUSTED` environment variable,\n * which when set will block all \"untrusted\" operations.\n *\n * @since 0.32.4\n *\n * @example <caption>Block all TIFF input.</caption>\n * sharp.block({\n *   operation: ['VipsForeignLoadTiff']\n * });\n *\n * @param {Object} options\n * @param {Array<string>} options.operation - List of libvips low-level operation names to block.\n */\nfunction block (options) {\n  if (is.object(options)) {\n    if (Array.isArray(options.operation) && options.operation.every(is.string)) {\n      sharp.block(options.operation, true);\n    } else {\n      throw is.invalidParameterError('operation', 'Array<string>', options.operation);\n    }\n  } else {\n    throw is.invalidParameterError('options', 'object', options);\n  }\n}\n\n/**\n * Unblock libvips operations at runtime.\n *\n * This is useful for defining a list of allowed operations.\n *\n * @since 0.32.4\n *\n * @example <caption>Block all input except WebP from the filesystem.</caption>\n * sharp.block({\n *   operation: ['VipsForeignLoad']\n * });\n * sharp.unblock({\n *   operation: ['VipsForeignLoadWebpFile']\n * });\n *\n * @example <caption>Block all input except JPEG and PNG from a Buffer or Stream.</caption>\n * sharp.block({\n *   operation: ['VipsForeignLoad']\n * });\n * sharp.unblock({\n *   operation: ['VipsForeignLoadJpegBuffer', 'VipsForeignLoadPngBuffer']\n * });\n *\n * @param {Object} options\n * @param {Array<string>} options.operation - List of libvips low-level operation names to unblock.\n */\nfunction unblock (options) {\n  if (is.object(options)) {\n    if (Array.isArray(options.operation) && options.operation.every(is.string)) {\n      sharp.block(options.operation, false);\n    } else {\n      throw is.invalidParameterError('operation', 'Array<string>', options.operation);\n    }\n  } else {\n    throw is.invalidParameterError('options', 'object', options);\n  }\n}\n\n/**\n * Decorate the Sharp class with utility-related functions.\n * @private\n */\nmodule.exports = function (Sharp) {\n  Sharp.cache = cache;\n  Sharp.concurrency = concurrency;\n  Sharp.counters = counters;\n  Sharp.simd = simd;\n  Sharp.format = format;\n  Sharp.interpolators = interpolators;\n  Sharp.versions = versions;\n  Sharp.queue = queue;\n  Sharp.block = block;\n  Sharp.unblock = unblock;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5570, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5575, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/KIIT0001/Desktop/Projects/skillshare/node_modules/sharp/lib/index.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\nconst Sharp = require('./constructor');\nrequire('./input')(Sharp);\nrequire('./resize')(Sharp);\nrequire('./composite')(Sharp);\nrequire('./operation')(Sharp);\nrequire('./colour')(Sharp);\nrequire('./channel')(Sharp);\nrequire('./output')(Sharp);\nrequire('./utility')(Sharp);\n\nmodule.exports = Sharp;\n"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,sCAAsC;AAEtC;AAEA,MAAM;AACN,6FAAmB;AACnB,8FAAoB;AACpB,iGAAuB;AACvB,iGAAuB;AACvB,8FAAoB;AACpB,+FAAqB;AACrB,8FAAoB;AACpB,+FAAqB;AAErB,OAAO,OAAO,GAAG","ignoreList":[0]}},
    {"offset": {"line": 5588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}